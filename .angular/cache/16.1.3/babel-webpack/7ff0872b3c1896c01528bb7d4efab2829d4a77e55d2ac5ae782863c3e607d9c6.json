{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/field-type.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../text-field/text-field.component\";\nimport * as i4 from \"../multi-line-text/multi-line-text.component\";\nimport * as i5 from \"../choice-date-string/choice-date-string.component\";\nimport * as i6 from \"../checkbox-options-string/checkbox-options-string.component\";\nimport * as i7 from \"../combobox-options-string/combobox-options-string.component\";\nimport * as i8 from \"../radio-options-string/radio-options-string.component\";\nfunction FlexibleFieldControlComponent_div_0_app_text_field_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-text-field\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"fieldName\", ctx_r1.field.label)(\"formElement\", ctx_r1.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_multi_line_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-multi-line-text\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"fieldName\", ctx_r2.field.label)(\"formElement\", ctx_r2.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_choice_date_string_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-choice-date-string\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"fieldName\", ctx_r3.field.label)(\"required\", ctx_r3.field.required)(\"formElement\", ctx_r3.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_combobox_options_string_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-combobox-options-string\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"field\", ctx_r4.field)(\"required\", ctx_r4.field.required)(\"formElement\", ctx_r4.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_radio_options_string_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-radio-options-string\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"field\", ctx_r5.field)(\"required\", ctx_r5.field.required)(\"formElement\", ctx_r5.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_checkbox_options_string_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-checkbox-options-string\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"field\", ctx_r6.field)(\"required\", ctx_r6.field.required)(\"formElement\", ctx_r6.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FlexibleFieldControlComponent_div_0_app_text_field_1_Template, 1, 3, \"app-text-field\", 1);\n    i0.ɵɵtemplate(2, FlexibleFieldControlComponent_div_0_app_multi_line_text_2_Template, 1, 3, \"app-multi-line-text\", 1);\n    i0.ɵɵtemplate(3, FlexibleFieldControlComponent_div_0_app_choice_date_string_3_Template, 1, 4, \"app-choice-date-string\", 2);\n    i0.ɵɵtemplate(4, FlexibleFieldControlComponent_div_0_app_combobox_options_string_4_Template, 1, 4, \"app-combobox-options-string\", 3);\n    i0.ɵɵtemplate(5, FlexibleFieldControlComponent_div_0_app_radio_options_string_5_Template, 1, 4, \"app-radio-options-string\", 3);\n    i0.ɵɵtemplate(6, FlexibleFieldControlComponent_div_0_app_checkbox_options_string_6_Template, 1, 4, \"app-checkbox-options-string\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSingleLineText());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiLineText());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isDate());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isComboBox());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isRadioButton());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isCheckBox());\n  }\n}\nexport class FlexibleFieldControlComponent {\n  constructor(fieldTypeService) {\n    this.showError = false;\n    this.fieldTypeService = fieldTypeService;\n  }\n  isSingleLineText() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.singleLineText;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isMultiLineText() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.multiLineText;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isDate() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.date;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isComboBox() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.comboBox;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isCheckBox() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.checkBox;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isRadioButton() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.radioButton;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n}\nFlexibleFieldControlComponent.ɵfac = function FlexibleFieldControlComponent_Factory(t) {\n  return new (t || FlexibleFieldControlComponent)(i0.ɵɵdirectiveInject(i1.FieldTypeService));\n};\nFlexibleFieldControlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlexibleFieldControlComponent,\n  selectors: [[\"app-flexible-field-control\"]],\n  inputs: {\n    field: \"field\",\n    formElement: \"formElement\",\n    showError: \"showError\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"fieldName\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"fieldName\", \"required\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"field\", \"required\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"fieldName\", \"formElement\", \"showError\"], [3, \"fieldName\", \"required\", \"formElement\", \"showError\"], [3, \"field\", \"required\", \"formElement\", \"showError\"]],\n  template: function FlexibleFieldControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FlexibleFieldControlComponent_div_0_Template, 7, 6, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.fieldTypeService.typesLoaded);\n    }\n  },\n  dependencies: [i2.NgIf, i3.TextFieldComponent, i4.MultiLineTextComponent, i5.ChoiceDateStringComponent, i6.CheckboxOptionsStringComponent, i7.ComboboxOptionsStringComponent, i8.RadioOptionsStringComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r1","field","label","formElement","ctx_r2","ctx_r3","required","ctx_r4","ctx_r5","ctx_r6","ɵɵelementStart","ɵɵtemplate","FlexibleFieldControlComponent_div_0_app_text_field_1_Template","FlexibleFieldControlComponent_div_0_app_multi_line_text_2_Template","FlexibleFieldControlComponent_div_0_app_choice_date_string_3_Template","FlexibleFieldControlComponent_div_0_app_combobox_options_string_4_Template","FlexibleFieldControlComponent_div_0_app_radio_options_string_5_Template","FlexibleFieldControlComponent_div_0_app_checkbox_options_string_6_Template","ɵɵelementEnd","ɵɵadvance","ctx_r0","isSingleLineText","isMultiLineText","isDate","isComboBox","isRadioButton","isCheckBox","FlexibleFieldControlComponent","constructor","fieldTypeService","showError","type1","type","type2","singleLineText","areTypesEqual","multiLineText","date","comboBox","checkBox","radioButton","ɵɵdirectiveInject","i1","FieldTypeService","selectors","inputs","decls","vars","consts","template","FlexibleFieldControlComponent_Template","rf","ctx","FlexibleFieldControlComponent_div_0_Template","typesLoaded"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\flexible-field-control\\flexible-field-control.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\flexible-field-control\\flexible-field-control.component.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {Field} from \"../../entity/Field\";\r\nimport {FieldTypeService} from \"../../service/field-type.service\";\r\n\r\n@Component({\r\n  selector: 'app-flexible-field-control',\r\n  templateUrl: './flexible-field-control.component.html',\r\n  styleUrls: ['./flexible-field-control.component.css']\r\n})\r\nexport class FlexibleFieldControlComponent {\r\n  @Input() field: Field;\r\n  @Input() formElement: FormControl<string>;\r\n  @Input() showError: boolean = false;\r\n\r\n  fieldTypeService: FieldTypeService;\r\n\r\n  constructor(fieldTypeService: FieldTypeService) {\r\n    this.fieldTypeService = fieldTypeService;\r\n  }\r\n\r\n  isSingleLineText() {\r\n    let type1 = this.field.type;\r\n    let type2 = this.fieldTypeService.singleLineText;\r\n\r\n    return this.fieldTypeService.areTypesEqual(type1, type2);\r\n  }\r\n\r\n  isMultiLineText() {\r\n    let type1 = this.field.type;\r\n    let type2 = this.fieldTypeService.multiLineText;\r\n\r\n    return this.fieldTypeService.areTypesEqual(type1, type2);\r\n  }\r\n\r\n  isDate() {\r\n    let type1 = this.field.type;\r\n    let type2 = this.fieldTypeService.date;\r\n\r\n    return this.fieldTypeService.areTypesEqual(type1, type2);\r\n  }\r\n\r\n  isComboBox() {\r\n    let type1 = this.field.type;\r\n    let type2 = this.fieldTypeService.comboBox;\r\n\r\n    return this.fieldTypeService.areTypesEqual(type1, type2);\r\n  }\r\n\r\n  isCheckBox() {\r\n    let type1 = this.field.type;\r\n    let type2 = this.fieldTypeService.checkBox;\r\n\r\n    return this.fieldTypeService.areTypesEqual(type1, type2);\r\n  }\r\n\r\n  isRadioButton() {\r\n    let type1 = this.field.type;\r\n    let type2 = this.fieldTypeService.radioButton;\r\n\r\n    return this.fieldTypeService.areTypesEqual(type1, type2);\r\n  }\r\n}\r\n","<div *ngIf=\"fieldTypeService.typesLoaded\">\r\n  <app-text-field\r\n    *ngIf=\"isSingleLineText()\"\r\n\r\n    [fieldName]=\"field.label\"\r\n    [formElement]=\"formElement\"\r\n    [showError]=\"false\"\r\n  ></app-text-field>\r\n\r\n  <app-multi-line-text\r\n    *ngIf=\"isMultiLineText()\"\r\n\r\n    [fieldName]=\"field.label\"\r\n    [formElement]=\"formElement\"\r\n    [showError]=\"false\"\r\n  ></app-multi-line-text>\r\n\r\n  <app-choice-date-string\r\n    *ngIf=\"isDate()\"\r\n\r\n    [fieldName]=\"field.label\"\r\n    [required]=\"field.required\"\r\n    [formElement]=\"formElement\"\r\n    [showError]=\"false\"\r\n  ></app-choice-date-string>\r\n\r\n  <app-combobox-options-string\r\n    *ngIf=\"isComboBox()\"\r\n\r\n    [field]=\"field\"\r\n    [required]=\"field.required\"\r\n    [formElement]=\"formElement\"\r\n    [showError]=\"false\"\r\n  ></app-combobox-options-string>\r\n\r\n  <app-radio-options-string\r\n    *ngIf=\"isRadioButton()\"\r\n\r\n    [field]=\"field\"\r\n    [required]=\"field.required\"\r\n    [formElement]=\"formElement\"\r\n    [showError]=\"false\"\r\n  ></app-radio-options-string>\r\n\r\n  <app-checkbox-options-string\r\n    *ngIf=\"isCheckBox()\"\r\n\r\n    [field]=\"field\"\r\n    [required]=\"field.required\"\r\n    [formElement]=\"formElement\"\r\n    [showError]=\"false\"\r\n  ></app-checkbox-options-string>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}