{"ast":null,"code":"import { StompService } from \"@stomp/ng2-stompjs\";\nexport class MessagingService {\n  constructor(socketUrl, streamUrl) {\n    let stompConfig = {\n      url: socketUrl,\n      headers: {},\n      heartbeat_in: 0,\n      heartbeat_out: 20000,\n      reconnect_delay: 5000,\n      debug: true\n    };\n    this.stompService = new StompService(stompConfig);\n    this.messages = this.stompService.subscribe(streamUrl);\n  }\n  stream() {\n    return this.messages;\n  }\n  send(url, message) {\n    return this.stompService.publish(url, JSON.stringify(message));\n  }\n  state() {\n    return this.stompService.state;\n  }\n}","map":{"version":3,"names":["StompService","MessagingService","constructor","socketUrl","streamUrl","stompConfig","url","headers","heartbeat_in","heartbeat_out","reconnect_delay","debug","stompService","messages","subscribe","stream","send","message","publish","JSON","stringify","state"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\messaging-service.service.ts"],"sourcesContent":["import { StompService, StompConfig, StompState } from \"@stomp/ng2-stompjs\";\r\nimport { Message } from \"@stomp/stompjs\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\n\r\nexport class MessagingService {\r\n  private messages: Observable<Message>;\r\n  private stompService: StompService;\r\n\r\n  constructor(socketUrl: string, streamUrl: string) {\r\n    let stompConfig: StompConfig = {\r\n      url: socketUrl,\r\n      headers: {\r\n      },\r\n      heartbeat_in: 0,\r\n      heartbeat_out: 20000,\r\n      reconnect_delay: 5000,\r\n      debug: true\r\n    };\r\n\r\n    this.stompService = new StompService(stompConfig);\r\n\r\n    this.messages = this.stompService.subscribe(streamUrl);\r\n  }\r\n\r\n  public stream(): Observable<Message> {\r\n    return this.messages;\r\n  }\r\n\r\n  public send(url: string, message: any) {\r\n    return this.stompService.publish(url, JSON.stringify(message));\r\n  }\r\n\r\n  public state(): BehaviorSubject<StompState> {\r\n    return this.stompService.state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAiC,oBAAoB;AAI1E,OAAM,MAAOC,gBAAgB;EAI3BC,YAAYC,SAAiB,EAAEC,SAAiB;IAC9C,IAAIC,WAAW,GAAgB;MAC7BC,GAAG,EAAEH,SAAS;MACdI,OAAO,EAAE,EACR;MACDC,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE,KAAK;MACpBC,eAAe,EAAE,IAAI;MACrBC,KAAK,EAAE;KACR;IAED,IAAI,CAACC,YAAY,GAAG,IAAIZ,YAAY,CAACK,WAAW,CAAC;IAEjD,IAAI,CAACQ,QAAQ,GAAG,IAAI,CAACD,YAAY,CAACE,SAAS,CAACV,SAAS,CAAC;EACxD;EAEOW,MAAMA,CAAA;IACX,OAAO,IAAI,CAACF,QAAQ;EACtB;EAEOG,IAAIA,CAACV,GAAW,EAAEW,OAAY;IACnC,OAAO,IAAI,CAACL,YAAY,CAACM,OAAO,CAACZ,GAAG,EAAEa,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;EAChE;EAEOI,KAAKA,CAAA;IACV,OAAO,IAAI,CAACT,YAAY,CAACS,KAAK;EAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}