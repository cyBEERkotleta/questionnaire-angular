{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../little-components/text-field-placeholder/text-field-placeholder.component\";\nimport * as i6 from \"../../little-components/error-paragraph/error-paragraph.component\";\nimport * as i7 from \"../../little-components/middle-control/middle-control.component\";\nimport * as i8 from \"../../little-components/checkbox-single/checkbox-single.component\";\nimport * as i9 from \"../../little-components/text-field-password-placeholder/text-field-password-placeholder.component\";\nfunction LoginUserComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nexport let LoginUserComponent = /*#__PURE__*/(() => {\n  class LoginUserComponent {\n    constructor(userService, router) {\n      this.showAllErrors = false;\n      this.globalError = '';\n      this.form = new FormGroup({\n        email: new FormControl('', [Validators.email, Validators.required]),\n        password: new FormControl('', [Validators.required]),\n        rememberMe: new FormControl(false)\n      });\n      this.userService = userService;\n      this.router = router;\n    }\n    ngOnDestroy() {\n      if (this.subscription) this.subscription.unsubscribe();\n    }\n    isGlobalErrorSet() {\n      return this.globalError != '';\n    }\n    submit() {\n      if (this.anyErrorExists()) return;\n      this.loginUser();\n    }\n    anyErrorExists() {\n      this.resetGlobalError();\n      if (this.isAnyErrorInFields()) {\n        this.showAllErrors = true;\n        return true;\n      }\n      return false;\n    }\n    loginUser() {\n      let email = this.getEmailFromField();\n      let password = this.getPasswordFromField();\n      let rememberMe = this.getRememberMeOptionFromField();\n      this.subscription = this.userService.login(email, password, rememberMe).subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.navigateToMainPage();\n        } else {\n          this.globalError = result.message;\n        }\n      });\n    }\n    navigateToMainPage() {\n      this.router.navigate(['/']);\n    }\n    resetGlobalError() {\n      this.globalError = '';\n    }\n    getEmailFromField() {\n      return this.form.controls.email.getRawValue();\n    }\n    getPasswordFromField() {\n      return this.form.controls.password.getRawValue();\n    }\n    getRememberMeOptionFromField() {\n      return this.form.controls.rememberMe.getRawValue();\n    }\n    isAnyErrorInFields() {\n      return this.doesControlHaveError(this.form.controls.email) || this.doesControlHaveError(this.form.controls.password);\n    }\n    doesControlHaveError(formControl) {\n      return formControl.errors != null;\n    }\n  }\n  LoginUserComponent.ɵfac = function LoginUserComponent_Factory(t) {\n    return new (t || LoginUserComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  LoginUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginUserComponent,\n    selectors: [[\"app-login-user\"]],\n    decls: 16,\n    vars: 9,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [\"placeholder\", \"Email\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [3, \"paddingTop\"], [\"fieldName\", \"\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\", 3, \"formElement\"], [\"routerLink\", \"/email-to-restore-password\", 1, \"blue-bold-link-text\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [1, \"text-center\", \"fs-6\", \"pt-3\"], [1, \"text-black\"], [\"routerLink\", \"/register\", 1, \"blue-bold-link-text\"], [3, \"errorMessage\"]],\n    template: function LoginUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginUserComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtemplate(1, LoginUserComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n        i0.ɵɵelement(2, \"app-text-field-placeholder\", 2)(3, \"app-text-field-password-placeholder\", 3);\n        i0.ɵɵelementStart(4, \"app-middle-control\", 4);\n        i0.ɵɵelement(5, \"app-checkbox-single\", 5);\n        i0.ɵɵelementStart(6, \"a\", 6);\n        i0.ɵɵtext(7, \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"app-middle-control\", 4)(9, \"button\", 7);\n        i0.ɵɵtext(10, \"\\u0412\\u043E\\u0439\\u0442\\u0438\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"p\", 8)(12, \"span\", 9);\n        i0.ɵɵtext(13, \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"a\", 10);\n        i0.ɵɵtext(15, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.email)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.password)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"paddingTop\", 2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.rememberMe);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"paddingTop\", 2);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i2.RouterLink, i5.TextFieldPlaceholderComponent, i6.ErrorParagraphComponent, i7.MiddleControlComponent, i8.CheckboxSingleComponent, i9.TextFieldPasswordPlaceholderComponent]\n  });\n  return LoginUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}