{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/form.service\";\nimport * as i2 from \"../../service/user.service\";\nimport * as i3 from \"../../service/topic.service\";\nimport * as i4 from \"../../service/field.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../little-components/button-edit/button-edit.component\";\nimport * as i7 from \"../../little-components/button-delete/button-delete.component\";\nconst _c0 = function (a0) {\n  return {\n    \"bg-gray-100\": a0\n  };\n};\nfunction ManageQuestionnairesComponent_tbody_11_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 7)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelement(8, \"app-button-edit\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"app-button-delete\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const form_r2 = ctx.$implicit;\n    const even_r3 = ctx.even;\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, even_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(form_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(form_r2.topic.shownName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.fieldCounts[i_r4]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"editable\", form_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"deletable\", form_r2);\n  }\n}\nfunction ManageQuestionnairesComponent_tbody_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, ManageQuestionnairesComponent_tbody_11_tr_1_Template, 11, 8, \"tr\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.forms);\n  }\n}\nexport class ManageQuestionnairesComponent {\n  constructor(formService, userService, topicService, fieldService) {\n    this.formService = formService;\n    this.userService = userService;\n    this.topicService = topicService;\n    this.fieldService = fieldService;\n  }\n  ngOnInit() {\n    this.subscriptionUser = this.userService.updateCurrentUser().subscribe(result => {\n      this.user = result;\n      this.subscriptionForms = this.formService.getFormsByUserId(this.user.id).subscribe(forms => {\n        this.forms = forms;\n      });\n      this.subscriptionFieldCounts = this.fieldService.getFieldCountsOfUserForms(this.user.id).subscribe(fieldCounts => {\n        this.fieldCounts = fieldCounts;\n      });\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscriptionUser) this.subscriptionUser.unsubscribe();\n    if (this.subscriptionForms) this.subscriptionForms.unsubscribe();\n    if (this.subscriptionFieldCounts) this.subscriptionFieldCounts.unsubscribe();\n  }\n}\nManageQuestionnairesComponent.ɵfac = function ManageQuestionnairesComponent_Factory(t) {\n  return new (t || ManageQuestionnairesComponent)(i0.ɵɵdirectiveInject(i1.FormService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.TopicService), i0.ɵɵdirectiveInject(i4.FieldService));\n};\nManageQuestionnairesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageQuestionnairesComponent,\n  selectors: [[\"app-manage-questionnaires\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"table-white-gray\"], [1, \"w-5/12\", \"px-3\"], [1, \"w-3/12\", \"px-3\"], [1, \"w-2/12\", \"px-3\"], [1, \"w-1/12\", \"px-3\"], [4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"editable\"], [3, \"deletable\"]],\n  template: function ManageQuestionnairesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 2);\n      i0.ɵɵtext(6, \"\\u0422\\u0435\\u043C\\u0430\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 3);\n      i0.ɵɵtext(8, \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"th\", 4)(10, \"th\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, ManageQuestionnairesComponent_tbody_11_Template, 2, 1, \"tbody\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.forms && ctx.fieldCounts);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.ButtonEditComponent, i7.ButtonDeleteComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵpureFunction1","_c0","even_r3","ɵɵadvance","ɵɵtextInterpolate","form_r2","name","topic","shownName","ctx_r1","fieldCounts","i_r4","ɵɵtemplate","ManageQuestionnairesComponent_tbody_11_tr_1_Template","ctx_r0","forms","ManageQuestionnairesComponent","constructor","formService","userService","topicService","fieldService","ngOnInit","subscriptionUser","updateCurrentUser","subscribe","result","user","subscriptionForms","getFormsByUserId","id","subscriptionFieldCounts","getFieldCountsOfUserForms","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1","FormService","i2","UserService","i3","TopicService","i4","FieldService","selectors","decls","vars","consts","template","ManageQuestionnairesComponent_Template","rf","ctx","ManageQuestionnairesComponent_tbody_11_Template"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\manage-questionnaires\\manage-questionnaires.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\manage-questionnaires\\manage-questionnaires.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormService} from \"../../service/form.service\";\nimport {UserService} from \"../../service/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {Form} from \"../../entity/Form\";\nimport {User} from \"../../entity/User\";\nimport {Topic} from \"../../entity/Topic\";\nimport {TopicService} from \"../../service/topic.service\";\nimport {Field} from \"../../entity/Field\";\nimport {FieldService} from \"../../service/field.service\";\n\n@Component({\n  selector: 'app-manage-questionnaires',\n  templateUrl: './manage-questionnaires.component.html',\n  styleUrls: ['./manage-questionnaires.component.css']\n})\nexport class ManageQuestionnairesComponent implements OnInit, OnDestroy {\n  private formService: FormService;\n  private userService: UserService;\n  private topicService: TopicService;\n  private fieldService: FieldService;\n\n  user: User;\n  forms: Form[];\n  fieldCounts: number[];\n\n  private subscriptionUser: Subscription;\n  private subscriptionForms: Subscription;\n  private subscriptionFieldCounts: Subscription;\n\n  constructor(formService: FormService,\n              userService: UserService,\n              topicService: TopicService,\n              fieldService: FieldService) {\n    this.formService = formService;\n    this.userService = userService;\n    this.topicService = topicService;\n    this.fieldService = fieldService;\n  }\n\n  ngOnInit() {\n    this.subscriptionUser = this.userService.updateCurrentUser()\n      .subscribe(result => {\n        this.user = result;\n\n        this.subscriptionForms = this.formService.getFormsByUserId(this.user.id)\n          .subscribe(forms => {\n            this.forms = forms;\n          });\n\n        this.subscriptionFieldCounts = this.fieldService.getFieldCountsOfUserForms(this.user.id)\n          .subscribe(fieldCounts => {\n            this.fieldCounts = fieldCounts;\n          });\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptionUser)\n      this.subscriptionUser.unsubscribe();\n    if (this.subscriptionForms)\n      this.subscriptionForms.unsubscribe();\n    if (this.subscriptionFieldCounts)\n      this.subscriptionFieldCounts.unsubscribe();\n  }\n}\n","<table class=\"table-white-gray\"\n>\n  <thead>\n  <tr>\n    <th class=\"w-5/12 px-3\">Название</th>\n    <th class=\"w-3/12 px-3\">Тема</th>\n    <th class=\"w-2/12 px-3\">Вопросы</th>\n    <th class=\"w-1/12 px-3\"></th>\n    <th class=\"w-1/12 px-3\"></th>\n  </tr>\n  </thead>\n  <tbody *ngIf=\"forms && fieldCounts\">\n  <tr *ngFor=\"let form of forms; let even = even; let i = index\" [ngClass]=\"{'bg-gray-100': even}\">\n    <td>{{form.name}}</td>\n    <td>{{form.topic.shownName}}</td>\n    <td>{{fieldCounts[i]}}</td>\n    <td>\n      <app-button-edit\n        [editable]=\"form\"\n      ></app-button-edit>\n    </td>\n    <td>\n      <app-button-delete\n        [deletable]=\"form\"\n      ></app-button-delete>\n    </td>\n  </tr>\n  </tbody>\n</table>\n"],"mappings":";;;;;;;;;;;;;;;ICYEA,EAAA,CAAAC,cAAA,YAAiG;IAC3FD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACtBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAI,SAAA,yBAEmB;IACrBJ,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAI,SAAA,4BAEqB;IACvBJ,EAAA,CAAAG,YAAA,EAAK;;;;;;;IAbwDH,EAAA,CAAAK,UAAA,YAAAL,EAAA,CAAAM,eAAA,IAAAC,GAAA,EAAAC,OAAA,EAAiC;IAC1FR,EAAA,CAAAS,SAAA,GAAa;IAAbT,EAAA,CAAAU,iBAAA,CAAAC,OAAA,CAAAC,IAAA,CAAa;IACbZ,EAAA,CAAAS,SAAA,GAAwB;IAAxBT,EAAA,CAAAU,iBAAA,CAAAC,OAAA,CAAAE,KAAA,CAAAC,SAAA,CAAwB;IACxBd,EAAA,CAAAS,SAAA,GAAkB;IAAlBT,EAAA,CAAAU,iBAAA,CAAAK,MAAA,CAAAC,WAAA,CAAAC,IAAA,EAAkB;IAGlBjB,EAAA,CAAAS,SAAA,GAAiB;IAAjBT,EAAA,CAAAK,UAAA,aAAAM,OAAA,CAAiB;IAKjBX,EAAA,CAAAS,SAAA,GAAkB;IAAlBT,EAAA,CAAAK,UAAA,cAAAM,OAAA,CAAkB;;;;;IAZxBX,EAAA,CAAAC,cAAA,YAAoC;IACpCD,EAAA,CAAAkB,UAAA,IAAAC,oDAAA,iBAcK;IACLnB,EAAA,CAAAG,YAAA,EAAQ;;;;IAfaH,EAAA,CAAAS,SAAA,GAAU;IAAVT,EAAA,CAAAK,UAAA,YAAAe,MAAA,CAAAC,KAAA,CAAU;;;ADIjC,OAAM,MAAOC,6BAA6B;EAcxCC,YAAYC,WAAwB,EACxBC,WAAwB,EACxBC,YAA0B,EAC1BC,YAA0B;IACpC,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACJ,WAAW,CAACK,iBAAiB,EAAE,CACzDC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,IAAI,GAAGD,MAAM;MAElB,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACV,WAAW,CAACW,gBAAgB,CAAC,IAAI,CAACF,IAAI,CAACG,EAAE,CAAC,CACrEL,SAAS,CAACV,KAAK,IAAG;QACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;MACpB,CAAC,CAAC;MAEJ,IAAI,CAACgB,uBAAuB,GAAG,IAAI,CAACV,YAAY,CAACW,yBAAyB,CAAC,IAAI,CAACL,IAAI,CAACG,EAAE,CAAC,CACrFL,SAAS,CAACf,WAAW,IAAG;QACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;MAChC,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEAuB,WAAWA,CAAA;IACT,IAAI,IAAI,CAACV,gBAAgB,EACvB,IAAI,CAACA,gBAAgB,CAACW,WAAW,EAAE;IACrC,IAAI,IAAI,CAACN,iBAAiB,EACxB,IAAI,CAACA,iBAAiB,CAACM,WAAW,EAAE;IACtC,IAAI,IAAI,CAACH,uBAAuB,EAC9B,IAAI,CAACA,uBAAuB,CAACG,WAAW,EAAE;EAC9C;;AAhDWlB,6BAA6B,C;mBAA7BA,6BAA6B,EAAAtB,EAAA,CAAAyC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA3C,EAAA,CAAAyC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA7C,EAAA,CAAAyC,iBAAA,CAAAK,EAAA,CAAAC,YAAA,GAAA/C,EAAA,CAAAyC,iBAAA,CAAAO,EAAA,CAAAC,YAAA;AAAA;AAA7B3B,6BAA6B,C;QAA7BA,6BAA6B;EAAA4B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MChB1CxD,EAAA,CAAAC,cAAA,eACC;MAG2BD,EAAA,CAAAE,MAAA,uDAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACrCH,EAAA,CAAAC,cAAA,YAAwB;MAAAD,EAAA,CAAAE,MAAA,+BAAI;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACjCH,EAAA,CAAAC,cAAA,YAAwB;MAAAD,EAAA,CAAAE,MAAA,iDAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACpCH,EAAA,CAAAI,SAAA,YAA6B;MAE/BJ,EAAA,CAAAG,YAAA,EAAK;MAELH,EAAA,CAAAkB,UAAA,KAAAwC,+CAAA,mBAgBQ;MACV1D,EAAA,CAAAG,YAAA,EAAQ;;;MAjBEH,EAAA,CAAAS,SAAA,IAA0B;MAA1BT,EAAA,CAAAK,UAAA,SAAAoD,GAAA,CAAApC,KAAA,IAAAoC,GAAA,CAAAzC,WAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}