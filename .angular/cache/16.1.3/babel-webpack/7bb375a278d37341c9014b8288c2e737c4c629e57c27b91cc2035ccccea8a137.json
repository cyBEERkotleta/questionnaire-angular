{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterUsersPipe {\n  transform(users, search) {\n    let searchLower = search.toLowerCase();\n    return users.filter(u => u.firstName.toLowerCase().includes(searchLower) || u.lastName.toLowerCase().includes(searchLower) || (u.firstName + u.lastName).toLowerCase().includes(searchLower));\n  }\n}\nFilterUsersPipe.ɵfac = function FilterUsersPipe_Factory(t) {\n  return new (t || FilterUsersPipe)();\n};\nFilterUsersPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filterUsers\",\n  type: FilterUsersPipe,\n  pure: true\n});","map":{"version":3,"names":["FilterUsersPipe","transform","users","search","searchLower","toLowerCase","filter","u","firstName","includes","lastName","pure"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\pipes\\filter-users.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport {User} from \"../entity/User\";\n\n@Pipe({\n  name: 'filterUsers'\n})\nexport class FilterUsersPipe implements PipeTransform {\n\n  transform(users: User[], search: string): User[] {\n    let searchLower = search.toLowerCase();\n    return users.filter(u =>\n        u.firstName.toLowerCase().includes(searchLower) ||\n        u.lastName.toLowerCase().includes(searchLower) ||\n        (u.firstName + u.lastName).toLowerCase().includes(searchLower));\n  }\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,eAAe;EAE1BC,SAASA,CAACC,KAAa,EAAEC,MAAc;IACrC,IAAIC,WAAW,GAAGD,MAAM,CAACE,WAAW,EAAE;IACtC,OAAOH,KAAK,CAACI,MAAM,CAACC,CAAC,IACjBA,CAAC,CAACC,SAAS,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,WAAW,CAAC,IAC/CG,CAAC,CAACG,QAAQ,CAACL,WAAW,EAAE,CAACI,QAAQ,CAACL,WAAW,CAAC,IAC9C,CAACG,CAAC,CAACC,SAAS,GAAGD,CAAC,CAACG,QAAQ,EAAEL,WAAW,EAAE,CAACI,QAAQ,CAACL,WAAW,CAAC,CAAC;EACrE;;AARWJ,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;;QAAfA,eAAe;EAAAW,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}