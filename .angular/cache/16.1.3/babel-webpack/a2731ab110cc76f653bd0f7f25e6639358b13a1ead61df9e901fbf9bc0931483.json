{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/field-type.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../text-field/text-field.component\";\nimport * as i4 from \"../multi-line-text/multi-line-text.component\";\nimport * as i5 from \"../choice-date-string/choice-date-string.component\";\nimport * as i6 from \"../checkbox-options-string/checkbox-options-string.component\";\nimport * as i7 from \"../combobox-options-string/combobox-options-string.component\";\nimport * as i8 from \"../radio-options-string/radio-options-string.component\";\nfunction FlexibleFieldControlComponent_app_text_field_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-text-field\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fieldName\", ctx_r0.field.label)(\"formElement\", ctx_r0.formElement)(\"showError\", ctx_r0.showError);\n  }\n}\nfunction FlexibleFieldControlComponent_app_multi_line_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-multi-line-text\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fieldName\", ctx_r1.field.label)(\"formElement\", ctx_r1.formElement)(\"showError\", ctx_r1.showError);\n  }\n}\nfunction FlexibleFieldControlComponent_app_choice_date_string_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-choice-date-string\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fieldName\", ctx_r2.field.label)(\"formElement\", ctx_r2.formElement)(\"showError\", ctx_r2.showError);\n  }\n}\nfunction FlexibleFieldControlComponent_app_combobox_options_string_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-combobox-options-string\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"field\", ctx_r3.field)(\"formElement\", ctx_r3.formElement)(\"showError\", ctx_r3.showError);\n  }\n}\nfunction FlexibleFieldControlComponent_app_radio_options_string_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-radio-options-string\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"field\", ctx_r4.field)(\"formElement\", ctx_r4.formElement)(\"showError\", ctx_r4.showError);\n  }\n}\nfunction FlexibleFieldControlComponent_app_checkbox_options_string_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-checkbox-options-string\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"field\", ctx_r5.field)(\"formElement\", ctx_r5.formElement)(\"showError\", ctx_r5.showError);\n  }\n}\nexport class FlexibleFieldControlComponent {\n  constructor(fieldTypeService) {\n    this.showError = false;\n    this.fieldTypeService = fieldTypeService;\n  }\n  isSingleLineText() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.singleLineText;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isMultiLineText() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.multiLineText;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isDate() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.date;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isComboBox() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.comboBox;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isCheckBox() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.checkBox;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n  isRadioButton() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.radioButton;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n}\nFlexibleFieldControlComponent.ɵfac = function FlexibleFieldControlComponent_Factory(t) {\n  return new (t || FlexibleFieldControlComponent)(i0.ɵɵdirectiveInject(i1.FieldTypeService));\n};\nFlexibleFieldControlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlexibleFieldControlComponent,\n  selectors: [[\"app-flexible-field-control\"]],\n  inputs: {\n    field: \"field\",\n    formElement: \"formElement\",\n    showError: \"showError\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[3, \"fieldName\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"field\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"fieldName\", \"formElement\", \"showError\"], [3, \"field\", \"formElement\", \"showError\"]],\n  template: function FlexibleFieldControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FlexibleFieldControlComponent_app_text_field_0_Template, 1, 3, \"app-text-field\", 0);\n      i0.ɵɵtemplate(1, FlexibleFieldControlComponent_app_multi_line_text_1_Template, 1, 3, \"app-multi-line-text\", 0);\n      i0.ɵɵtemplate(2, FlexibleFieldControlComponent_app_choice_date_string_2_Template, 1, 3, \"app-choice-date-string\", 0);\n      i0.ɵɵtemplate(3, FlexibleFieldControlComponent_app_combobox_options_string_3_Template, 1, 3, \"app-combobox-options-string\", 1);\n      i0.ɵɵtemplate(4, FlexibleFieldControlComponent_app_radio_options_string_4_Template, 1, 3, \"app-radio-options-string\", 1);\n      i0.ɵɵtemplate(5, FlexibleFieldControlComponent_app_checkbox_options_string_5_Template, 1, 3, \"app-checkbox-options-string\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isSingleLineText());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiLineText());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDate());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isComboBox());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isRadioButton());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isCheckBox());\n    }\n  },\n  dependencies: [i2.NgIf, i3.TextFieldComponent, i4.MultiLineTextComponent, i5.ChoiceDateStringComponent, i6.CheckboxOptionsStringComponent, i7.ComboboxOptionsStringComponent, i8.RadioOptionsStringComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","field","label","formElement","showError","ctx_r1","ctx_r2","ctx_r3","ctx_r4","ctx_r5","FlexibleFieldControlComponent","constructor","fieldTypeService","isSingleLineText","type1","type","type2","singleLineText","areTypesEqual","isMultiLineText","multiLineText","isDate","date","isComboBox","comboBox","isCheckBox","checkBox","isRadioButton","radioButton","ɵɵdirectiveInject","i1","FieldTypeService","selectors","inputs","decls","vars","consts","template","FlexibleFieldControlComponent_Template","rf","ctx","ɵɵtemplate","FlexibleFieldControlComponent_app_text_field_0_Template","FlexibleFieldControlComponent_app_multi_line_text_1_Template","FlexibleFieldControlComponent_app_choice_date_string_2_Template","FlexibleFieldControlComponent_app_combobox_options_string_3_Template","FlexibleFieldControlComponent_app_radio_options_string_4_Template","FlexibleFieldControlComponent_app_checkbox_options_string_5_Template","ɵɵadvance"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\flexible-field-control\\flexible-field-control.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\flexible-field-control\\flexible-field-control.component.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\nimport {Field} from \"../../entity/Field\";\nimport {FieldTypeService} from \"../../service/field-type.service\";\n\n@Component({\n  selector: 'app-flexible-field-control',\n  templateUrl: './flexible-field-control.component.html',\n  styleUrls: ['./flexible-field-control.component.css']\n})\nexport class FlexibleFieldControlComponent {\n  @Input() field: Field;\n  @Input() formElement: FormControl<string>;\n  @Input() showError: boolean = false;\n\n  private fieldTypeService: FieldTypeService;\n\n  constructor(fieldTypeService: FieldTypeService) {\n    this.fieldTypeService = fieldTypeService;\n  }\n\n  isSingleLineText() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.singleLineText;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n\n  isMultiLineText() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.multiLineText;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n\n  isDate() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.date;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n\n  isComboBox() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.comboBox;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n\n  isCheckBox() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.checkBox;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n\n  isRadioButton() {\n    let type1 = this.field.type;\n    let type2 = this.fieldTypeService.radioButton;\n    return this.fieldTypeService.areTypesEqual(type1, type2);\n  }\n}\n","<app-text-field\n  *ngIf=\"isSingleLineText()\"\n\n  [fieldName]=\"field.label\"\n  [formElement]=\"formElement\"\n  [showError]=\"showError\"\n></app-text-field>\n\n<app-multi-line-text\n  *ngIf=\"isMultiLineText()\"\n\n  [fieldName]=\"field.label\"\n  [formElement]=\"formElement\"\n  [showError]=\"showError\"\n></app-multi-line-text>\n\n<app-choice-date-string\n  *ngIf=\"isDate()\"\n\n  [fieldName]=\"field.label\"\n  [formElement]=\"formElement\"\n  [showError]=\"showError\"\n></app-choice-date-string>\n\n<app-combobox-options-string\n  *ngIf=\"isComboBox()\"\n\n  [field]=\"field\"\n  [formElement]=\"formElement\"\n  [showError]=\"showError\"\n></app-combobox-options-string>\n\n<app-radio-options-string\n  *ngIf=\"isRadioButton()\"\n\n  [field]=\"field\"\n  [formElement]=\"formElement\"\n  [showError]=\"showError\"\n></app-radio-options-string>\n\n<app-checkbox-options-string\n  *ngIf=\"isCheckBox()\"\n\n  [field]=\"field\"\n  [formElement]=\"formElement\"\n  [showError]=\"showError\"\n></app-checkbox-options-string>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}