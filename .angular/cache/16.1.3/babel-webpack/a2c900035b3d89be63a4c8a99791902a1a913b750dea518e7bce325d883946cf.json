{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/form.service\";\nimport * as i2 from \"../../service/user.service\";\nimport * as i3 from \"../../service/topic.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../little-components/button-edit/button-edit.component\";\nimport * as i6 from \"../../little-components/button-delete/button-delete.component\";\nconst _c0 = function (a0) {\n  return {\n    \"bg-gray-100\": a0\n  };\n};\nfunction ManageQuestionnairesComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelement(8, \"app-button-edit\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"app-button-delete\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const form_r1 = ctx.$implicit;\n    const even_r2 = ctx.even;\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, even_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(form_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.topics[i_r3].shownName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.getActiveFieldCountOfForm(form_r1), \"/\", form_r1.fields.length, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"editable\", form_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"deletable\", form_r1);\n  }\n}\nexport class ManageQuestionnairesComponent {\n  constructor(formService, userService, topicService) {\n    this.formService = formService;\n    this.userService = userService;\n    this.topicService = topicService;\n  }\n  ngOnInit() {\n    this.subscriptionUser = this.userService.updateCurrentUser().subscribe(result => {\n      this.user = result;\n      this.subscriptionForms = this.formService.getFormsByUserId(this.user.id).subscribe(forms => {\n        this.forms = forms;\n        this.subscriptionTopics = this.topicService.getTopicsByForms(this.forms).subscribe(topics => {\n          this.topics = topics;\n        });\n      });\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscriptionUser) this.subscriptionUser.unsubscribe();\n    if (this.subscriptionForms) this.subscriptionForms.unsubscribe();\n    if (this.subscriptionTopics) this.subscriptionTopics.unsubscribe();\n  }\n  getActiveFieldCountOfForm(form) {\n    let count = 0;\n    for (let i = 0; i < form.fields.length; i++) {\n      if (form.fields[i].active) count++;\n    }\n    return count;\n  }\n}\nManageQuestionnairesComponent.ɵfac = function ManageQuestionnairesComponent_Factory(t) {\n  return new (t || ManageQuestionnairesComponent)(i0.ɵɵdirectiveInject(i1.FormService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.TopicService));\n};\nManageQuestionnairesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageQuestionnairesComponent,\n  selectors: [[\"app-manage-questionnaires\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[1, \"rounded-xl\", \"border-2\"], [1, \"table-responsive\", \"overflow-x-auto\", \"rounded-xl\", \"border-1\", \"border-gray-600\"], [1, \"col-md-3\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"editable\"], [3, \"deletable\"]],\n  template: function ManageQuestionnairesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"\\u0422\\u0435\\u043C\\u0430\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B (\\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0445/\\u043D\\u0435\\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0445)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"th\")(11, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"tbody\");\n      i0.ɵɵtemplate(13, ManageQuestionnairesComponent_tr_13_Template, 11, 9, \"tr\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.forms);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i5.ButtonEditComponent, i6.ButtonDeleteComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵpureFunction1","_c0","even_r2","ɵɵadvance","ɵɵtextInterpolate","form_r1","name","ctx_r0","topics","i_r3","shownName","ɵɵtextInterpolate2","getActiveFieldCountOfForm","fields","length","ManageQuestionnairesComponent","constructor","formService","userService","topicService","ngOnInit","subscriptionUser","updateCurrentUser","subscribe","result","user","subscriptionForms","getFormsByUserId","id","forms","subscriptionTopics","getTopicsByForms","ngOnDestroy","unsubscribe","form","count","i","active","ɵɵdirectiveInject","i1","FormService","i2","UserService","i3","TopicService","selectors","decls","vars","consts","template","ManageQuestionnairesComponent_Template","rf","ctx","ɵɵtemplate","ManageQuestionnairesComponent_tr_13_Template"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\manage-questionnaires\\manage-questionnaires.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\manage-questionnaires\\manage-questionnaires.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormService} from \"../../service/form.service\";\nimport {UserService} from \"../../service/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {Form} from \"../../entity/Form\";\nimport {User} from \"../../entity/User\";\nimport {Topic} from \"../../entity/Topic\";\nimport {TopicService} from \"../../service/topic.service\";\n\n@Component({\n  selector: 'app-manage-questionnaires',\n  templateUrl: './manage-questionnaires.component.html',\n  styleUrls: ['./manage-questionnaires.component.css']\n})\nexport class ManageQuestionnairesComponent implements OnInit, OnDestroy {\n  private formService: FormService;\n  private userService: UserService;\n  private topicService: TopicService;\n\n  user: User;\n  forms: Form[];\n  topics: Topic[];\n\n  private subscriptionUser: Subscription;\n  private subscriptionForms: Subscription;\n  private subscriptionTopics: Subscription;\n\n  constructor(formService: FormService,\n              userService: UserService,\n              topicService: TopicService) {\n    this.formService = formService;\n    this.userService = userService;\n    this.topicService = topicService;\n  }\n\n  ngOnInit() {\n    this.subscriptionUser = this.userService.updateCurrentUser()\n      .subscribe(result => {\n        this.user = result;\n\n        this.subscriptionForms = this.formService.getFormsByUserId(this.user.id)\n          .subscribe(forms => {\n            this.forms = forms;\n\n            this.subscriptionTopics = this.topicService.getTopicsByForms(this.forms)\n              .subscribe(topics => {\n                this.topics = topics;\n              })\n          });\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptionUser)\n      this.subscriptionUser.unsubscribe();\n    if (this.subscriptionForms)\n      this.subscriptionForms.unsubscribe();\n    if (this.subscriptionTopics)\n      this.subscriptionTopics.unsubscribe();\n  }\n\n  getActiveFieldCountOfForm(form: Form): number {\n    let count = 0;\n    for (let i = 0; i < form.fields.length; i++) {\n      if (form.fields[i].active)\n        count++;\n    }\n    return count;\n  }\n}\n","<div class=\"rounded-xl border-2\">\n<table class=\"table-responsive overflow-x-auto rounded-xl border-1 border-gray-600\">\n  <thead>\n  <tr>\n    <th class=\"col-md-3\">Название</th>\n    <th>Тема</th>\n    <th>Вопросы (активных/неактивных)</th>\n    <th></th>\n    <th></th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let form of forms; let even = even; let i = index\" [ngClass]=\"{'bg-gray-100': even}\">\n    <td>{{form.name}}</td>\n    <td>{{topics[i].shownName}}</td>\n    <td>{{getActiveFieldCountOfForm(form)}}/{{form.fields.length}}</td>\n    <td>\n      <app-button-edit\n        [editable]=\"form\"\n      ></app-button-edit>\n    </td>\n    <td>\n      <app-button-delete\n        [deletable]=\"form\"\n      ></app-button-delete>\n    </td>\n  </tr>\n  </tbody>\n</table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}