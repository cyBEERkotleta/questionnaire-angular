{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/field-type.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../text-field/text-field.component\";\nimport * as i4 from \"../multi-line-text/multi-line-text.component\";\nimport * as i5 from \"../choice-date-string/choice-date-string.component\";\nimport * as i6 from \"../checkbox-options-string/checkbox-options-string.component\";\nimport * as i7 from \"../combobox-options-string/combobox-options-string.component\";\nimport * as i8 from \"../radio-options-string/radio-options-string.component\";\nfunction FlexibleFieldControlComponent_div_0_app_text_field_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-text-field\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"fieldName\", ctx_r1.field.label)(\"formElement\", ctx_r1.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_multi_line_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-multi-line-text\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"fieldName\", ctx_r2.field.label)(\"formElement\", ctx_r2.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_choice_date_string_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-choice-date-string\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"fieldName\", ctx_r3.field.label)(\"required\", ctx_r3.field.required)(\"formElement\", ctx_r3.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_combobox_options_string_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-combobox-options-string\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"field\", ctx_r4.field)(\"required\", ctx_r4.field.required)(\"formElement\", ctx_r4.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_radio_options_string_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-radio-options-string\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"field\", ctx_r5.field)(\"required\", ctx_r5.field.required)(\"formElement\", ctx_r5.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_app_checkbox_options_string_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-checkbox-options-string\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"field\", ctx_r6.field)(\"required\", ctx_r6.field.required)(\"formElement\", ctx_r6.formElement)(\"showError\", false);\n  }\n}\nfunction FlexibleFieldControlComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FlexibleFieldControlComponent_div_0_app_text_field_1_Template, 1, 3, \"app-text-field\", 1);\n    i0.ɵɵtemplate(2, FlexibleFieldControlComponent_div_0_app_multi_line_text_2_Template, 1, 3, \"app-multi-line-text\", 1);\n    i0.ɵɵtemplate(3, FlexibleFieldControlComponent_div_0_app_choice_date_string_3_Template, 1, 4, \"app-choice-date-string\", 2);\n    i0.ɵɵtemplate(4, FlexibleFieldControlComponent_div_0_app_combobox_options_string_4_Template, 1, 4, \"app-combobox-options-string\", 3);\n    i0.ɵɵtemplate(5, FlexibleFieldControlComponent_div_0_app_radio_options_string_5_Template, 1, 4, \"app-radio-options-string\", 3);\n    i0.ɵɵtemplate(6, FlexibleFieldControlComponent_div_0_app_checkbox_options_string_6_Template, 1, 4, \"app-checkbox-options-string\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSingleLineText());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiLineText());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isDate());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isComboBox());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isRadioButton());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isCheckBox());\n  }\n}\nexport let FlexibleFieldControlComponent = /*#__PURE__*/(() => {\n  class FlexibleFieldControlComponent {\n    constructor(fieldTypeService) {\n      this.showError = false;\n      this.fieldTypeService = fieldTypeService;\n    }\n    isSingleLineText() {\n      let type1 = this.field.type;\n      let type2 = this.fieldTypeService.singleLineText;\n      return this.fieldTypeService.areTypesEqual(type1, type2);\n    }\n    isMultiLineText() {\n      let type1 = this.field.type;\n      let type2 = this.fieldTypeService.multiLineText;\n      return this.fieldTypeService.areTypesEqual(type1, type2);\n    }\n    isDate() {\n      let type1 = this.field.type;\n      let type2 = this.fieldTypeService.date;\n      return this.fieldTypeService.areTypesEqual(type1, type2);\n    }\n    isComboBox() {\n      let type1 = this.field.type;\n      let type2 = this.fieldTypeService.comboBox;\n      return this.fieldTypeService.areTypesEqual(type1, type2);\n    }\n    isCheckBox() {\n      let type1 = this.field.type;\n      let type2 = this.fieldTypeService.checkBox;\n      return this.fieldTypeService.areTypesEqual(type1, type2);\n    }\n    isRadioButton() {\n      let type1 = this.field.type;\n      let type2 = this.fieldTypeService.radioButton;\n      return this.fieldTypeService.areTypesEqual(type1, type2);\n    }\n  }\n  FlexibleFieldControlComponent.ɵfac = function FlexibleFieldControlComponent_Factory(t) {\n    return new (t || FlexibleFieldControlComponent)(i0.ɵɵdirectiveInject(i1.FieldTypeService));\n  };\n  FlexibleFieldControlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlexibleFieldControlComponent,\n    selectors: [[\"app-flexible-field-control\"]],\n    inputs: {\n      field: \"field\",\n      formElement: \"formElement\",\n      showError: \"showError\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"fieldName\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"fieldName\", \"required\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"field\", \"required\", \"formElement\", \"showError\", 4, \"ngIf\"], [3, \"fieldName\", \"formElement\", \"showError\"], [3, \"fieldName\", \"required\", \"formElement\", \"showError\"], [3, \"field\", \"required\", \"formElement\", \"showError\"]],\n    template: function FlexibleFieldControlComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FlexibleFieldControlComponent_div_0_Template, 7, 6, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.fieldTypeService.typesLoaded);\n      }\n    },\n    dependencies: [i2.NgIf, i3.TextFieldComponent, i4.MultiLineTextComponent, i5.ChoiceDateStringComponent, i6.CheckboxOptionsStringComponent, i7.ComboboxOptionsStringComponent, i8.RadioOptionsStringComponent]\n  });\n  return FlexibleFieldControlComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}