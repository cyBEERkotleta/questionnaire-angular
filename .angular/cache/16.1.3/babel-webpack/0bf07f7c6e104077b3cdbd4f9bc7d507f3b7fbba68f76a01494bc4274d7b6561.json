{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./role.service\";\nexport class SessionService {\n  constructor(roleService) {\n    this.TOKEN_KEY = 'token';\n    this.TOKEN_BY_DEFAULT = 'no_token';\n    this.roleService = roleService;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  getUser() {\n    return this.user;\n  }\n  isCurrentUserAuthorized() {\n    return !!this.user;\n  }\n  isCurrentUserAdmin() {\n    if (!this.isCurrentUserAuthorized()) return false;\n    return this.roleService.areRolesEqual(this.user.userRole, this.roleService.adminRole);\n  }\n  isCurrentUserMember() {\n    if (!this.isCurrentUserAuthorized()) return false;\n    return this.roleService.areRolesEqual(this.user.userRole, this.roleService.memberRole);\n  }\n  resetUser() {\n    this.user = null;\n  }\n  ping() {\n    console.log('sessionStorage token=' + sessionStorage.getItem(this.TOKEN_KEY));\n    console.log('localStorage token=' + localStorage.getItem(this.TOKEN_KEY));\n  }\n  saveTokenToLocalStorage(token) {\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n  saveTokenToSessionStorage(token) {\n    sessionStorage.setItem(this.TOKEN_KEY, token);\n  }\n  updateTokenWhereItWasSet(token) {\n    if (this.getTokenFromSessionStorage() != this.TOKEN_BY_DEFAULT) this.saveTokenToSessionStorage(token);\n    if (this.getTokenFromLocalStorage() != this.TOKEN_BY_DEFAULT) this.saveTokenToLocalStorage(token);\n  }\n  getTokenFromLocalStorage() {\n    let token = localStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n  getTokenFromSessionStorage() {\n    let token = sessionStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n  getToken() {\n    let token = this.getTokenFromSessionStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      return token;\n    }\n    token = this.getTokenFromLocalStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      this.saveTokenToSessionStorage(token);\n      return token;\n    }\n    return this.TOKEN_BY_DEFAULT;\n  }\n  removeTokenFromLocalStorage() {\n    localStorage.removeItem(this.TOKEN_KEY);\n  }\n  removeTokenFromSessionStorage() {\n    sessionStorage.removeItem(this.TOKEN_KEY);\n  }\n  removeTokenFromEverywhere() {\n    this.removeTokenFromSessionStorage();\n    this.removeTokenFromLocalStorage();\n  }\n}\nSessionService.ɵfac = function SessionService_Factory(t) {\n  return new (t || SessionService)(i0.ɵɵinject(i1.RoleService));\n};\nSessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionService,\n  factory: SessionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SessionService","constructor","roleService","TOKEN_KEY","TOKEN_BY_DEFAULT","setUser","user","getUser","isCurrentUserAuthorized","isCurrentUserAdmin","areRolesEqual","userRole","adminRole","isCurrentUserMember","memberRole","resetUser","ping","console","log","sessionStorage","getItem","localStorage","saveTokenToLocalStorage","token","setItem","saveTokenToSessionStorage","updateTokenWhereItWasSet","getTokenFromSessionStorage","getTokenFromLocalStorage","getToken","removeTokenFromLocalStorage","removeItem","removeTokenFromSessionStorage","removeTokenFromEverywhere","i0","ɵɵinject","i1","RoleService","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {User} from \"../entity/User\";\r\nimport {RoleService} from \"./role.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private TOKEN_KEY = 'token';\r\n  private TOKEN_BY_DEFAULT = 'no_token';\r\n\r\n  private user: User;\r\n\r\n  private roleService: RoleService;\r\n\r\n  constructor(roleService: RoleService) {\r\n    this.roleService = roleService;\r\n  }\r\n\r\n  setUser(user: User) {\r\n    this.user = user;\r\n  }\r\n\r\n  getUser() {\r\n    return this.user;\r\n  }\r\n\r\n  isCurrentUserAuthorized(): boolean {\r\n    return !!this.user;\r\n  }\r\n\r\n  isCurrentUserAdmin(): boolean {\r\n    if (!this.isCurrentUserAuthorized())\r\n      return false;\r\n    return this.roleService.areRolesEqual(this.user.userRole, this.roleService.adminRole);\r\n  }\r\n\r\n  isCurrentUserMember(): boolean {\r\n    if (!this.isCurrentUserAuthorized())\r\n      return false;\r\n    return this.roleService.areRolesEqual(this.user.userRole, this.roleService.memberRole);\r\n  }\r\n\r\n  resetUser() {\r\n    this.user = null;\r\n  }\r\n\r\n  ping() {\r\n    console.log('sessionStorage token=' + sessionStorage.getItem(this.TOKEN_KEY));\r\n    console.log('localStorage token=' + localStorage.getItem(this.TOKEN_KEY));\r\n  }\r\n\r\n  saveTokenToLocalStorage(token: string){\r\n    localStorage.setItem(this.TOKEN_KEY, token);\r\n  }\r\n\r\n  saveTokenToSessionStorage(token: string) {\r\n    sessionStorage.setItem(this.TOKEN_KEY, token);\r\n  }\r\n\r\n  updateTokenWhereItWasSet(token: string) {\r\n    if (this.getTokenFromSessionStorage() != this.TOKEN_BY_DEFAULT)\r\n      this.saveTokenToSessionStorage(token);\r\n    if (this.getTokenFromLocalStorage() != this.TOKEN_BY_DEFAULT)\r\n      this.saveTokenToLocalStorage(token);\r\n  }\r\n\r\n  getTokenFromLocalStorage() {\r\n    let token = localStorage.getItem(this.TOKEN_KEY);\r\n    return token ? token : this.TOKEN_BY_DEFAULT;\r\n  }\r\n\r\n  getTokenFromSessionStorage() {\r\n    let token = sessionStorage.getItem(this.TOKEN_KEY);\r\n    return token ? token : this.TOKEN_BY_DEFAULT;\r\n  }\r\n\r\n  getToken() {\r\n    let token = this.getTokenFromSessionStorage();\r\n    if (token && token != this.TOKEN_BY_DEFAULT) {\r\n      return token;\r\n    }\r\n    token = this.getTokenFromLocalStorage();\r\n    if (token && token != this.TOKEN_BY_DEFAULT) {\r\n      this.saveTokenToSessionStorage(token);\r\n      return token;\r\n    }\r\n    return this.TOKEN_BY_DEFAULT;\r\n  }\r\n\r\n  removeTokenFromLocalStorage(){\r\n    localStorage.removeItem(this.TOKEN_KEY);\r\n  }\r\n\r\n  removeTokenFromSessionStorage(){\r\n    sessionStorage.removeItem(this.TOKEN_KEY);\r\n  }\r\n\r\n  removeTokenFromEverywhere(){\r\n    this.removeTokenFromSessionStorage();\r\n    this.removeTokenFromLocalStorage();\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}