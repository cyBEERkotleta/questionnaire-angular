{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nimport * as i3 from \"./session.service\";\nexport let AnsweredFormService = /*#__PURE__*/(() => {\n  class AnsweredFormService {\n    constructor(http, errorService, sessionService) {\n      this.http = http;\n      this.errorService = errorService;\n      this.sessionService = sessionService;\n    }\n    isAnsweredFormPresent(answeredForm) {\n      return !!answeredForm && !!answeredForm.id && !!answeredForm.answers;\n    }\n    getAnsweredFormById(id) {\n      let token = this.sessionService.getToken();\n      let path = 'http://localhost:8090/answered_forms/' + id;\n      return this.http.post(path, token).pipe(catchError(this.errorHandler.bind(this)));\n    }\n    getAnsweredFormsByFormId(formId) {\n      let token = this.sessionService.getToken();\n      let path = 'http://localhost:8090/answered_forms/form_' + formId;\n      return this.http.post(path, token).pipe(catchError(this.errorHandler.bind(this)));\n    }\n    saveAnsweredForm(answeredForm) {\n      return this.http.post('http://localhost:8090/save_answered_form', answeredForm).pipe(catchError(this.errorHandler.bind(this)));\n    }\n    errorHandler(error) {\n      this.errorService.handle(error.message);\n      return throwError(() => error.message);\n    }\n  }\n  AnsweredFormService.ɵfac = function AnsweredFormService_Factory(t) {\n    return new (t || AnsweredFormService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService), i0.ɵɵinject(i3.SessionService));\n  };\n  AnsweredFormService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnsweredFormService,\n    factory: AnsweredFormService.ɵfac,\n    providedIn: 'root'\n  });\n  return AnsweredFormService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}