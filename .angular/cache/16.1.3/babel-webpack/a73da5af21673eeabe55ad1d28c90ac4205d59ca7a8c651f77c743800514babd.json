{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class UrlService {\n  constructor(router) {\n    this.router = router;\n  }\n  getCurrentUrl() {\n    const urlTree = this.router.createUrlTree([], {\n      queryParamsHandling: 'merge',\n      preserveFragment: true\n    });\n    return this.router.serializeUrl(urlTree);\n  }\n}\nUrlService.ɵfac = function UrlService_Factory(t) {\n  return new (t || UrlService)(i0.ɵɵinject(i1.Router));\n};\nUrlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UrlService,\n  factory: UrlService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UrlService","constructor","router","getCurrentUrl","urlTree","createUrlTree","queryParamsHandling","preserveFragment","serializeUrl","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\url.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  private router: Router;\n\n  constructor(router: Router) {\n    this.router = router;\n  }\n\n  getCurrentUrl(): string {\n    const urlTree = this.router.createUrlTree([], {\n      queryParamsHandling: 'merge',\n      preserveFragment: true\n    });\n\n    return this.router.serializeUrl(urlTree);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,UAAU;EAGrBC,YAAYC,MAAc;IACxB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEAC,aAAaA,CAAA;IACX,MAAMC,OAAO,GAAG,IAAI,CAACF,MAAM,CAACG,aAAa,CAAC,EAAE,EAAE;MAC5CC,mBAAmB,EAAE,OAAO;MAC5BC,gBAAgB,EAAE;KACnB,CAAC;IAEF,OAAO,IAAI,CAACL,MAAM,CAACM,YAAY,CAACJ,OAAO,CAAC;EAC1C;;AAdWJ,UAAU,C;mBAAVA,UAAU,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAVZ,UAAU,C;SAAVA,UAAU;EAAAa,OAAA,EAAVb,UAAU,CAAAc,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}