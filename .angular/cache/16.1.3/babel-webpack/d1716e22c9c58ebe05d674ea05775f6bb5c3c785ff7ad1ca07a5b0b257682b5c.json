{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport { environment } from \"../environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport let MailService = /*#__PURE__*/(() => {\n  class MailService {\n    constructor(http, errorService) {\n      this.http = http;\n      this.errorService = errorService;\n    }\n    sendConfirmationEmail(user, password) {\n      const userWithPassword = {\n        user: user,\n        password: password\n      };\n      return this.http.post(environment.apiUrl + '/send_confirmation_email', userWithPassword).pipe(catchError(this.errorHandler.bind(this)));\n    }\n    sendPasswordChangeNotification(email) {\n      return this.http.post(environment.apiUrl + '/send_notification_password_changed', email).pipe(catchError(this.errorHandler.bind(this)));\n    }\n    sendPasswordRestoration(email) {\n      return this.http.post(environment.apiUrl + '/send_password_restoration', email).pipe(catchError(this.errorHandler.bind(this)));\n    }\n    errorHandler(error) {\n      this.errorService.handle(error.message);\n      return throwError(() => error.message);\n    }\n  }\n  MailService.ɵfac = function MailService_Factory(t) {\n    return new (t || MailService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n  MailService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MailService,\n    factory: MailService.ɵfac,\n    providedIn: 'root'\n  });\n  return MailService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}