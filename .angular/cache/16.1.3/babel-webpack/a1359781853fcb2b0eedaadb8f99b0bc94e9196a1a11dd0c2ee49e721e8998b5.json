{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/field.service\";\nimport * as i2 from \"../../service/form.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../little-components/error-paragraph/error-paragraph.component\";\nimport * as i5 from \"../../little-components/button-edit/button-edit.component\";\nfunction ManageFieldsComponent_app_error_paragraph_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"bg-gray-100\": a0\n  };\n};\nfunction ManageFieldsComponent_tbody_13_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 8)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"div\", 9)(11, \"app-button-edit\", 10);\n    i0.ɵɵlistener(\"click\", function ManageFieldsComponent_tbody_13_tr_1_Template_app_button_edit_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const field_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.logField(field_r3));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ManageFieldsComponent_tbody_13_tr_1_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const field_r3 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.deleteField(field_r3));\n    });\n    i0.ɵɵelementStart(13, \"span\", 12);\n    i0.ɵɵtext(14, \"\\u2716\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const field_r3 = ctx.$implicit;\n    const even_r4 = ctx.even;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, even_r4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r3.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r3.type.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r3.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r3.active);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"editable\", field_r3);\n  }\n}\nfunction ManageFieldsComponent_tbody_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, ManageFieldsComponent_tbody_13_tr_1_Template, 15, 8, \"tr\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.fields);\n  }\n}\nexport class ManageFieldsComponent {\n  constructor(fieldService, formService) {\n    this.globalError = '';\n    this.fieldService = fieldService;\n    this.formService = formService;\n  }\n  ngOnInit() {\n    this.loadFields();\n    this.loadForm();\n  }\n  ngOnDestroy() {\n    if (this.subscriptionFields) this.subscriptionFields.unsubscribe();\n    if (this.subscriptionForm) this.subscriptionForm.unsubscribe();\n    if (this.subscriptionDelete) this.subscriptionDelete.unsubscribe();\n  }\n  isGlobalErrorSet() {\n    return this.globalError != '';\n  }\n  deleteField(field) {\n    this.subscriptionDelete = this.fieldService.deleteField(field).subscribe(result => {\n      console.log(result);\n      if (result.success) {\n        this.loadFields();\n      } else {\n        this.globalError = result.message;\n      }\n    });\n  }\n  logField(field) {\n    console.log('fieldOptions, manage-fields');\n    console.log(JSON.stringify(field));\n  }\n  loadFields() {\n    if (this.subscriptionFields) this.subscriptionFields.unsubscribe();\n    this.subscriptionFields = this.fieldService.getFieldsByFormId(this.formId).subscribe(result => {\n      this.fields = result;\n    });\n  }\n  loadForm() {\n    if (this.subscriptionForm) this.subscriptionForm.unsubscribe();\n    this.subscriptionForm = this.formService.getFormById(this.formId).subscribe(result => {\n      this.form = result;\n    });\n  }\n}\nManageFieldsComponent.ɵfac = function ManageFieldsComponent_Factory(t) {\n  return new (t || ManageFieldsComponent)(i0.ɵɵdirectiveInject(i1.FieldService), i0.ɵɵdirectiveInject(i2.FormService));\n};\nManageFieldsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageFieldsComponent,\n  selectors: [[\"app-manage-fields\"]],\n  inputs: {\n    formId: \"formId\"\n  },\n  decls: 14,\n  vars: 2,\n  consts: [[3, \"errorMessage\", 4, \"ngIf\"], [1, \"table-white-gray\"], [1, \"w-6/12\"], [1, \"w-3/12\"], [1, \"w-auto\"], [4, \"ngIf\"], [3, \"errorMessage\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"action-buttons\"], [3, \"editable\", \"click\"], [\"type\", \"submit\", 1, \"button-in-table\", 3, \"click\"], [1, \"btn-icon\"]],\n  template: function ManageFieldsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ManageFieldsComponent_app_error_paragraph_0_Template, 1, 1, \"app-error-paragraph\", 0);\n      i0.ɵɵelementStart(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 3);\n      i0.ɵɵtext(7, \"\\u0422\\u0438\\u043F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 4);\n      i0.ɵɵtext(9, \"\\u041D\\u0443\\u0436\\u043D\\u043E\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 4);\n      i0.ɵɵtext(11, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u043E\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"th\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, ManageFieldsComponent_tbody_13_Template, 2, 1, \"tbody\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.fields);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.ErrorParagraphComponent, i5.ButtonEditComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","globalError","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ManageFieldsComponent_tbody_13_tr_1_Template_app_button_edit_click_11_listener","restoredCtx","ɵɵrestoreView","_r6","field_r3","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","logField","ManageFieldsComponent_tbody_13_tr_1_Template_button_click_12_listener","ctx_r7","deleteField","ɵɵpureFunction1","_c0","even_r4","ɵɵadvance","ɵɵtextInterpolate","label","type","name","required","active","ɵɵtemplate","ManageFieldsComponent_tbody_13_tr_1_Template","ctx_r1","fields","ManageFieldsComponent","constructor","fieldService","formService","ngOnInit","loadFields","loadForm","ngOnDestroy","subscriptionFields","unsubscribe","subscriptionForm","subscriptionDelete","isGlobalErrorSet","field","subscribe","result","console","log","success","message","JSON","stringify","getFieldsByFormId","formId","getFormById","form","ɵɵdirectiveInject","i1","FieldService","i2","FormService","selectors","inputs","decls","vars","consts","template","ManageFieldsComponent_Template","rf","ctx","ManageFieldsComponent_app_error_paragraph_0_Template","ManageFieldsComponent_tbody_13_Template"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\manage-fields\\manage-fields.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\manage-fields\\manage-fields.component.html"],"sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FieldService} from \"../../service/field.service\";\nimport {FormService} from \"../../service/form.service\";\nimport {Subscription} from \"rxjs\";\nimport {Form} from \"../../entity/Form\";\nimport {Field} from \"../../entity/Field\";\n\n@Component({\n  selector: 'app-manage-fields',\n  templateUrl: './manage-fields.component.html',\n  styleUrls: ['./manage-fields.component.css']\n})\nexport class ManageFieldsComponent implements OnInit, OnDestroy {\n  @Input() formId: bigint;\n\n  private fieldService: FieldService;\n  private formService: FormService;\n\n  form: Form;\n  fields: Field[];\n\n  globalError: string = '';\n\n  private subscriptionFields: Subscription;\n  private subscriptionForm: Subscription;\n  private subscriptionDelete: Subscription;\n\n  constructor(fieldService: FieldService,\n              formService: FormService) {\n    this.fieldService = fieldService;\n    this.formService = formService;\n  }\n\n  ngOnInit() {\n    this.loadFields();\n    this.loadForm();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptionFields)\n      this.subscriptionFields.unsubscribe();\n    if (this.subscriptionForm)\n      this.subscriptionForm.unsubscribe();\n    if (this.subscriptionDelete)\n      this.subscriptionDelete.unsubscribe();\n  }\n\n  isGlobalErrorSet(): boolean {\n    return this.globalError != '';\n  }\n\n  deleteField(field: Field) {\n    this.subscriptionDelete = this.fieldService.deleteField(field)\n      .subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.loadFields();\n        }\n        else {\n          this.globalError = result.message;\n        }\n      });\n  }\n\n  logField(field: Field) {\n    console.log('fieldOptions, manage-fields');\n    console.log(JSON.stringify(field));\n  }\n\n  private loadFields() {\n    if (this.subscriptionFields)\n      this.subscriptionFields.unsubscribe();\n\n    this.subscriptionFields = this.fieldService.getFieldsByFormId(this.formId)\n      .subscribe(result => {\n        this.fields = result;\n      });\n  }\n\n  private loadForm() {\n    if (this.subscriptionForm)\n      this.subscriptionForm.unsubscribe();\n\n    this.subscriptionForm = this.formService.getFormById(this.formId)\n      .subscribe(result => {\n        this.form = result;\n      });\n  }\n}\n","<app-error-paragraph\n  *ngIf=\"isGlobalErrorSet()\"\n  [errorMessage]=\"globalError\"\n></app-error-paragraph>\n\n<table class=\"table-white-gray\"\n>\n  <thead>\n  <tr>\n    <th class=\"w-6/12\">Вопрос</th>\n    <th class=\"w-3/12\">Тип</th>\n    <th class=\"w-auto\">Нужно</th>\n    <th class=\"w-auto\">Активно</th>\n    <th class=\"w-auto\"></th>\n  </tr>\n  </thead>\n  <tbody *ngIf=\"fields\">\n  <tr *ngFor=\"let field of fields; let even = even\" [ngClass]=\"{'bg-gray-100': even}\">\n    <td>{{field.label}}</td>\n    <td>{{field.type.name}}</td>\n    <td>{{field.required}}</td>\n    <td>{{field.active}}</td>\n    <td>\n      <div class=\"action-buttons\">\n        <app-button-edit\n          [editable]=\"field\"\n          (click)=\"logField(field)\"\n        ></app-button-edit>\n\n        <button class=\"button-in-table\"\n                type=\"submit\"\n                (click)=\"deleteField(field)\"\n        ><span class=\"btn-icon\">✖</span></button>\n      </div>\n    </td>\n  </tr>\n  </tbody>\n</table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}