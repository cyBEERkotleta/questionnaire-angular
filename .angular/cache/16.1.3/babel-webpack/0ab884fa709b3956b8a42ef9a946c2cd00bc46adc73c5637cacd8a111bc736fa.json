{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { User } from \"../../entity/User\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/user.service\";\nimport * as i2 from \"../../service/mail.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../little-components/text-field-placeholder/text-field-placeholder.component\";\nimport * as i7 from \"../../little-components/choice-gender/choice-gender.component\";\nimport * as i8 from \"../../little-components/error-paragraph/error-paragraph.component\";\nimport * as i9 from \"../../little-components/middle-control/middle-control.component\";\nimport * as i10 from \"../../little-components/text-field-password-placeholder/text-field-password-placeholder.component\";\nfunction CreateUserComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nfunction CreateUserComponent_app_middle_control_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-middle-control\")(1, \"span\", 16);\n    i0.ɵɵtext(2, \" \\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u043F\\u0438\\u0441\\u044C\\u043C\\u0430 \\u043D\\u0430 \\u0432\\u0430\\u0448 Email... \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let CreateUserComponent = /*#__PURE__*/(() => {\n  class CreateUserComponent {\n    constructor(userService, mailService, router) {\n      this.showAllErrors = false;\n      this.globalError = '';\n      this.sendingMailProcess = false;\n      this.form = new FormGroup({\n        email: new FormControl('', [Validators.email, Validators.minLength(5), Validators.maxLength(60), Validators.required]),\n        password: new FormControl('', [Validators.minLength(8), Validators.maxLength(30), Validators.required]),\n        confirmPassword: new FormControl('', [Validators.minLength(8), Validators.maxLength(30), Validators.required]),\n        firstName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required, Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)]),\n        lastName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required, Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)]),\n        phoneNumber: new FormControl('', [Validators.required, Validators.pattern('^\\\\d{3,15}$'), Validators.minLength(3), Validators.maxLength(15)]),\n        gender: new FormControl(null, [Validators.required])\n      });\n      this.userService = userService;\n      this.mailService = mailService;\n      this.router = router;\n    }\n    ngOnDestroy() {\n      if (this.subscriptionTryReg) this.subscriptionTryReg.unsubscribe();\n      if (this.subscriptionSendMail) this.subscriptionSendMail.unsubscribe();\n    }\n    isGlobalErrorSet() {\n      return this.globalError != '';\n    }\n    submit() {\n      if (this.anyErrorExists()) return;\n      this.tryRegisterUser();\n    }\n    anyErrorExists() {\n      this.resetGlobalError();\n      let passwordsMatch = this.doPasswordsMatch();\n      if (this.isAnyErrorInFields() || !passwordsMatch) {\n        if (!passwordsMatch) {\n          this.globalError = 'Пароли не совпадают';\n        }\n        this.showAllErrors = true;\n        return true;\n      }\n      return false;\n    }\n    tryRegisterUser() {\n      this.createdUser = this.createUserFromFields();\n      let password = this.getPasswordFromField();\n      this.subscriptionTryReg = this.userService.tryRegister(this.createdUser, password).subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.sendingMailProcess = true;\n          this.subscriptionSendMail = this.mailService.sendConfirmationEmail(this.createdUser, password).subscribe(answer => {\n            this.sendingMailProcess = false;\n            if (answer.success) {\n              this.navigateToConfirmRegistrationPage();\n            } else {\n              this.globalError = answer.message;\n            }\n          });\n        } else {\n          this.globalError = result.message;\n        }\n      });\n    }\n    navigateToConfirmRegistrationPage() {\n      let navigationExtras = {\n        queryParams: {\n          'first_name': this.createdUser.firstName,\n          'last_name': this.createdUser.lastName,\n          'email': this.createdUser.email\n        }\n      };\n      this.router.navigate(['/confirm-registration'], navigationExtras);\n    }\n    resetGlobalError() {\n      this.globalError = '';\n    }\n    createUserFromFields() {\n      let email = this.form.controls.email.getRawValue();\n      let firstName = this.form.controls.firstName.getRawValue();\n      let lastName = this.form.controls.lastName.getRawValue();\n      let phoneNumber = this.form.controls.phoneNumber.getRawValue();\n      let gender = this.form.controls.gender.getRawValue();\n      return new User(null, email, firstName, lastName, phoneNumber, null, gender);\n    }\n    getPasswordFromField() {\n      return this.form.controls.password.getRawValue();\n    }\n    isAnyErrorInFields() {\n      return this.doesControlHaveError(this.form.controls.email) || this.doesControlHaveError(this.form.controls.password) || this.doesControlHaveError(this.form.controls.confirmPassword) || this.doesControlHaveError(this.form.controls.firstName) || this.doesControlHaveError(this.form.controls.lastName) || this.doesControlHaveError(this.form.controls.phoneNumber) || this.doesControlHaveError(this.form.controls.gender);\n    }\n    doesControlHaveError(formControl) {\n      return formControl.errors != null;\n    }\n    doPasswordsMatch() {\n      let password = this.form.controls.password.getRawValue();\n      let confirmPassword = this.form.controls.confirmPassword.getRawValue();\n      return password == confirmPassword;\n    }\n  }\n  CreateUserComponent.ɵfac = function CreateUserComponent_Factory(t) {\n    return new (t || CreateUserComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.MailService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  CreateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateUserComponent,\n    selectors: [[\"app-create-user\"]],\n    decls: 18,\n    vars: 18,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [4, \"ngIf\"], [\"placeholder\", \"Email\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u0418\\u043C\\u044F\", \"additionalNote\", \"\\u0438\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432 \\u0438 \\u0434\\u0435\\u0444\\u0438\\u0441\\u043E\\u0432\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\", \"additionalNote\", \"\\u0444\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432 \\u0438 \\u0434\\u0435\\u0444\\u0438\\u0441\\u043E\\u0432\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\", \"additionalNote\", \"\\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0437\\u0430\\u0434\\u0430\\u0451\\u0442\\u0441\\u044F \\u0431\\u0435\\u0437 \\u0437\\u043D\\u0430\\u043A\\u0430 + \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0446\\u0438\\u0444\\u0440\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u043B\", 3, \"formElement\", \"showError\"], [3, \"paddingTop\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [1, \"text-center\", \"fs-6\", \"pt-3\"], [1, \"text-black\"], [\"routerLink\", \"/login\", 1, \"blue-bold-link-text\"], [3, \"errorMessage\"], [1, \"text-blue-500\", \"fs-6\", \"fw-bold\"]],\n    template: function CreateUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateUserComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtemplate(1, CreateUserComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n        i0.ɵɵtemplate(2, CreateUserComponent_app_middle_control_2_Template, 3, 0, \"app-middle-control\", 2);\n        i0.ɵɵelement(3, \"app-text-field-placeholder\", 3)(4, \"app-text-field-password-placeholder\", 4)(5, \"app-text-field-password-placeholder\", 5)(6, \"app-text-field-placeholder\", 6)(7, \"app-text-field-placeholder\", 7)(8, \"app-text-field-placeholder\", 8)(9, \"app-choice-gender\", 9);\n        i0.ɵɵelementStart(10, \"app-middle-control\", 10)(11, \"button\", 11);\n        i0.ɵɵtext(12, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"p\", 12)(14, \"span\", 13);\n        i0.ɵɵtext(15, \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"a\", 14);\n        i0.ɵɵtext(17, \"\\u0412\\u043E\\u0439\\u0442\\u0438\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sendingMailProcess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.email)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.password)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.confirmPassword)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.firstName)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.lastName)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.phoneNumber)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.gender)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"paddingTop\", 2);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i3.RouterLink, i6.TextFieldPlaceholderComponent, i7.ChoiceGenderComponent, i8.ErrorParagraphComponent, i9.MiddleControlComponent, i10.TextFieldPasswordPlaceholderComponent]\n  });\n  return CreateUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}