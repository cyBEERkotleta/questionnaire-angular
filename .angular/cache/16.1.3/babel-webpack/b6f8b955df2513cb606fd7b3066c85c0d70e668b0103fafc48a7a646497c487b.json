{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../checkbox-options/checkbox-options.component\";\nexport class CheckboxOptionsStringComponent {\n  constructor() {\n    this.required = false;\n    this.showError = false;\n    this.form = new FormGroup({\n      fieldOptions: new FormControl([])\n    });\n  }\n  ngOnInit() {\n    this.subscription = this.form.controls.fieldOptions.valueChanges.subscribe(value => {\n      let strValue = this.convertToString(value);\n      this.formElement.setValue(strValue);\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n  convertToString(options) {\n    if (options.length == 1) return options[0].shownName;\n    let result = '';\n    for (let i = 0; i < options.length; i++) {\n      result += i + 1 + ') ' + options[i].shownName;\n    }\n    return result;\n  }\n}\nCheckboxOptionsStringComponent.ɵfac = function CheckboxOptionsStringComponent_Factory(t) {\n  return new (t || CheckboxOptionsStringComponent)();\n};\nCheckboxOptionsStringComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckboxOptionsStringComponent,\n  selectors: [[\"app-checkbox-options-string\"]],\n  inputs: {\n    field: \"field\",\n    required: \"required\",\n    formElement: \"formElement\",\n    showError: \"showError\"\n  },\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"field\", \"formElement\", \"showError\"]],\n  template: function CheckboxOptionsStringComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-checkbox-options\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"field\", ctx.field)(\"formElement\", ctx.form.controls.fieldOptions)(\"showError\", ctx.showError);\n    }\n  },\n  dependencies: [i1.CheckboxOptionsComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","CheckboxOptionsStringComponent","constructor","required","showError","form","fieldOptions","ngOnInit","subscription","controls","valueChanges","subscribe","value","strValue","convertToString","formElement","setValue","ngOnDestroy","unsubscribe","options","length","shownName","result","i","selectors","inputs","field","decls","vars","consts","template","CheckboxOptionsStringComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵproperty"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\checkbox-options-string\\checkbox-options-string.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\checkbox-options-string\\checkbox-options-string.component.html"],"sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Field} from \"../../entity/Field\";\nimport {FieldOption} from \"../../entity/FieldOption\";\n\n@Component({\n  selector: 'app-checkbox-options-string',\n  templateUrl: './checkbox-options-string.component.html',\n  styleUrls: ['./checkbox-options-string.component.css']\n})\nexport class CheckboxOptionsStringComponent implements OnInit, OnDestroy {\n  @Input() field: Field;\n  @Input() required: boolean = false;\n  @Input() formElement: FormControl<string>;\n  @Input() showError: boolean = false;\n\n  form = new FormGroup({\n    fieldOptions: new FormControl<FieldOption[]>([])\n  });\n\n  private subscription: Subscription;\n\n  ngOnInit() {\n    this.subscription = this.form.controls.fieldOptions.valueChanges\n      .subscribe(value => {\n        let strValue = this.convertToString(value);\n        this.formElement.setValue(strValue);\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n  private convertToString(options: FieldOption[]): string {\n    if (options.length == 1)\n      return options[0].shownName;\n\n    let result = '';\n    for (let i = 0; i < options.length; i++) {\n      result += (i + 1) + ') ' + options[i].shownName;\n    }\n    return result;\n  }\n}\n","<app-checkbox-options\n  [field]=\"field\"\n  [formElement]=\"form.controls.fieldOptions\"\n  [showError]=\"showError\"\n></app-checkbox-options>\n"],"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,QAAO,gBAAgB;;;AAUrD,OAAM,MAAOC,8BAA8B;EAL3CC,YAAA;IAOW,KAAAC,QAAQ,GAAY,KAAK;IAEzB,KAAAC,SAAS,GAAY,KAAK;IAEnC,KAAAC,IAAI,GAAG,IAAIL,SAAS,CAAC;MACnBM,YAAY,EAAE,IAAIP,WAAW,CAAgB,EAAE;KAChD,CAAC;;EAIFQ,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,IAAI,CAACI,QAAQ,CAACH,YAAY,CAACI,YAAY,CAC7DC,SAAS,CAACC,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAG,IAAI,CAACC,eAAe,CAACF,KAAK,CAAC;MAC1C,IAAI,CAACG,WAAW,CAACC,QAAQ,CAACH,QAAQ,CAAC;IACrC,CAAC,CAAC;EACN;EAEAI,WAAWA,CAAA;IACT,IAAI,IAAI,CAACT,YAAY,EACnB,IAAI,CAACA,YAAY,CAACU,WAAW,EAAE;EACnC;EAEQJ,eAAeA,CAACK,OAAsB;IAC5C,IAAIA,OAAO,CAACC,MAAM,IAAI,CAAC,EACrB,OAAOD,OAAO,CAAC,CAAC,CAAC,CAACE,SAAS;IAE7B,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;MACvCD,MAAM,IAAKC,CAAC,GAAG,CAAC,GAAI,IAAI,GAAGJ,OAAO,CAACI,CAAC,CAAC,CAACF,SAAS;;IAEjD,OAAOC,MAAM;EACf;;AAlCWrB,8BAA8B,C;mBAA9BA,8BAA8B;AAAA;AAA9BA,8BAA8B,C;QAA9BA,8BAA8B;EAAAuB,SAAA;EAAAC,MAAA;IAAAC,KAAA;IAAAvB,QAAA;IAAAY,WAAA;IAAAX,SAAA;EAAA;EAAAuB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX3CE,EAAA,CAAAC,SAAA,8BAIwB;;;MAHtBD,EAAA,CAAAE,UAAA,UAAAH,GAAA,CAAAP,KAAA,CAAe,gBAAAO,GAAA,CAAA5B,IAAA,CAAAI,QAAA,CAAAH,YAAA,eAAA2B,GAAA,CAAA7B,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}