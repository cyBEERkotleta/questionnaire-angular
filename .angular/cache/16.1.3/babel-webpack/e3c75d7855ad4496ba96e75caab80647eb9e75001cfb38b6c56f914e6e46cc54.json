{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Topic } from \"../../entity/Topic\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/topic.service\";\nimport * as i2 from \"../../service/modal-create-window.service\";\nimport * as i3 from \"@angular/router\";\nfunction CreateTopicComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nexport class CreateTopicComponent {\n  constructor(topicService, modalService, router) {\n    this.showAllErrors = false;\n    this.globalError = '';\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.minLength(3), Validators.maxLength(100), Validators.required]),\n      description: new FormControl('', [Validators.maxLength(250)])\n    });\n    this.topicService = topicService;\n    this.modalService = modalService;\n    this.router = router;\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n  isGlobalErrorSet() {\n    return this.globalError != '';\n  }\n  submit() {\n    if (this.anyErrorExists()) return;\n    this.addTopic();\n  }\n  anyErrorExists() {\n    this.resetGlobalError();\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n  addTopic() {\n    let topic = this.createTopicFromFields();\n    this.subscription = this.topicService.saveTopic(topic).subscribe(result => {\n      console.log(result);\n      if (result.success) {\n        this.modalService.close();\n      } else {\n        this.globalError = result.message;\n      }\n    });\n  }\n  resetGlobalError() {\n    this.globalError = '';\n  }\n  createTopicFromFields() {\n    let name = this.getNameFromField();\n    let description = this.getDescriptionFromField();\n    return new Topic(null, name, description);\n  }\n  getNameFromField() {\n    return this.form.controls.name.getRawValue();\n  }\n  getDescriptionFromField() {\n    return this.form.controls.description.getRawValue();\n  }\n  isAnyErrorInFields() {\n    return this.doesControlHaveError(this.form.controls.name) || this.doesControlHaveError(this.form.controls.description);\n  }\n  doesControlHaveError(formControl) {\n    return formControl.errors != null;\n  }\n}\nCreateTopicComponent.ɵfac = function CreateTopicComponent_Factory(t) {\n  return new (t || CreateTopicComponent)(i0.ɵɵdirectiveInject(i1.TopicService), i0.ɵɵdirectiveInject(i2.ModalCreateWindowService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateTopicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTopicComponent,\n  selectors: [[\"app-create-topic\"]],\n  decls: 8,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [\"fieldName\", \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\", 3, \"formElement\", \"showError\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [3, \"errorMessage\"]],\n  template: function CreateTopicComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateTopicComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtemplate(1, CreateTopicComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n      i0.ɵɵelement(2, \"app-text-field\", 2)(3, \"app-text-field\", 3)(4, \"br\");\n      i0.ɵɵelementStart(5, \"app-middle-control\")(6, \"button\", 4);\n      i0.ɵɵtext(7, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.name)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.description)(\"showError\", ctx.showAllErrors);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","Topic","i0","ɵɵelement","ɵɵproperty","ctx_r0","globalError","CreateTopicComponent","constructor","topicService","modalService","router","showAllErrors","form","name","minLength","maxLength","required","description","ngOnDestroy","subscription","unsubscribe","isGlobalErrorSet","submit","anyErrorExists","addTopic","resetGlobalError","isAnyErrorInFields","topic","createTopicFromFields","saveTopic","subscribe","result","console","log","success","close","message","getNameFromField","getDescriptionFromField","controls","getRawValue","doesControlHaveError","formControl","errors","ɵɵdirectiveInject","i1","TopicService","i2","ModalCreateWindowService","i3","Router","selectors","decls","vars","consts","template","CreateTopicComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreateTopicComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","CreateTopicComponent_app_error_paragraph_1_Template","ɵɵtext","ɵɵelementEnd","ɵɵadvance"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-topic\\create-topic.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-topic\\create-topic.component.html"],"sourcesContent":["import {Component, OnDestroy} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TopicService} from \"../../service/topic.service\";\nimport {Topic} from \"../../entity/Topic\";\nimport {ModalCreateWindowService} from \"../../service/modal-create-window.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-create-topic',\n  templateUrl: './create-topic.component.html',\n  styleUrls: ['./create-topic.component.css']\n})\nexport class CreateTopicComponent implements OnDestroy {\n  private topicService: TopicService;\n  private modalService: ModalCreateWindowService;\n  private router: Router;\n\n  showAllErrors = false;\n  globalError: string = '';\n\n  private subscription: Subscription;\n\n  form = new FormGroup({\n    name: new FormControl<string>('', [\n      Validators.minLength(3),\n      Validators.maxLength(100),\n      Validators.required\n    ]),\n    description: new FormControl<string>('', [\n      Validators.maxLength(250)\n    ])\n  });\n\n  constructor(topicService: TopicService,\n              modalService: ModalCreateWindowService,\n              router: Router) {\n    this.topicService = topicService;\n    this.modalService = modalService;\n    this.router = router;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n  isGlobalErrorSet(): boolean {\n    return this.globalError != '';\n  }\n\n  submit() {\n    if (this.anyErrorExists())\n      return;\n\n    this.addTopic();\n  }\n\n  private anyErrorExists(): boolean {\n    this.resetGlobalError();\n\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n\n  private addTopic() {\n    let topic = this.createTopicFromFields();\n\n    this.subscription = this.topicService.saveTopic(topic)\n      .subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.modalService.close();\n        }\n        else {\n          this.globalError = result.message;\n        }\n      });\n  }\n\n  private resetGlobalError() {\n    this.globalError = '';\n  }\n\n  private createTopicFromFields(): Topic {\n    let name = this.getNameFromField();\n    let description = this.getDescriptionFromField();\n\n    return new Topic(null, name, description);\n  }\n\n  private getNameFromField(): string {\n    return this.form.controls.name.getRawValue();\n  }\n\n  private getDescriptionFromField(): string {\n    return this.form.controls.description.getRawValue();\n  }\n\n  private isAnyErrorInFields(): boolean {\n    return this.doesControlHaveError(this.form.controls.name) ||\n      this.doesControlHaveError(this.form.controls.description);\n  }\n\n  private doesControlHaveError(formControl: FormControl): boolean {\n    return formControl.errors != null;\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <app-error-paragraph\n    *ngIf=\"isGlobalErrorSet()\"\n    [errorMessage]=\"globalError\"\n  ></app-error-paragraph>\n\n  <app-text-field\n    fieldName=\"Название\"\n    [formElement]=\"form.controls.name\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Описание\"\n    [formElement]=\"form.controls.description\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <br/>\n\n  <app-middle-control>\n    <button\n      type=\"submit\"\n      class=\"button-red-rounded\"\n    >Создать тему</button>\n  </app-middle-control>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}