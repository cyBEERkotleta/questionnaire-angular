{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class UserService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n  getAll() {\n    return this.http.get('http://localhost:8080/users').pipe(catchError(this.errorHandler.bind(this)));\n  }\n  register(user, password) {\n    const data = {\n      user: user /*, password: password*/\n    };\n    const body = JSON.stringify(data);\n    const options = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log(body);\n    return this.http.post('http://localhost:8080/register', body, options).pipe(catchError(this.errorHandler.bind(this)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","throwError","UserService","constructor","http","errorService","getAll","get","pipe","errorHandler","bind","register","user","password","data","body","JSON","stringify","options","headers","console","log","post","error","handle","message","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\users.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\r\nimport {catchError, Observable, throwError} from \"rxjs\";\r\nimport {User} from \"../entity/User\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {RequestResult} from \"../additional/RequestResult\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private http: HttpClient;\r\n  private errorService: ErrorService;\r\n\r\n  constructor(http: HttpClient, errorService: ErrorService) {\r\n    this.http = http;\r\n    this.errorService = errorService;\r\n  }\r\n\r\n  getAll() : Observable<User[]> {\r\n    return this.http.get<User[]>('http://localhost:8080/users')\r\n      .pipe(\r\n        catchError(this.errorHandler.bind(this))\r\n      )\r\n  }\r\n\r\n  register(user: User, password: string) : Observable<RequestResult> {\r\n    const data = {user: user/*, password: password*/};\r\n    const body = JSON.stringify(data);\r\n    const options = { headers: {'Content-Type': 'application/json'} };\r\n\r\n    console.log(body);\r\n\r\n    return this.http.post<RequestResult>('http://localhost:8080/register', body, options)\r\n      .pipe(\r\n        catchError(this.errorHandler.bind(this))\r\n      );\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    this.errorService.handle(error.message);\r\n    return throwError(() => error.message);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAQA,UAAU,EAAcC,UAAU,QAAO,MAAM;;;;AAQvD,OAAM,MAAOC,WAAW;EAItBC,YAAYC,IAAgB,EAAEC,YAA0B;IACtD,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,6BAA6B,CAAC,CACxDC,IAAI,CACHR,UAAU,CAAC,IAAI,CAACS,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEAC,QAAQA,CAACC,IAAU,EAAEC,QAAgB;IACnC,MAAMC,IAAI,GAAG;MAACF,IAAI,EAAEA,IAAI;IAAwB,CAAC;IACjD,MAAMG,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACjC,MAAMI,OAAO,GAAG;MAAEC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAE;IAEjEC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IAEjB,OAAO,IAAI,CAACX,IAAI,CAACkB,IAAI,CAAgB,gCAAgC,EAAEP,IAAI,EAAEG,OAAO,CAAC,CAClFV,IAAI,CACHR,UAAU,CAAC,IAAI,CAACS,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEQD,YAAYA,CAACc,KAAwB;IAC3C,IAAI,CAAClB,YAAY,CAACmB,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOxB,UAAU,CAAC,MAAMsB,KAAK,CAACE,OAAO,CAAC;EACxC;;AAhCWvB,WAAW,C;mBAAXA,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAX7B,WAAW,C;SAAXA,WAAW;EAAA8B,OAAA,EAAX9B,WAAW,CAAA+B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}