{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../choice-date/choice-date.component\";\nexport class ChoiceDateStringComponent {\n  constructor() {\n    this.required = false;\n    this.nextLine = false;\n    this.showError = false;\n    let validators = [];\n    if (this.required) validators.push(Validators.required);\n    let control = new FormControl(new Date(), validators);\n    this.form = new FormGroup({\n      control\n    });\n    this.control = control;\n  }\n  ngOnInit() {\n    this.subscription1 = this.form.controls.date.valueChanges.subscribe(value => {\n      let strValue = value.toDateString();\n      this.formElement.setValue(strValue);\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscription1) this.subscription1.unsubscribe();\n  }\n}\nChoiceDateStringComponent.ɵfac = function ChoiceDateStringComponent_Factory(t) {\n  return new (t || ChoiceDateStringComponent)();\n};\nChoiceDateStringComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChoiceDateStringComponent,\n  selectors: [[\"app-choice-date-string\"]],\n  inputs: {\n    fieldName: \"fieldName\",\n    required: \"required\",\n    nextLine: \"nextLine\",\n    formElement: \"formElement\",\n    showError: \"showError\"\n  },\n  decls: 1,\n  vars: 4,\n  consts: [[3, \"fieldName\", \"nextLine\", \"formElement\", \"showError\"]],\n  template: function ChoiceDateStringComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-choice-date\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"fieldName\", ctx.fieldName)(\"nextLine\", ctx.nextLine)(\"formElement\", ctx.control)(\"showError\", ctx.showError);\n    }\n  },\n  dependencies: [i1.ChoiceDateComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","ChoiceDateStringComponent","constructor","required","nextLine","showError","validators","push","control","Date","form","ngOnInit","subscription1","controls","date","valueChanges","subscribe","value","strValue","toDateString","formElement","setValue","ngOnDestroy","unsubscribe","selectors","inputs","fieldName","decls","vars","consts","template","ChoiceDateStringComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵproperty"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\choice-date-string\\choice-date-string.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\choice-date-string\\choice-date-string.component.html"],"sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-choice-date-string',\n  templateUrl: './choice-date-string.component.html',\n  styleUrls: ['./choice-date-string.component.css']\n})\nexport class ChoiceDateStringComponent implements OnInit, OnDestroy {\n  @Input() fieldName: string;\n  @Input() required: boolean = false;\n  @Input() nextLine: boolean = false;\n  @Input() formElement: FormControl<string>;\n  @Input() showError: boolean = false;\n\n  form: FormGroup;\n  control: FormControl<Date>;\n\n  constructor() {\n    let validators = [];\n    if (this.required)\n      validators.push(Validators.required);\n\n    let control = new FormControl<Date>(new Date, validators);\n\n    this.form = new FormGroup({\n      control\n    });\n    this.control = control;\n  }\n\n  private subscription1: Subscription;\n\n  ngOnInit() {\n    this.subscription1 = this.form.controls.date.valueChanges\n      .subscribe(value => {\n        let strValue = value.toDateString();\n        this.formElement.setValue(strValue);\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription1)\n      this.subscription1.unsubscribe();\n  }\n}\n","<app-choice-date\n  [fieldName]=\"fieldName\"\n  [nextLine]=\"nextLine\"\n  [formElement]=\"control\"\n  [showError]=\"showError\"\n></app-choice-date>\n"],"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;;;AAQjE,OAAM,MAAOC,yBAAyB;EAUpCC,YAAA;IARS,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,QAAQ,GAAY,KAAK;IAEzB,KAAAC,SAAS,GAAY,KAAK;IAMjC,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAI,IAAI,CAACH,QAAQ,EACfG,UAAU,CAACC,IAAI,CAACP,UAAU,CAACG,QAAQ,CAAC;IAEtC,IAAIK,OAAO,GAAG,IAAIV,WAAW,CAAO,IAAIW,IAAI,CAAJ,CAAI,EAAEH,UAAU,CAAC;IAEzD,IAAI,CAACI,IAAI,GAAG,IAAIX,SAAS,CAAC;MACxBS;KACD,CAAC;IACF,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAIAG,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACF,IAAI,CAACG,QAAQ,CAACC,IAAI,CAACC,YAAY,CACtDC,SAAS,CAACC,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAGD,KAAK,CAACE,YAAY,EAAE;MACnC,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACH,QAAQ,CAAC;IACrC,CAAC,CAAC;EACN;EAEAI,WAAWA,CAAA;IACT,IAAI,IAAI,CAACV,aAAa,EACpB,IAAI,CAACA,aAAa,CAACW,WAAW,EAAE;EACpC;;AApCWtB,yBAAyB,C;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB,C;QAAzBA,yBAAyB;EAAAuB,SAAA;EAAAC,MAAA;IAAAC,SAAA;IAAAvB,QAAA;IAAAC,QAAA;IAAAgB,WAAA;IAAAf,SAAA;EAAA;EAAAsB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTtCE,EAAA,CAAAC,SAAA,yBAKmB;;;MAJjBD,EAAA,CAAAE,UAAA,cAAAH,GAAA,CAAAP,SAAA,CAAuB,aAAAO,GAAA,CAAA7B,QAAA,iBAAA6B,GAAA,CAAAzB,OAAA,eAAAyB,GAAA,CAAA5B,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}