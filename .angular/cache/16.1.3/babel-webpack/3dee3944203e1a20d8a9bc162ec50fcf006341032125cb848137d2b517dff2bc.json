{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../field-name/field-name.component\";\nimport * as i3 from \"../checkbox/checkbox.component\";\nfunction CheckboxGroupComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"app-checkbox\", 5);\n    i0.ɵɵlistener(\"itemSelection\", function CheckboxGroupComponent_div_4_Template_app_checkbox_itemSelection_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", item_r1);\n  }\n}\nexport let CheckboxGroupComponent = /*#__PURE__*/(() => {\n  class CheckboxGroupComponent {\n    constructor() {\n      this.required = false;\n      this.showError = false;\n      this.selectedOptions = [];\n    }\n    onChange(checkBoxState) {\n      this.removeStateFromSelectedOptions(checkBoxState);\n      if (checkBoxState.active) this.selectedOptions.push(checkBoxState);\n      this.formElement.setValue(this.selectedOptions);\n    }\n    removeStateFromSelectedOptions(checkBoxState) {\n      this.selectedOptions = this.selectedOptions.filter(opt => opt.text != checkBoxState.text);\n    }\n  }\n  CheckboxGroupComponent.ɵfac = function CheckboxGroupComponent_Factory(t) {\n    return new (t || CheckboxGroupComponent)();\n  };\n  CheckboxGroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckboxGroupComponent,\n    selectors: [[\"app-checkbox-group\"]],\n    inputs: {\n      fieldName: \"fieldName\",\n      required: \"required\",\n      formElement: \"formElement\",\n      showError: \"showError\",\n      optionNames: \"optionNames\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"pt-3\"], [1, \"border-1\", \"border-gray-500\", \"rounded\", \"block\"], [3, \"fieldName\", \"required\"], [\"class\", \"flex items-center flex-row gap-x-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"flex-row\", \"gap-x-1\"], [3, \"text\", \"itemSelection\"]],\n    template: function CheckboxGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"fieldset\", 1)(2, \"legend\");\n        i0.ɵɵelement(3, \"app-field-name\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, CheckboxGroupComponent_div_4_Template, 3, 1, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"fieldName\", ctx.fieldName)(\"required\", ctx.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.optionNames);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.FieldNameComponent, i3.CheckboxComponent]\n  });\n  return CheckboxGroupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}