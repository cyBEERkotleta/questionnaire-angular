{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/random.service\";\nimport * as i2 from \"../../service/word-form.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/questionnaires\", a1];\n};\nfunction FormItemInListComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 1)(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 2);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.getProperties())(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.form.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFormName());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFormQuestionsDescription());\n  }\n}\nexport let FormItemInListComponent = /*#__PURE__*/(() => {\n  class FormItemInListComponent {\n    constructor(randomService, wordFormService) {\n      this.colorsFrom = ['#f2a8f5', '#86e796', '#a190e8', '#fcffe0', '#ffcfd7', '#cff0ff', '#44aeeb', '#a3e041', '#ffe0fc', '#c045ed', '#f05d5d', '#d1fff4'];\n      this.colorsTo = ['#faf3ff', '#eafff7', '#e0e0ff', '#fcc92e', '#d94a4a', '#5485e8', '#b3faff', '#fff7cf', '#45ceed', '#cff6ff', '#feffc7', '#5b78e3'];\n      this.randomService = randomService;\n      this.wordFormService = wordFormService;\n    }\n    getFormName() {\n      if (!this.form) return '';\n      return this.form.name;\n    }\n    getFormQuestionsDescription() {\n      if (!this.form) return '';\n      let count = this.fieldCount;\n      let questionStr = this.wordFormService.getQuestionForm(count);\n      return '(' + count + ' ' + questionStr + ')';\n    }\n    getRandomColorIndex() {\n      let min = 0;\n      let max = this.colorsFrom.length - 1;\n      return this.randomService.getRandomNumber(min, max);\n    }\n    getBackgroundProperty(index) {\n      let colorFrom = this.colorsFrom[index];\n      let colorTo = this.colorsTo[index];\n      return 'linear-gradient(to top left, ' + colorFrom + ', ' + colorTo + ')';\n    }\n    getProperties() {\n      let index = this.getRandomColorIndex();\n      return {\n        background: this.getBackgroundProperty(index)\n      };\n    }\n  }\n  FormItemInListComponent.ɵfac = function FormItemInListComponent_Factory(t) {\n    return new (t || FormItemInListComponent)(i0.ɵɵdirectiveInject(i1.RandomService), i0.ɵɵdirectiveInject(i2.WordFormService));\n  };\n  FormItemInListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormItemInListComponent,\n    selectors: [[\"app-form-item-in-list\"]],\n    inputs: {\n      form: \"form\",\n      fieldCount: \"fieldCount\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"form-block\", 3, \"ngStyle\", \"routerLink\", 4, \"ngIf\"], [1, \"form-block\", 3, \"ngStyle\", \"routerLink\"], [1, \"text-center\"]],\n    template: function FormItemInListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FormItemInListComponent_a_0_Template, 5, 6, \"a\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.form.shown);\n      }\n    },\n    dependencies: [i3.NgIf, i3.NgStyle, i4.RouterLink],\n    styles: [\".form-block[_ngcontent-%COMP%]{margin:.75rem;display:inline-flex;flex-direction:column;justify-content:center;border-radius:.75rem;padding:1.25rem .75rem;vertical-align:middle;font-size:1.25rem;line-height:1.75rem;font-weight:700;--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity));cursor:pointer;text-decoration:none;border:1px solid gray;max-width:350px;width:auto;height:150px;word-wrap:break-word;overflow-wrap:break-word;transition:text-shadow .3s,transform .3s}.form-block[_ngcontent-%COMP%]:hover{background:white;box-shadow:0 3px 8px 2px #939393;transform:scale(1.1)}.form-block[_ngcontent-%COMP%]:active{background:lightgray;transform:scale(.95)}\"]\n  });\n  return FormItemInListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}