{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../little-components/text-field/text-field.component\";\nimport * as i6 from \"../../little-components/error-paragraph/error-paragraph.component\";\nfunction ChangePasswordComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nexport class ChangePasswordComponent {\n  constructor(userService, router) {\n    this.showAllErrors = false;\n    this.globalError = '';\n    this.successfulChange = false;\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n    this.userService = userService;\n    this.router = router;\n  }\n  ngOnInit() {}\n  isGlobalErrorSet() {\n    return this.globalError != '';\n  }\n  submit() {\n    if (this.anyErrorExists()) return;\n    this.loginUser();\n  }\n  anyErrorExists() {\n    this.resetGlobalError();\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n  loginUser() {\n    let email = this.getEmailFromField();\n    let oldPassword = this.getOldPasswordFromField();\n    let newPassword = this.getNewPasswordFromField();\n    this.userService.changePassword(email, oldPassword, newPassword).subscribe(result => {\n      console.log(result);\n      if (result.success) {\n        this.successfulChange = true;\n        this.navigateToMainPage();\n      } else {\n        this.globalError = result.message;\n        this.successfulChange = false;\n      }\n    });\n  }\n  navigateToMainPage() {\n    this.router.navigate(['/']);\n  }\n  resetGlobalError() {\n    this.globalError = '';\n  }\n  getEmailFromField() {\n    return this.form.controls.email.getRawValue();\n  }\n  getPasswordFromField() {\n    return this.form.controls.password.getRawValue();\n  }\n  isAnyErrorInFields() {\n    return this.doesControlHaveError(this.form.controls.email) || this.doesControlHaveError(this.form.controls.password);\n  }\n  doesControlHaveError(formControl) {\n    return formControl.errors != null;\n  }\n  doTransferToMainPage() {\n    this.router.navigate(['/']);\n  }\n}\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n  return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n};\nChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePasswordComponent,\n  selectors: [[\"app-change-password\"]],\n  decls: 11,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [\"fieldName\", \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [1, \"flex\", \"flex-row\", \"items-center\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [\"type\", \"button\", 1, \"button-back\", 3, \"click\"], [3, \"errorMessage\"]],\n  template: function ChangePasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtemplate(1, ChangePasswordComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n      i0.ɵɵelement(2, \"app-text-field\", 2)(3, \"app-text-field\", 3)(4, \"app-text-field\", 4)(5, \"br\");\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n      i0.ɵɵtext(8, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_9_listener() {\n        return ctx.doTransferToMainPage();\n      });\n      i0.ɵɵtext(10, \"\\u041D\\u0430\\u0437\\u0430\\u0434\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.email)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.password)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.password)(\"showError\", ctx.showAllErrors);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.TextFieldComponent, i6.ErrorParagraphComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelement","ɵɵproperty","ctx_r0","globalError","ChangePasswordComponent","constructor","userService","router","showAllErrors","successfulChange","form","email","required","password","ngOnInit","isGlobalErrorSet","submit","anyErrorExists","loginUser","resetGlobalError","isAnyErrorInFields","getEmailFromField","oldPassword","getOldPasswordFromField","newPassword","getNewPasswordFromField","changePassword","subscribe","result","console","log","success","navigateToMainPage","message","navigate","controls","getRawValue","getPasswordFromField","doesControlHaveError","formControl","errors","doTransferToMainPage","ɵɵdirectiveInject","i1","UserService","i2","Router","selectors","decls","vars","consts","template","ChangePasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ChangePasswordComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","ChangePasswordComponent_app_error_paragraph_1_Template","ɵɵtext","ɵɵelementEnd","ChangePasswordComponent_Template_button_click_9_listener","ɵɵadvance"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\change-password\\change-password.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\change-password\\change-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {UserService} from \"../../service/users.service\";\nimport {Router} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  private userService: UserService;\n  private router: Router;\n\n  showAllErrors = false;\n  globalError: string = '';\n  private successfulChange = false;\n\n  form = new FormGroup({\n    email: new FormControl<string>('', [\n      Validators.email,\n      Validators.required\n    ]),\n    password: new FormControl<string>('', [\n      Validators.required\n    ])\n  })\n\n  constructor(userService: UserService,\n              router: Router) {\n    this.userService = userService;\n    this.router = router;\n  }\n\n  ngOnInit() {\n  }\n\n  isGlobalErrorSet(): boolean {\n    return this.globalError != '';\n  }\n\n  submit() {\n    if (this.anyErrorExists())\n      return;\n\n    this.loginUser();\n  }\n\n  private anyErrorExists(): boolean {\n    this.resetGlobalError();\n\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n\n  private loginUser() {\n    let email = this.getEmailFromField();\n    let oldPassword = this.getOldPasswordFromField();\n    let newPassword = this.getNewPasswordFromField();\n\n    this.userService.changePassword(email, oldPassword, newPassword)\n      .subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.successfulChange = true;\n          this.navigateToMainPage();\n        }\n        else {\n          this.globalError = result.message;\n          this.successfulChange = false;\n        }\n      });\n  }\n\n  private navigateToMainPage() {\n    this.router.navigate(['/']);\n  }\n\n  resetGlobalError() {\n    this.globalError = '';\n  }\n\n  getEmailFromField(): string {\n    return this.form.controls.email.getRawValue();\n  }\n\n  getPasswordFromField(): string {\n    return this.form.controls.password.getRawValue();\n  }\n\n  isAnyErrorInFields(): boolean {\n    return this.doesControlHaveError(this.form.controls.email) ||\n      this.doesControlHaveError(this.form.controls.password);\n  }\n\n  doesControlHaveError(formControl: FormControl): boolean {\n    return formControl.errors != null;\n  }\n\n  doTransferToMainPage() {\n    this.router.navigate(['/']);\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <app-error-paragraph\n    *ngIf=\"isGlobalErrorSet()\"\n    [errorMessage]=\"globalError\"\n  ></app-error-paragraph>\n\n  <app-text-field\n    fieldName=\"Текущий пароль\"\n    [formElement]=\"form.controls.email\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Новый пароль\"\n    [formElement]=\"form.controls.password\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Подтвердите новый пароль\"\n    [formElement]=\"form.controls.password\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <br/>\n\n  <div\n    class=\"flex flex-row items-center\"\n  >\n    <button\n      type=\"submit\"\n      class=\"button-red-rounded\"\n    >Изменить</button>\n\n    <button\n      type=\"button\"\n      class=\"button-back\"\n      (click)=\"doTransferToMainPage()\"\n    >Назад</button>\n  </div>\n\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}