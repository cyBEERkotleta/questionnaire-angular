{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../field-name/field-name.component\";\nfunction RadioButtonGroupComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"input\", 4);\n    i0.ɵɵlistener(\"click\", function RadioButtonGroupComponent_div_3_Template_input_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectionChanged(item_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", ctx_r0.label);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r1);\n    i0.ɵɵproperty(\"checked\", ctx_r0.isChecked(item_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.shownName);\n  }\n}\nexport class RadioButtonGroupComponent {\n  constructor() {\n    this.selected = null;\n    this.itemSelection = new EventEmitter();\n  }\n  selectionChanged(item) {\n    this.selected = item;\n    this.itemSelection.emit(item);\n  }\n  isChecked(item) {\n    return !!this.selected && this.selected.shownName == item.shownName;\n  }\n}\nRadioButtonGroupComponent.ɵfac = function RadioButtonGroupComponent_Factory(t) {\n  return new (t || RadioButtonGroupComponent)();\n};\nRadioButtonGroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RadioButtonGroupComponent,\n  selectors: [[\"app-radio-button-group\"]],\n  inputs: {\n    label: \"label\",\n    required: \"required\",\n    objects: \"objects\",\n    selected: \"selected\"\n  },\n  outputs: {\n    itemSelection: \"itemSelection\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[1, \"border-1\", \"border-gray-500\", \"rounded\", \"block\"], [3, \"fieldName\", \"required\"], [\"class\", \"flex items-center flex-row gap-x-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"flex-row\", \"gap-x-1\"], [\"type\", \"radio\", 3, \"name\", \"value\", \"checked\", \"click\"], [1, \"text-black\", \"fs-6\"]],\n  template: function RadioButtonGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"fieldset\", 0)(1, \"legend\");\n      i0.ɵɵelement(2, \"app-field-name\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, RadioButtonGroupComponent_div_3_Template, 5, 4, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"fieldName\", ctx.label)(\"required\", ctx.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.objects);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.FieldNameComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","RadioButtonGroupComponent_div_3_Template_input_click_1_listener","restoredCtx","ɵɵrestoreView","_r3","item_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selectionChanged","ɵɵelementEnd","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","ctx_r0","label","ɵɵproperty","isChecked","ɵɵtextInterpolate","shownName","RadioButtonGroupComponent","constructor","selected","itemSelection","item","emit","selectors","inputs","required","objects","outputs","decls","vars","consts","template","RadioButtonGroupComponent_Template","rf","ctx","ɵɵtemplate","RadioButtonGroupComponent_div_3_Template"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\radio-button-group\\radio-button-group.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\radio-button-group\\radio-button-group.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {INamed} from \"../../additional/INamed\";\r\n\r\n@Component({\r\n  selector: 'app-radio-button-group',\r\n  templateUrl: './radio-button-group.component.html',\r\n  styleUrls: ['./radio-button-group.component.css']\r\n})\r\nexport class RadioButtonGroupComponent {\r\n  @Input() label: string;\r\n  @Input() required: boolean;\r\n  @Input() objects: INamed[];\r\n  @Input() selected: INamed = null;\r\n\r\n  @Output() itemSelection = new EventEmitter<INamed>();\r\n\r\n  selectionChanged(item: INamed) {\r\n    this.selected = item;\r\n    this.itemSelection.emit(item);\r\n  }\r\n\r\n  isChecked(item: INamed) {\r\n    return !!this.selected && this.selected.shownName == item.shownName;\r\n  }\r\n}\r\n","<fieldset class=\"border-1 border-gray-500 rounded block\">\r\n  <legend>\r\n    <app-field-name\r\n      [fieldName]=\"label\"\r\n      [required]=\"required\"\r\n    ></app-field-name>\r\n  </legend>\r\n\r\n  <div class=\"flex items-center flex-row gap-x-1\"\r\n    *ngFor=\"let item of objects\"\r\n  >\r\n    <input\r\n      type=\"radio\"\r\n      name=\"{{label}}\"\r\n      value=\"{{item}}\"\r\n      (click)=\"selectionChanged(item)\"\r\n      [checked]=\"isChecked(item)\"\r\n    /><span class=\"text-black fs-6\">{{item.shownName}}</span>\r\n    <br/>\r\n  </div>\r\n</fieldset>\r\n"],"mappings":"AAAA,SAAmBA,YAAY,QAAsB,eAAe;;;;;;;ICQlEC,EAAA,CAAAC,cAAA,aAEC;IAKGD,EAAA,CAAAE,UAAA,mBAAAC,gEAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,gBAAA,CAAAL,OAAA,CAAsB;IAAA,EAAC;IAJlCP,EAAA,CAAAa,YAAA,EAME;IAAAb,EAAA,CAAAC,cAAA,cAA8B;IAAAD,EAAA,CAAAc,MAAA,GAAkB;IAAAd,EAAA,CAAAa,YAAA,EAAO;IACzDb,EAAA,CAAAe,SAAA,SAAK;IACPf,EAAA,CAAAa,YAAA,EAAM;;;;;IANFb,EAAA,CAAAgB,SAAA,GAAgB;IAAhBhB,EAAA,CAAAiB,qBAAA,SAAAC,MAAA,CAAAC,KAAA,CAAgB;IAChBnB,EAAA,CAAAiB,qBAAA,UAAAV,OAAA,CAAgB;IAEhBP,EAAA,CAAAoB,UAAA,YAAAF,MAAA,CAAAG,SAAA,CAAAd,OAAA,EAA2B;IACGP,EAAA,CAAAgB,SAAA,GAAkB;IAAlBhB,EAAA,CAAAsB,iBAAA,CAAAf,OAAA,CAAAgB,SAAA,CAAkB;;;ADTtD,OAAM,MAAOC,yBAAyB;EALtCC,YAAA;IASW,KAAAC,QAAQ,GAAW,IAAI;IAEtB,KAAAC,aAAa,GAAG,IAAI5B,YAAY,EAAU;;EAEpDa,gBAAgBA,CAACgB,IAAY;IAC3B,IAAI,CAACF,QAAQ,GAAGE,IAAI;IACpB,IAAI,CAACD,aAAa,CAACE,IAAI,CAACD,IAAI,CAAC;EAC/B;EAEAP,SAASA,CAACO,IAAY;IACpB,OAAO,CAAC,CAAC,IAAI,CAACF,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACH,SAAS,IAAIK,IAAI,CAACL,SAAS;EACrE;;AAfWC,yBAAyB,C;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB,C;QAAzBA,yBAAyB;EAAAM,SAAA;EAAAC,MAAA;IAAAZ,KAAA;IAAAa,QAAA;IAAAC,OAAA;IAAAP,QAAA;EAAA;EAAAQ,OAAA;IAAAP,aAAA;EAAA;EAAAQ,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRtCxC,EAAA,CAAAC,cAAA,kBAAyD;MAErDD,EAAA,CAAAe,SAAA,wBAGkB;MACpBf,EAAA,CAAAa,YAAA,EAAS;MAETb,EAAA,CAAA0C,UAAA,IAAAC,wCAAA,iBAWM;MACR3C,EAAA,CAAAa,YAAA,EAAW;;;MAjBLb,EAAA,CAAAgB,SAAA,GAAmB;MAAnBhB,EAAA,CAAAoB,UAAA,cAAAqB,GAAA,CAAAtB,KAAA,CAAmB,aAAAsB,GAAA,CAAAT,QAAA;MAMJhC,EAAA,CAAAgB,SAAA,GAAU;MAAVhB,EAAA,CAAAoB,UAAA,YAAAqB,GAAA,CAAAR,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}