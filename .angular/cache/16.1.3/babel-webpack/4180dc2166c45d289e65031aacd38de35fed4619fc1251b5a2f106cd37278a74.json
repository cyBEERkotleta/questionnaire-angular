{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class GenderService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n  isGenderPresent(gender) {\n    return !!gender && !!gender.id && !!gender.name && !!gender.shownName;\n  }\n  getAll() {\n    return this.http.get('http://localhost:8080/genders').pipe(catchError(this.errorHandler.bind(this)));\n  }\n  getGenderById(id) {\n    return this.http.get('http://localhost:8080/genders/' + id).pipe(catchError(this.errorHandler.bind(this)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n}\nGenderService.ɵfac = function GenderService_Factory(t) {\n  return new (t || GenderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nGenderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GenderService,\n  factory: GenderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","throwError","GenderService","constructor","http","errorService","isGenderPresent","gender","id","name","shownName","getAll","get","pipe","errorHandler","bind","getGenderById","error","handle","message","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\gender.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {catchError, Observable, tap, throwError} from \"rxjs\";\nimport {ErrorService} from \"./error.service\";\nimport {Gender} from \"../entity/Gender\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenderService {\n  private http: HttpClient;\n  private errorService: ErrorService;\n\n  constructor(http: HttpClient, errorService: ErrorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n\n  isGenderPresent(gender: Gender): boolean {\n    return !!gender && !!gender.id && !!gender.name && !!gender.shownName;\n  }\n\n  getAll() : Observable<Gender[]> {\n    return this.http.get<Gender[]>('http://localhost:8080/genders')\n      .pipe(\n        catchError(this.errorHandler.bind(this)),\n      );\n  }\n\n  getGenderById(id: number): Observable<Gender> {\n    return this.http.get<Gender>('http://localhost:8080/genders/' + id)\n      .pipe(\n        catchError(this.errorHandler.bind(this))\n      );\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n}\n"],"mappings":"AAEA,SAAQA,UAAU,EAAmBC,UAAU,QAAO,MAAM;;;;AAO5D,OAAM,MAAOC,aAAa;EAIxBC,YAAYC,IAAgB,EAAEC,YAA0B;IACtD,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEAC,eAAeA,CAACC,MAAc;IAC5B,OAAO,CAAC,CAACA,MAAM,IAAI,CAAC,CAACA,MAAM,CAACC,EAAE,IAAI,CAAC,CAACD,MAAM,CAACE,IAAI,IAAI,CAAC,CAACF,MAAM,CAACG,SAAS;EACvE;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAW,+BAA+B,CAAC,CAC5DC,IAAI,CACHb,UAAU,CAAC,IAAI,CAACc,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEAC,aAAaA,CAACR,EAAU;IACtB,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAS,gCAAgC,GAAGJ,EAAE,CAAC,CAChEK,IAAI,CACHb,UAAU,CAAC,IAAI,CAACc,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEQD,YAAYA,CAACG,KAAwB;IAC3C,IAAI,CAACZ,YAAY,CAACa,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOlB,UAAU,CAAC,MAAMgB,KAAK,CAACE,OAAO,CAAC;EACxC;;AA9BWjB,aAAa,C;mBAAbA,aAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAbvB,aAAa,C;SAAbA,aAAa;EAAAwB,OAAA,EAAbxB,aAAa,CAAAyB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}