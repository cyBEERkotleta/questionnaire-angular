{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./role.service\";\nexport class SessionService {\n  constructor(roleService) {\n    this.TOKEN_KEY = 'token';\n    this.TOKEN_BY_DEFAULT = 'no_token';\n    this.roleService = roleService;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  getUser() {\n    return this.user;\n  }\n  isCurrentUserAuthorized() {\n    return !!this.user;\n  }\n  isCurrentUserAdmin() {\n    if (!this.isCurrentUserAuthorized()) return false;\n    return Object.is(this.user.userRole, this.roleService.adminRole);\n  }\n  isCurrentUserMember() {\n    if (!this.isCurrentUserAuthorized()) return false;\n    return Object.is(this.user.userRole, this.roleService.memberRole);\n  }\n  resetUser() {\n    this.user = null;\n  }\n  ping() {\n    console.log('sessionStorage token=' + sessionStorage.getItem(this.TOKEN_KEY));\n    console.log('localStorage token=' + localStorage.getItem(this.TOKEN_KEY));\n  }\n  saveTokenToLocalStorage(token) {\n    localStorage.setItem(this.TOKEN_KEY, token);\n    console.log('method saveTokenToLocalStorage');\n    this.ping();\n  }\n  saveTokenToSessionStorage(token) {\n    sessionStorage.setItem(this.TOKEN_KEY, token);\n    console.log('method saveTokenToSessionStorage');\n    this.ping();\n  }\n  updateTokenWhereItWasSet(token) {\n    console.log('method updateTokenWhereItWasSet');\n    this.ping();\n    if (this.getTokenFromSessionStorage() != this.TOKEN_BY_DEFAULT) this.saveTokenToSessionStorage(token);\n    if (this.getTokenFromLocalStorage() != this.TOKEN_BY_DEFAULT) this.saveTokenToLocalStorage(token);\n    this.ping();\n  }\n  getTokenFromLocalStorage() {\n    console.log('method getTokenFromLocalStorage');\n    this.ping();\n    let token = localStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n  getTokenFromSessionStorage() {\n    console.log('method getTokenFromSessionStorage');\n    this.ping();\n    let token = sessionStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n  getToken() {\n    console.log('method getToken');\n    this.ping();\n    let token = this.getTokenFromSessionStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      console.log('token: ' + token);\n      return token;\n    }\n    token = this.getTokenFromLocalStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      this.saveTokenToSessionStorage(token);\n      console.log('token: ' + token);\n      return token;\n    }\n    console.log('token: ' + token);\n    return this.TOKEN_BY_DEFAULT;\n  }\n  removeTokenFromLocalStorage() {\n    console.log('method removeTokenFromLocalStorage');\n    this.ping();\n    localStorage.removeItem(this.TOKEN_KEY);\n    this.ping();\n  }\n  removeTokenFromSessionStorage() {\n    console.log('method removeTokenFromSessionStorage');\n    this.ping();\n    sessionStorage.removeItem(this.TOKEN_KEY);\n    this.ping();\n  }\n  removeTokenFromEverywhere() {\n    console.log('method removeTokenFromEverywhere');\n    this.removeTokenFromSessionStorage();\n    this.removeTokenFromLocalStorage();\n  }\n}\nSessionService.ɵfac = function SessionService_Factory(t) {\n  return new (t || SessionService)(i0.ɵɵinject(i1.RoleService));\n};\nSessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionService,\n  factory: SessionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SessionService","constructor","roleService","TOKEN_KEY","TOKEN_BY_DEFAULT","setUser","user","getUser","isCurrentUserAuthorized","isCurrentUserAdmin","Object","is","userRole","adminRole","isCurrentUserMember","memberRole","resetUser","ping","console","log","sessionStorage","getItem","localStorage","saveTokenToLocalStorage","token","setItem","saveTokenToSessionStorage","updateTokenWhereItWasSet","getTokenFromSessionStorage","getTokenFromLocalStorage","getToken","removeTokenFromLocalStorage","removeItem","removeTokenFromSessionStorage","removeTokenFromEverywhere","i0","ɵɵinject","i1","RoleService","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {User} from \"../entity/User\";\nimport {RoleService} from \"./role.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  private TOKEN_KEY = 'token';\n  private TOKEN_BY_DEFAULT = 'no_token';\n\n  private user: User;\n\n  private roleService: RoleService;\n\n  constructor(roleService: RoleService) {\n    this.roleService = roleService;\n  }\n\n  setUser(user: User) {\n    this.user = user;\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n  isCurrentUserAuthorized(): boolean {\n    return !!this.user;\n  }\n\n  isCurrentUserAdmin(): boolean {\n    if (!this.isCurrentUserAuthorized())\n      return false;\n    return Object.is(this.user.userRole, this.roleService.adminRole);\n  }\n\n  isCurrentUserMember(): boolean {\n    if (!this.isCurrentUserAuthorized())\n      return false;\n    return Object.is(this.user.userRole, this.roleService.memberRole);\n  }\n\n  resetUser() {\n    this.user = null;\n  }\n\n  ping() {\n    console.log('sessionStorage token=' + sessionStorage.getItem(this.TOKEN_KEY));\n    console.log('localStorage token=' + localStorage.getItem(this.TOKEN_KEY));\n  }\n\n  saveTokenToLocalStorage(token: string){\n    localStorage.setItem(this.TOKEN_KEY, token);\n\n    console.log('method saveTokenToLocalStorage');\n    this.ping();\n  }\n\n  saveTokenToSessionStorage(token: string) {\n    sessionStorage.setItem(this.TOKEN_KEY, token);\n\n    console.log('method saveTokenToSessionStorage');\n    this.ping();\n  }\n\n  updateTokenWhereItWasSet(token: string) {\n    console.log('method updateTokenWhereItWasSet');\n    this.ping();\n\n    if (this.getTokenFromSessionStorage() != this.TOKEN_BY_DEFAULT)\n      this.saveTokenToSessionStorage(token);\n    if (this.getTokenFromLocalStorage() != this.TOKEN_BY_DEFAULT)\n      this.saveTokenToLocalStorage(token);\n\n    this.ping();\n  }\n\n  getTokenFromLocalStorage() {\n    console.log('method getTokenFromLocalStorage');\n    this.ping();\n\n    let token = localStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n\n  getTokenFromSessionStorage() {\n    console.log('method getTokenFromSessionStorage');\n    this.ping();\n\n    let token = sessionStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n\n  getToken() {\n    console.log('method getToken');\n    this.ping();\n\n    let token = this.getTokenFromSessionStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      console.log('token: ' + token);\n      return token;\n    }\n    token = this.getTokenFromLocalStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      this.saveTokenToSessionStorage(token);\n      console.log('token: ' + token);\n      return token;\n    }\n    console.log('token: ' + token);\n    return this.TOKEN_BY_DEFAULT;\n  }\n\n  removeTokenFromLocalStorage(){\n    console.log('method removeTokenFromLocalStorage');\n    this.ping();\n\n    localStorage.removeItem(this.TOKEN_KEY);\n\n    this.ping();\n  }\n\n  removeTokenFromSessionStorage(){\n    console.log('method removeTokenFromSessionStorage');\n    this.ping();\n\n    sessionStorage.removeItem(this.TOKEN_KEY);\n\n    this.ping();\n  }\n\n  removeTokenFromEverywhere(){\n    console.log('method removeTokenFromEverywhere');\n    this.removeTokenFromSessionStorage();\n    this.removeTokenFromLocalStorage();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}