{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../field-name/field-name.component\";\nfunction RadioButtonGroupComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"input\", 4);\n    i0.ɵɵlistener(\"click\", function RadioButtonGroupComponent_div_3_Template_input_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectionChanged(item_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", ctx_r0.label);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r1);\n    i0.ɵɵproperty(\"checked\", ctx_r0.isChecked(item_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.shownName);\n  }\n}\nexport let RadioButtonGroupComponent = /*#__PURE__*/(() => {\n  class RadioButtonGroupComponent {\n    constructor() {\n      this.selected = null;\n      this.itemSelection = new EventEmitter();\n    }\n    selectionChanged(item) {\n      this.selected = item;\n      this.itemSelection.emit(item);\n    }\n    isChecked(item) {\n      return !!this.selected && this.selected.shownName == item.shownName;\n    }\n  }\n  RadioButtonGroupComponent.ɵfac = function RadioButtonGroupComponent_Factory(t) {\n    return new (t || RadioButtonGroupComponent)();\n  };\n  RadioButtonGroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RadioButtonGroupComponent,\n    selectors: [[\"app-radio-button-group\"]],\n    inputs: {\n      label: \"label\",\n      required: \"required\",\n      objects: \"objects\",\n      selected: \"selected\"\n    },\n    outputs: {\n      itemSelection: \"itemSelection\"\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[1, \"border-1\", \"border-gray-500\", \"rounded\", \"block\"], [3, \"fieldName\", \"required\"], [\"class\", \"flex items-center flex-row gap-x-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"flex-row\", \"gap-x-1\"], [\"type\", \"radio\", 3, \"name\", \"value\", \"checked\", \"click\"], [1, \"text-black\", \"fs-6\"]],\n    template: function RadioButtonGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"fieldset\", 0)(1, \"legend\");\n        i0.ɵɵelement(2, \"app-field-name\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, RadioButtonGroupComponent_div_3_Template, 5, 4, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"fieldName\", ctx.label)(\"required\", ctx.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.objects);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.FieldNameComponent]\n  });\n  return RadioButtonGroupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}