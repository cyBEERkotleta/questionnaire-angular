{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/topic.service\";\nimport * as i2 from \"../../service/modal-edit-window.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../little-components/text-field/text-field.component\";\nimport * as i6 from \"../../little-components/error-paragraph/error-paragraph.component\";\nimport * as i7 from \"../../little-components/middle-control/middle-control.component\";\nimport * as i8 from \"../../little-components/multi-line-text/multi-line-text.component\";\nfunction EditTopicComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nexport class EditTopicComponent {\n  constructor(topicService, modalEditWindowService) {\n    this.showAllErrors = false;\n    this.globalError = '';\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.minLength(3), Validators.maxLength(100), Validators.required]),\n      description: new FormControl('', [Validators.maxLength(250)])\n    });\n    this.topicService = topicService;\n    this.modalEditWindowsService = modalEditWindowService;\n    this.editedTopic = this.modalEditWindowsService.getEditableObject();\n  }\n  ngOnInit() {\n    this.updateFormFields();\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n  isGlobalErrorSet() {\n    return this.globalError != '';\n  }\n  submit() {\n    if (this.anyErrorExists()) return;\n    this.saveTopic();\n  }\n  anyErrorExists() {\n    this.resetGlobalError();\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n  saveTopic() {\n    this.updateEditedFormWithFields();\n    this.subscription = this.topicService.saveTopic(this.editedTopic).subscribe(result => {\n      console.log(result);\n      if (result.success) {\n        this.modalEditWindowsService.close();\n        location.reload();\n      } else {\n        this.globalError = result.message;\n      }\n    });\n  }\n  updateFormFields() {\n    this.form.controls.name.setValue(this.editedTopic.name);\n    this.form.controls.description.setValue(this.editedTopic.description);\n  }\n  resetGlobalError() {\n    this.globalError = '';\n  }\n  updateEditedFormWithFields() {\n    let name = this.getNameFromField();\n    let description = this.getDescriptionFromField();\n    this.editedTopic.name = name;\n    this.editedTopic.description = description;\n  }\n  getNameFromField() {\n    return this.form.controls.name.getRawValue();\n  }\n  getDescriptionFromField() {\n    return this.form.controls.description.getRawValue();\n  }\n  isAnyErrorInFields() {\n    return this.doesControlHaveError(this.form.controls.name) || this.doesControlHaveError(this.form.controls.description);\n  }\n  doesControlHaveError(formControl) {\n    return formControl.errors != null;\n  }\n}\nEditTopicComponent.ɵfac = function EditTopicComponent_Factory(t) {\n  return new (t || EditTopicComponent)(i0.ɵɵdirectiveInject(i1.TopicService), i0.ɵɵdirectiveInject(i2.ModalEditWindowService));\n};\nEditTopicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditTopicComponent,\n  selectors: [[\"app-edit-topic\"]],\n  decls: 8,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [\"fieldName\", \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\", 3, \"formElement\", \"showError\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [3, \"errorMessage\"]],\n  template: function EditTopicComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function EditTopicComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtemplate(1, EditTopicComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n      i0.ɵɵelement(2, \"app-text-field\", 2)(3, \"app-multi-line-text\", 3)(4, \"br\");\n      i0.ɵɵelementStart(5, \"app-middle-control\")(6, \"button\", 4);\n      i0.ɵɵtext(7, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.name)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.description)(\"showError\", ctx.showAllErrors);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.TextFieldComponent, i6.ErrorParagraphComponent, i7.MiddleControlComponent, i8.MultiLineTextComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelement","ɵɵproperty","ctx_r0","globalError","EditTopicComponent","constructor","topicService","modalEditWindowService","showAllErrors","form","name","minLength","maxLength","required","description","modalEditWindowsService","editedTopic","getEditableObject","ngOnInit","updateFormFields","ngOnDestroy","subscription","unsubscribe","isGlobalErrorSet","submit","anyErrorExists","saveTopic","resetGlobalError","isAnyErrorInFields","updateEditedFormWithFields","subscribe","result","console","log","success","close","location","reload","message","controls","setValue","getNameFromField","getDescriptionFromField","getRawValue","doesControlHaveError","formControl","errors","ɵɵdirectiveInject","i1","TopicService","i2","ModalEditWindowService","selectors","decls","vars","consts","template","EditTopicComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EditTopicComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","EditTopicComponent_app_error_paragraph_1_Template","ɵɵtext","ɵɵelementEnd","ɵɵadvance"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\edit-topic\\edit-topic.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\edit-topic\\edit-topic.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ModalEditWindowService} from \"../../service/modal-edit-window.service\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Topic} from \"../../entity/Topic\";\r\nimport {TopicService} from \"../../service/topic.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-topic',\r\n  templateUrl: './edit-topic.component.html',\r\n  styleUrls: ['./edit-topic.component.css']\r\n})\r\nexport class EditTopicComponent implements OnInit, OnDestroy {\r\n  editedTopic: Topic;\r\n\r\n  private topicService: TopicService;\r\n  private modalEditWindowsService: ModalEditWindowService;\r\n\r\n  showAllErrors = false;\r\n  globalError: string = '';\r\n\r\n  private subscription: Subscription;\r\n\r\n  form = new FormGroup({\r\n    name: new FormControl<string>('', [\r\n      Validators.minLength(3),\r\n      Validators.maxLength(100),\r\n      Validators.required\r\n    ]),\r\n    description: new FormControl<string>('', [\r\n      Validators.maxLength(250)\r\n    ])\r\n  });\r\n\r\n  constructor(topicService: TopicService,\r\n              modalEditWindowService: ModalEditWindowService) {\r\n    this.topicService = topicService;\r\n    this.modalEditWindowsService = modalEditWindowService;\r\n\r\n    this.editedTopic = this.modalEditWindowsService.getEditableObject() as Topic;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateFormFields();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription)\r\n      this.subscription.unsubscribe();\r\n  }\r\n\r\n  isGlobalErrorSet(): boolean {\r\n    return this.globalError != '';\r\n  }\r\n\r\n  submit() {\r\n    if (this.anyErrorExists())\r\n      return;\r\n\r\n    this.saveTopic();\r\n  }\r\n\r\n  private anyErrorExists(): boolean {\r\n    this.resetGlobalError();\r\n\r\n    if (this.isAnyErrorInFields()) {\r\n      this.showAllErrors = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private saveTopic() {\r\n    this.updateEditedFormWithFields();\r\n\r\n    this.subscription = this.topicService.saveTopic(this.editedTopic)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        if (result.success) {\r\n          this.modalEditWindowsService.close();\r\n          location.reload();\r\n        }\r\n        else {\r\n          this.globalError = result.message;\r\n        }\r\n      });\r\n  }\r\n\r\n  private updateFormFields() {\r\n    this.form.controls.name.setValue(this.editedTopic.name);\r\n    this.form.controls.description.setValue(this.editedTopic.description);\r\n  }\r\n\r\n  private resetGlobalError() {\r\n    this.globalError = '';\r\n  }\r\n\r\n  private updateEditedFormWithFields() {\r\n    let name = this.getNameFromField();\r\n    let description = this.getDescriptionFromField();\r\n\r\n    this.editedTopic.name = name;\r\n    this.editedTopic.description = description;\r\n  }\r\n\r\n  private getNameFromField(): string {\r\n    return this.form.controls.name.getRawValue();\r\n  }\r\n\r\n  private getDescriptionFromField(): string {\r\n    return this.form.controls.description.getRawValue();\r\n  }\r\n\r\n  private isAnyErrorInFields(): boolean {\r\n    return this.doesControlHaveError(this.form.controls.name) ||\r\n      this.doesControlHaveError(this.form.controls.description);\r\n  }\r\n\r\n  private doesControlHaveError(formControl: FormControl): boolean {\r\n    return formControl.errors != null;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <app-error-paragraph\r\n    *ngIf=\"isGlobalErrorSet()\"\r\n    [errorMessage]=\"globalError\"\r\n  ></app-error-paragraph>\r\n\r\n  <app-text-field\r\n    fieldName=\"Название\"\r\n    [formElement]=\"form.controls.name\"\r\n    [showError]=\"showAllErrors\"\r\n  ></app-text-field>\r\n\r\n  <app-multi-line-text\r\n    fieldName=\"Описание\"\r\n    [formElement]=\"form.controls.description\"\r\n    [showError]=\"showAllErrors\"\r\n  ></app-multi-line-text>\r\n\r\n  <br/>\r\n\r\n  <app-middle-control>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"button-red-rounded\"\r\n    >Сохранить изменения</button>\r\n  </app-middle-control>\r\n</form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}