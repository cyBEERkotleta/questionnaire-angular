{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"StompJs\", [], factory);else if (typeof exports === 'object') exports[\"StompJs\"] = factory();else root[\"StompJs\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __webpack_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __webpack_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/if (!__webpack_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // define __esModule on exports\n      /******/\n      __webpack_require__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n      /******/ // create a fake namespace object\n      /******/ // mode & 1: value is a module id, require it\n      /******/ // mode & 2: merge all properties of value into the ns\n      /******/ // mode & 4: return value when already ns object\n      /******/ // mode & 8|1: behave like require\n      /******/\n      __webpack_require__.t = function (value, mode) {\n        /******/if (mode & 1) value = __webpack_require__(value);\n        /******/\n        if (mode & 8) return value;\n        /******/\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n        var ns = Object.create(null);\n        /******/\n        __webpack_require__.r(ns);\n        /******/\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n        return ns;\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __webpack_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __webpack_require__.p = \"\";\n      /******/\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __webpack_require__(__webpack_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n    /******/({\n      /***/\"./src/byte.ts\":\n      /*!*********************!*\\\n        !*** ./src/byte.ts ***!\n        \\*********************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Some byte values, used as per STOMP specifications.\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n        exports.BYTE = {\n          // LINEFEED byte (octet 10)\n          LF: '\\x0A',\n          // NULL byte (octet 0)\n          NULL: '\\x00'\n        };\n\n        /***/\n      },\n\n      /***/\"./src/client.ts\":\n      /*!***********************!*\\\n        !*** ./src/client.ts ***!\n        \\***********************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n          function adopt(value) {\n            return value instanceof P ? value : new P(function (resolve) {\n              resolve(value);\n            });\n          }\n          return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n              try {\n                step(generator.next(value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function rejected(value) {\n              try {\n                step(generator[\"throw\"](value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function step(result) {\n              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n          });\n        };\n        var __generator = this && this.__generator || function (thisArg, body) {\n          var _ = {\n              label: 0,\n              sent: function () {\n                if (t[0] & 1) throw t[1];\n                return t[1];\n              },\n              trys: [],\n              ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n          return g = {\n            next: verb(0),\n            \"throw\": verb(1),\n            \"return\": verb(2)\n          }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n            return this;\n          }), g;\n          function verb(n) {\n            return function (v) {\n              return step([n, v]);\n            };\n          }\n          function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_) try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n              if (y = 0, t) op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return {\n                    value: op[1],\n                    done: false\n                  };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n            if (op[0] & 5) throw op[1];\n            return {\n              value: op[0] ? op[1] : void 0,\n              done: true\n            };\n          }\n        };\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        var stomp_handler_1 = __webpack_require__( /*! ./stomp-handler */\"./src/stomp-handler.ts\");\n        var versions_1 = __webpack_require__( /*! ./versions */\"./src/versions.ts\");\n        var web_socket_state_1 = __webpack_require__( /*! ./web-socket-state */\"./src/web-socket-state.ts\");\n        /**\n         * STOMP Client Class.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n        var Client = /** @class */function () {\n          /**\n           * Create an instance.\n           */\n          function Client(conf) {\n            if (conf === void 0) {\n              conf = {};\n            }\n            /**\n             * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n             *\n             * Example:\n             * ```javascript\n             *        // Try only versions 1.0 and 1.1\n             *        client.stompVersions = new Versions(['1.0', '1.1'])\n             * ```\n             */\n            this.stompVersions = versions_1.Versions.default;\n            /**\n             *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n             */\n            this.reconnectDelay = 5000;\n            /**\n             * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n             */\n            this.heartbeatIncoming = 10000;\n            /**\n             * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n             */\n            this.heartbeatOutgoing = 10000;\n            /**\n             * This switches on a non standard behavior while sending WebSocket packets.\n             * It splits larger (text) packets into chunks of [maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n             * Only Java Spring brokers seems to use this mode.\n             *\n             * WebSockets, by itself, split large (text) packets,\n             * so it is not needed with a truly compliant STOMP/WebSocket broker.\n             * Actually setting it for such broker will cause large messages to fail.\n             *\n             * `false` by default.\n             *\n             * Binary frames are never split.\n             */\n            this.splitLargeFrames = false;\n            /**\n             * See [splitLargeFrames]{@link Client#splitLargeFrames}.\n             * This has no effect if [splitLargeFrames]{@link Client#splitLargeFrames} is `false`.\n             */\n            this.maxWebSocketChunkSize = 8 * 1024;\n            /**\n             * Usually the\n             * [type of WebSocket frame]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send#Parameters}\n             * is automatically decided by type of the payload.\n             * Default is `false`, which should work with all compliant brokers.\n             *\n             * Set this flag to force binary frames.\n             */\n            this.forceBinaryWSFrames = false;\n            /**\n             * A bug in ReactNative chops a string on occurrence of a NULL.\n             * See issue [https://github.com/stomp-js/stompjs/issues/89]{@link https://github.com/stomp-js/stompjs/issues/89}.\n             * This makes incoming WebSocket messages invalid STOMP packets.\n             * Setting this flag attempts to reverse the damage by appending a NULL.\n             * If the broker splits a large message into multiple WebSocket messages,\n             * this flag will cause data loss and abnormal termination of connection.\n             *\n             * This is not an ideal solution, but a stop gap until the underlying issue is fixed at ReactNative library.\n             */\n            this.appendMissingNULLonIncoming = false;\n            this._active = false;\n            // Dummy callbacks\n            var noOp = function () {};\n            this.debug = noOp;\n            this.beforeConnect = noOp;\n            this.onConnect = noOp;\n            this.onDisconnect = noOp;\n            this.onUnhandledMessage = noOp;\n            this.onUnhandledReceipt = noOp;\n            this.onUnhandledFrame = noOp;\n            this.onStompError = noOp;\n            this.onWebSocketClose = noOp;\n            this.onWebSocketError = noOp;\n            this.logRawCommunication = false;\n            // These parameters would typically get proper values before connect is called\n            this.connectHeaders = {};\n            this._disconnectHeaders = {};\n            // Apply configuration\n            this.configure(conf);\n          }\n          Object.defineProperty(Client.prototype, \"webSocket\", {\n            /**\n             * Underlying WebSocket instance, READONLY.\n             */\n            get: function () {\n              return this._webSocket;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"disconnectHeaders\", {\n            /**\n             * Disconnection headers.\n             */\n            get: function () {\n              return this._disconnectHeaders;\n            },\n            set: function (value) {\n              this._disconnectHeaders = value;\n              if (this._stompHandler) {\n                this._stompHandler.disconnectHeaders = this._disconnectHeaders;\n              }\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"connected\", {\n            /**\n             * `true` if there is a active connection with STOMP Broker\n             */\n            get: function () {\n              return !!this._stompHandler && this._stompHandler.connected;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"connectedVersion\", {\n            /**\n             * version of STOMP protocol negotiated with the server, READONLY\n             */\n            get: function () {\n              return this._stompHandler ? this._stompHandler.connectedVersion : undefined;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"active\", {\n            /**\n             * if the client is active (connected or going to reconnect)\n             */\n            get: function () {\n              return this._active;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          /**\n           * Update configuration.\n           */\n          Client.prototype.configure = function (conf) {\n            // bulk assign all properties to this\n            Object.assign(this, conf);\n          };\n          /**\n           * Initiate the connection with the broker.\n           * If the connection breaks, as per [Client#reconnectDelay]{@link Client#reconnectDelay},\n           * it will keep trying to reconnect.\n           *\n           * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n           */\n          Client.prototype.activate = function () {\n            this._active = true;\n            this._connect();\n          };\n          Client.prototype._connect = function () {\n            return __awaiter(this, void 0, void 0, function () {\n              var _this = this;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (this.connected) {\n                      this.debug('STOMP: already connected, nothing to do');\n                      return [2 /*return*/];\n                    }\n\n                    return [4 /*yield*/, this.beforeConnect()];\n                  case 1:\n                    _a.sent();\n                    if (!this._active) {\n                      this.debug('Client has been marked inactive, will not attempt to connect');\n                      return [2 /*return*/];\n                    }\n\n                    this.debug('Opening Web Socket...');\n                    // Get the actual WebSocket (or a similar object)\n                    this._webSocket = this._createWebSocket();\n                    this._stompHandler = new stomp_handler_1.StompHandler(this, this._webSocket, {\n                      debug: this.debug,\n                      stompVersions: this.stompVersions,\n                      connectHeaders: this.connectHeaders,\n                      disconnectHeaders: this._disconnectHeaders,\n                      heartbeatIncoming: this.heartbeatIncoming,\n                      heartbeatOutgoing: this.heartbeatOutgoing,\n                      splitLargeFrames: this.splitLargeFrames,\n                      maxWebSocketChunkSize: this.maxWebSocketChunkSize,\n                      forceBinaryWSFrames: this.forceBinaryWSFrames,\n                      logRawCommunication: this.logRawCommunication,\n                      appendMissingNULLonIncoming: this.appendMissingNULLonIncoming,\n                      onConnect: function (frame) {\n                        if (!_this._active) {\n                          _this.debug('STOMP got connected while deactivate was issued, will disconnect now');\n                          _this._disposeStompHandler();\n                          return;\n                        }\n                        _this.onConnect(frame);\n                      },\n                      onDisconnect: function (frame) {\n                        _this.onDisconnect(frame);\n                      },\n                      onStompError: function (frame) {\n                        _this.onStompError(frame);\n                      },\n                      onWebSocketClose: function (evt) {\n                        _this.onWebSocketClose(evt);\n                        // The callback is called before attempting to reconnect, this would allow the client\n                        // to be `deactivated` in the callback.\n                        if (_this._active) {\n                          _this._schedule_reconnect();\n                        }\n                      },\n                      onWebSocketError: function (evt) {\n                        _this.onWebSocketError(evt);\n                      },\n                      onUnhandledMessage: function (message) {\n                        _this.onUnhandledMessage(message);\n                      },\n                      onUnhandledReceipt: function (frame) {\n                        _this.onUnhandledReceipt(frame);\n                      },\n                      onUnhandledFrame: function (frame) {\n                        _this.onUnhandledFrame(frame);\n                      }\n                    });\n                    this._stompHandler.start();\n                    return [2 /*return*/];\n                }\n              });\n            });\n          };\n\n          Client.prototype._createWebSocket = function () {\n            var webSocket;\n            if (this.webSocketFactory) {\n              webSocket = this.webSocketFactory();\n            } else {\n              webSocket = new WebSocket(this.brokerURL, this.stompVersions.protocolVersions());\n            }\n            webSocket.binaryType = 'arraybuffer';\n            return webSocket;\n          };\n          Client.prototype._schedule_reconnect = function () {\n            var _this = this;\n            if (this.reconnectDelay > 0) {\n              this.debug(\"STOMP: scheduling reconnection in \" + this.reconnectDelay + \"ms\");\n              this._reconnector = setTimeout(function () {\n                _this._connect();\n              }, this.reconnectDelay);\n            }\n          };\n          /**\n           * Disconnect if connected and stop auto reconnect loop.\n           * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n           *\n           * To reactivate you can call [Client#activate]{@link Client#activate}.\n           */\n          Client.prototype.deactivate = function () {\n            // indicate that auto reconnect loop should terminate\n            this._active = false;\n            // Clear if a reconnection was scheduled\n            if (this._reconnector) {\n              clearTimeout(this._reconnector);\n            }\n            this._disposeStompHandler();\n          };\n          /**\n           * Force disconnect if there is an active connection by directly closing the underlying WebSocket.\n           * This is different than a normal disconnect where a DISCONNECT sequence is carried out with the broker.\n           * After forcing disconnect, automatic reconnect will be attempted.\n           * To stop further reconnects call [Client#deactivate]{@link Client#deactivate} as well.\n           */\n          Client.prototype.forceDisconnect = function () {\n            if (this._webSocket) {\n              if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._stompHandler._closeWebsocket();\n              }\n            }\n          };\n          Client.prototype._disposeStompHandler = function () {\n            // Dispose STOMP Handler\n            if (this._stompHandler) {\n              this._stompHandler.dispose();\n              this._stompHandler = null;\n            }\n          };\n          /**\n           * Send a message to a named destination. Refer to your STOMP broker documentation for types\n           * and naming of destinations.\n           *\n           * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n           *\n           * `body` must be String.\n           * You will need to covert the payload to string in case it is not string (e.g. JSON).\n           *\n           * To send a binary message body use binaryBody parameter. It should be a\n           * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n           * Sometimes brokers may not support binary frames out of the box.\n           * Please check your broker documentation.\n           *\n           * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n           * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n           * For binary messages `content-length` header is always added.\n           *\n           * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n           * and `content-length` header is missing.\n           *\n           * ```javascript\n           *        client.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n           *\n           *        // Only destination is mandatory parameter\n           *        client.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n           *\n           *        // Skip content-length header in the frame to the broker\n           *        client.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n           *\n           *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n           *        // setting content-type header is not mandatory, however a good practice\n           *        client.publish({destination: '/topic/special', binaryBody: binaryData,\n           *                         headers: {'content-type': 'application/octet-stream'}});\n           * ```\n           */\n          Client.prototype.publish = function (params) {\n            this._stompHandler.publish(params);\n          };\n          /**\n           * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n           * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n           * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n           * random number or a combination may be used.\n           *\n           * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n           * The operation needs to be matched based in the value of the receipt-id.\n           *\n           * This method allow watching for a receipt and invoke the callback\n           * when corresponding receipt has been received.\n           *\n           * The actual {@link FrameImpl} will be passed as parameter to the callback.\n           *\n           * Example:\n           * ```javascript\n           *        // Subscribing with acknowledgement\n           *        let receiptId = randomText();\n           *\n           *        client.watchForReceipt(receiptId, function() {\n           *          // Will be called after server acknowledges\n           *        });\n           *\n           *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n           *\n           *\n           *        // Publishing with acknowledgement\n           *        receiptId = randomText();\n           *\n           *        client.watchForReceipt(receiptId, function() {\n           *          // Will be called after server acknowledges\n           *        });\n           *        client.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n           * ```\n           */\n          Client.prototype.watchForReceipt = function (receiptId, callback) {\n            this._stompHandler.watchForReceipt(receiptId, callback);\n          };\n          /**\n           * Subscribe to a STOMP Broker location. The callback will be invoked for each received message with\n           * the {@link IMessage} as argument.\n           *\n           * Note: The library will generate an unique ID if there is none provided in the headers.\n           *       To use your own ID, pass it using the headers argument.\n           *\n           * ```javascript\n           *        callback = function(message) {\n           *        // called when the client receives a STOMP message from the server\n           *          if (message.body) {\n           *            alert(\"got message with body \" + message.body)\n           *          } else {\n           *            alert(\"got empty message\");\n           *          }\n           *        });\n           *\n           *        var subscription = client.subscribe(\"/queue/test\", callback);\n           *\n           *        // Explicit subscription id\n           *        var mySubId = 'my-subscription-id-001';\n           *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n           * ```\n           */\n          Client.prototype.subscribe = function (destination, callback, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            return this._stompHandler.subscribe(destination, callback, headers);\n          };\n          /**\n           * It is preferable to unsubscribe from a subscription by calling\n           * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n           *\n           * ```javascript\n           *        var subscription = client.subscribe(destination, onmessage);\n           *        // ...\n           *        subscription.unsubscribe();\n           * ```\n           *\n           * See: http://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n           */\n          Client.prototype.unsubscribe = function (id, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            this._stompHandler.unsubscribe(id, headers);\n          };\n          /**\n           * Start a transaction, the returned {@link ITransaction} has methods - [commit]{@link ITransaction#commit}\n           * and [abort]{@link ITransaction#abort}.\n           *\n           * `transactionId` is optional, if not passed the library will generate it internally.\n           */\n          Client.prototype.begin = function (transactionId) {\n            return this._stompHandler.begin(transactionId);\n          };\n          /**\n           * Commit a transaction.\n           *\n           * It is preferable to commit a transaction by calling [commit]{@link ITransaction#commit} directly on\n           * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n           *\n           * ```javascript\n           *        var tx = client.begin(txId);\n           *        //...\n           *        tx.commit();\n           * ```\n           */\n          Client.prototype.commit = function (transactionId) {\n            this._stompHandler.commit(transactionId);\n          };\n          /**\n           * Abort a transaction.\n           * It is preferable to abort a transaction by calling [abort]{@link ITransaction#abort} directly on\n           * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n           *\n           * ```javascript\n           *        var tx = client.begin(txId);\n           *        //...\n           *        tx.abort();\n           * ```\n           */\n          Client.prototype.abort = function (transactionId) {\n            this._stompHandler.abort(transactionId);\n          };\n          /**\n           * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link IMessage#ack} directly\n           * on the {@link IMessage} handled by a subscription callback:\n           *\n           * ```javascript\n           *        var callback = function (message) {\n           *          // process the message\n           *          // acknowledge it\n           *          message.ack();\n           *        };\n           *        client.subscribe(destination, callback, {'ack': 'client'});\n           * ```\n           */\n          Client.prototype.ack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            this._stompHandler.ack(messageId, subscriptionId, headers);\n          };\n          /**\n           * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link IMessage#nack} directly\n           * on the {@link IMessage} handled by a subscription callback:\n           *\n           * ```javascript\n           *        var callback = function (message) {\n           *          // process the message\n           *          // an error occurs, nack it\n           *          message.nack();\n           *        };\n           *        client.subscribe(destination, callback, {'ack': 'client'});\n           * ```\n           */\n          Client.prototype.nack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            this._stompHandler.nack(messageId, subscriptionId, headers);\n          };\n          return Client;\n        }();\n        exports.Client = Client;\n\n        /***/\n      },\n\n      /***/\"./src/compatibility/compat-client.ts\":\n      /*!********************************************!*\\\n        !*** ./src/compatibility/compat-client.ts ***!\n        \\********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var __extends = this && this.__extends || function () {\n          var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf || {\n              __proto__: []\n            } instanceof Array && function (d, b) {\n              d.__proto__ = b;\n            } || function (d, b) {\n              for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            };\n            return extendStatics(d, b);\n          };\n          return function (d, b) {\n            extendStatics(d, b);\n            function __() {\n              this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n          };\n        }();\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        var client_1 = __webpack_require__( /*! ../client */\"./src/client.ts\");\n        var heartbeat_info_1 = __webpack_require__( /*! ./heartbeat-info */\"./src/compatibility/heartbeat-info.ts\");\n        /**\n         * Available for backward compatibility, please shift to using {@link Client}.\n         *\n         * **Deprecated**\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n         */\n        var CompatClient = /** @class */function (_super) {\n          __extends(CompatClient, _super);\n          /**\n           * Available for backward compatibility, please shift to using {@link Client}\n           * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n           *\n           * **Deprecated**\n           *\n           * @internal\n           */\n          function CompatClient(webSocketFactory) {\n            var _this = _super.call(this) || this;\n            /**\n             * It is no op now. No longer needed. Large packets work out of the box.\n             */\n            _this.maxWebSocketFrameSize = 16 * 1024;\n            _this._heartbeatInfo = new heartbeat_info_1.HeartbeatInfo(_this);\n            _this.reconnect_delay = 0;\n            _this.webSocketFactory = webSocketFactory;\n            // Default from previous version\n            _this.debug = function () {\n              var message = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n              }\n              console.log.apply(console, message);\n            };\n            return _this;\n          }\n          CompatClient.prototype._parseConnect = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            var closeEventCallback;\n            var connectCallback;\n            var errorCallback;\n            var headers = {};\n            if (args.length < 2) {\n              throw new Error('Connect requires at least 2 arguments');\n            }\n            if (typeof args[1] === 'function') {\n              headers = args[0], connectCallback = args[1], errorCallback = args[2], closeEventCallback = args[3];\n            } else {\n              switch (args.length) {\n                case 6:\n                  headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4], headers.host = args[5];\n                  break;\n                default:\n                  headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4];\n              }\n            }\n            return [headers, connectCallback, errorCallback, closeEventCallback];\n          };\n          /**\n           * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n           *\n           * **Deprecated**\n           *\n           * The `connect` method accepts different number of arguments and types. See the Overloads list. Use the\n           * version with headers to pass your broker specific options.\n           *\n           * overloads:\n           * - connect(headers, connectCallback)\n           * - connect(headers, connectCallback, errorCallback)\n           * - connect(login, passcode, connectCallback)\n           * - connect(login, passcode, connectCallback, errorCallback)\n           * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback)\n           * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n           *\n           * params:\n           * - headers, see [Client#connectHeaders]{@link Client#connectHeaders}\n           * - connectCallback, see [Client#onConnect]{@link Client#onConnect}\n           * - errorCallback, see [Client#onStompError]{@link Client#onStompError}\n           * - closeEventCallback, see [Client#onWebSocketClose]{@link Client#onWebSocketClose}\n           * - login [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n           * - passcode [String], [Client#connectHeaders](../classes/Client.html#connectHeaders)\n           * - host [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n           *\n           * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n           */\n          CompatClient.prototype.connect = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            var out = this._parseConnect.apply(this, args);\n            if (out[0]) {\n              this.connectHeaders = out[0];\n            }\n            if (out[1]) {\n              this.onConnect = out[1];\n            }\n            if (out[2]) {\n              this.onStompError = out[2];\n            }\n            if (out[3]) {\n              this.onWebSocketClose = out[3];\n            }\n            _super.prototype.activate.call(this);\n          };\n          /**\n           * Available for backward compatibility, please shift to using [Client#deactivate]{@link Client#deactivate}.\n           *\n           * **Deprecated**\n           *\n           * See:\n           * [Client#onDisconnect]{@link Client#onDisconnect}, and\n           * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n           *\n           * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n           */\n          CompatClient.prototype.disconnect = function (disconnectCallback, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            if (disconnectCallback) {\n              this.onDisconnect = disconnectCallback;\n            }\n            this.disconnectHeaders = headers;\n            _super.prototype.deactivate.call(this);\n          };\n          /**\n           * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n           *\n           * Send a message to a named destination. Refer to your STOMP broker documentation for types\n           * and naming of destinations. The headers will, typically, be available to the subscriber.\n           * However, there may be special purpose headers corresponding to your STOMP broker.\n           *\n           *  **Deprecated**, use [Client#publish]{@link Client#publish}\n           *\n           * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n           *\n           * ```javascript\n           *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n           *\n           *        // If you want to send a message with a body, you must also pass the headers argument.\n           *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n           * ```\n           *\n           * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n           */\n          CompatClient.prototype.send = function (destination, headers, body) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            if (body === void 0) {\n              body = '';\n            }\n            headers = Object.assign({}, headers);\n            var skipContentLengthHeader = headers['content-length'] === false;\n            if (skipContentLengthHeader) {\n              delete headers['content-length'];\n            }\n            this.publish({\n              destination: destination,\n              headers: headers,\n              body: body,\n              skipContentLengthHeader: skipContentLengthHeader\n            });\n          };\n          Object.defineProperty(CompatClient.prototype, \"reconnect_delay\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.reconnectDelay = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"ws\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this._webSocket;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"version\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#connectedVersion]{@link Client#connectedVersion}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this.connectedVersion;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"onreceive\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this.onUnhandledMessage;\n            },\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.onUnhandledMessage = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"onreceipt\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n             * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this.onUnhandledReceipt;\n            },\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.onUnhandledReceipt = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"heartbeat\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n             * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this._heartbeatInfo;\n            },\n            /**\n             * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n             * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.heartbeatIncoming = value.incoming;\n              this.heartbeatOutgoing = value.outgoing;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          return CompatClient;\n        }(client_1.Client);\n        exports.CompatClient = CompatClient;\n\n        /***/\n      },\n\n      /***/\"./src/compatibility/heartbeat-info.ts\":\n      /*!*********************************************!*\\\n        !*** ./src/compatibility/heartbeat-info.ts ***!\n        \\*********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n        var HeartbeatInfo = /** @class */function () {\n          function HeartbeatInfo(client) {\n            this.client = client;\n          }\n          Object.defineProperty(HeartbeatInfo.prototype, \"outgoing\", {\n            get: function () {\n              return this.client.heartbeatOutgoing;\n            },\n            set: function (value) {\n              this.client.heartbeatOutgoing = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(HeartbeatInfo.prototype, \"incoming\", {\n            get: function () {\n              return this.client.heartbeatIncoming;\n            },\n            set: function (value) {\n              this.client.heartbeatIncoming = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          return HeartbeatInfo;\n        }();\n        exports.HeartbeatInfo = HeartbeatInfo;\n\n        /***/\n      },\n\n      /***/\"./src/compatibility/stomp.ts\":\n      /*!************************************!*\\\n        !*** ./src/compatibility/stomp.ts ***!\n        \\************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        var versions_1 = __webpack_require__( /*! ../versions */\"./src/versions.ts\");\n        var compat_client_1 = __webpack_require__( /*! ./compat-client */\"./src/compatibility/compat-client.ts\");\n        /**\n         * STOMP Class, acts like a factory to create {@link Client}.\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * **Deprecated**\n         *\n         * It will be removed in next major version. Please switch to {@link Client}.\n         */\n        var Stomp = /** @class */function () {\n          function Stomp() {}\n          /**\n           * This method creates a WebSocket client that is connected to\n           * the STOMP server located at the url.\n           *\n           * ```javascript\n           *        var url = \"ws://localhost:61614/stomp\";\n           *        var client = Stomp.client(url);\n           * ```\n           *\n           * **Deprecated**\n           *\n           * It will be removed in next major version. Please switch to {@link Client}\n           * using [Client#brokerURL]{@link Client#brokerURL}.\n           */\n          Stomp.client = function (url, protocols) {\n            // This is a hack to allow another implementation than the standard\n            // HTML5 WebSocket class.\n            //\n            // It is possible to use another class by calling\n            //\n            //     Stomp.WebSocketClass = MozWebSocket\n            //\n            // *prior* to call `Stomp.client()`.\n            //\n            // This hack is deprecated and `Stomp.over()` method should be used\n            // instead.\n            // See remarks on the function Stomp.over\n            if (protocols == null) {\n              protocols = versions_1.Versions.default.protocolVersions();\n            }\n            var wsFn = function () {\n              var klass = Stomp.WebSocketClass || WebSocket;\n              return new klass(url, protocols);\n            };\n            return new compat_client_1.CompatClient(wsFn);\n          };\n          /**\n           * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n           * specify the WebSocket to use (either a standard HTML5 WebSocket or\n           * a similar object).\n           *\n           * In order to support reconnection, the function Client._connect should be callable more than once.\n           * While reconnecting\n           * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n           * alternatively allows passing a function that should return a new instance of the underlying socket.\n           *\n           * ```javascript\n           *        var client = Stomp.over(function(){\n           *          return new WebSocket('ws://localhost:15674/ws')\n           *        });\n           * ```\n           *\n           * **Deprecated**\n           *\n           * It will be removed in next major version. Please switch to {@link Client}\n           * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n           */\n          Stomp.over = function (ws) {\n            var wsFn;\n            if (typeof ws === 'function') {\n              wsFn = ws;\n            } else {\n              console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' + 'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n              wsFn = function () {\n                return ws;\n              };\n            }\n            return new compat_client_1.CompatClient(wsFn);\n          };\n          /**\n           * In case you need to use a non standard class for WebSocket.\n           *\n           * For example when using within NodeJS environment:\n           *\n           * ```javascript\n           *        StompJs = require('../../esm5/');\n           *        Stomp = StompJs.Stomp;\n           *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n           * ```\n           *\n           * **Deprecated**\n           *\n           *\n           * It will be removed in next major version. Please switch to {@link Client}\n           * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n           */\n          // tslint:disable-next-line:variable-name\n          Stomp.WebSocketClass = null;\n          return Stomp;\n        }();\n        exports.Stomp = Stomp;\n\n        /***/\n      },\n\n      /***/\"./src/frame-impl.ts\":\n      /*!***************************!*\\\n        !*** ./src/frame-impl.ts ***!\n        \\***************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        var byte_1 = __webpack_require__( /*! ./byte */\"./src/byte.ts\");\n        /**\n         * Frame class represents a STOMP frame.\n         *\n         * @internal\n         */\n        var FrameImpl = /** @class */function () {\n          /**\n           * Frame constructor. `command`, `headers` and `body` are available as properties.\n           *\n           * @internal\n           */\n          function FrameImpl(params) {\n            var command = params.command,\n              headers = params.headers,\n              body = params.body,\n              binaryBody = params.binaryBody,\n              escapeHeaderValues = params.escapeHeaderValues,\n              skipContentLengthHeader = params.skipContentLengthHeader;\n            this.command = command;\n            this.headers = Object.assign({}, headers || {});\n            if (binaryBody) {\n              this._binaryBody = binaryBody;\n              this.isBinaryBody = true;\n            } else {\n              this._body = body || '';\n              this.isBinaryBody = false;\n            }\n            this.escapeHeaderValues = escapeHeaderValues || false;\n            this.skipContentLengthHeader = skipContentLengthHeader || false;\n          }\n          Object.defineProperty(FrameImpl.prototype, \"body\", {\n            /**\n             * body of the frame\n             */\n            get: function () {\n              if (!this._body && this.isBinaryBody) {\n                this._body = new TextDecoder().decode(this._binaryBody);\n              }\n              return this._body;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(FrameImpl.prototype, \"binaryBody\", {\n            /**\n             * body as Uint8Array\n             */\n            get: function () {\n              if (!this._binaryBody && !this.isBinaryBody) {\n                this._binaryBody = new TextEncoder().encode(this._body);\n              }\n              return this._binaryBody;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          /**\n           * deserialize a STOMP Frame from raw data.\n           *\n           * @internal\n           */\n          FrameImpl.fromRawFrame = function (rawFrame, escapeHeaderValues) {\n            var headers = {};\n            var trim = function (str) {\n              return str.replace(/^\\s+|\\s+$/g, '');\n            };\n            // In case of repeated headers, as per standards, first value need to be used\n            for (var _i = 0, _a = rawFrame.headers.reverse(); _i < _a.length; _i++) {\n              var header = _a[_i];\n              var idx = header.indexOf(':');\n              var key = trim(header[0]);\n              var value = trim(header[1]);\n              if (escapeHeaderValues && rawFrame.command !== 'CONNECT' && rawFrame.command !== 'CONNECTED') {\n                value = FrameImpl.hdrValueUnEscape(value);\n              }\n              headers[key] = value;\n            }\n            return new FrameImpl({\n              command: rawFrame.command,\n              headers: headers,\n              binaryBody: rawFrame.binaryBody,\n              escapeHeaderValues: escapeHeaderValues\n            });\n          };\n          /**\n           * @internal\n           */\n          FrameImpl.prototype.toString = function () {\n            return this.serializeCmdAndHeaders();\n          };\n          /**\n           * serialize this Frame in a format suitable to be passed to WebSocket.\n           * If the body is string the output will be string.\n           * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n           *\n           * @internal\n           */\n          FrameImpl.prototype.serialize = function () {\n            var cmdAndHeaders = this.serializeCmdAndHeaders();\n            if (this.isBinaryBody) {\n              return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n            } else {\n              return cmdAndHeaders + this._body + byte_1.BYTE.NULL;\n            }\n          };\n          FrameImpl.prototype.serializeCmdAndHeaders = function () {\n            var lines = [this.command];\n            if (this.skipContentLengthHeader) {\n              delete this.headers['content-length'];\n            }\n            for (var _i = 0, _a = Object.keys(this.headers || {}); _i < _a.length; _i++) {\n              var name_1 = _a[_i];\n              var value = this.headers[name_1];\n              if (this.escapeHeaderValues && this.command !== 'CONNECT' && this.command !== 'CONNECTED') {\n                lines.push(name_1 + \":\" + FrameImpl.hdrValueEscape(\"\" + value));\n              } else {\n                lines.push(name_1 + \":\" + value);\n              }\n            }\n            if (this.isBinaryBody || !this.isBodyEmpty() && !this.skipContentLengthHeader) {\n              lines.push(\"content-length:\" + this.bodyLength());\n            }\n            return lines.join(byte_1.BYTE.LF) + byte_1.BYTE.LF + byte_1.BYTE.LF;\n          };\n          FrameImpl.prototype.isBodyEmpty = function () {\n            return this.bodyLength() === 0;\n          };\n          FrameImpl.prototype.bodyLength = function () {\n            var binaryBody = this.binaryBody;\n            return binaryBody ? binaryBody.length : 0;\n          };\n          /**\n           * Compute the size of a UTF-8 string by counting its number of bytes\n           * (and not the number of characters composing the string)\n           */\n          FrameImpl.sizeOfUTF8 = function (s) {\n            return s ? new TextEncoder().encode(s).length : 0;\n          };\n          FrameImpl.toUnit8Array = function (cmdAndHeaders, binaryBody) {\n            var uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n            var nullTerminator = new Uint8Array([0]);\n            var uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n            uint8Frame.set(uint8CmdAndHeaders);\n            uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n            uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n            return uint8Frame;\n          };\n          /**\n           * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n           *\n           * @internal\n           */\n          FrameImpl.marshall = function (params) {\n            var frame = new FrameImpl(params);\n            return frame.serialize();\n          };\n          /**\n           *  Escape header values\n           */\n          FrameImpl.hdrValueEscape = function (str) {\n            return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n          };\n          /**\n           * UnEscape header values\n           */\n          FrameImpl.hdrValueUnEscape = function (str) {\n            return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n          };\n          return FrameImpl;\n        }();\n        exports.FrameImpl = FrameImpl;\n\n        /***/\n      },\n\n      /***/\"./src/index.ts\":\n      /*!**********************!*\\\n        !*** ./src/index.ts ***!\n        \\**********************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        function __export(m) {\n          for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        __export(__webpack_require__( /*! ./client */\"./src/client.ts\"));\n        __export(__webpack_require__( /*! ./frame-impl */\"./src/frame-impl.ts\"));\n        __export(__webpack_require__( /*! ./parser */\"./src/parser.ts\"));\n        __export(__webpack_require__( /*! ./stomp-config */\"./src/stomp-config.ts\"));\n        __export(__webpack_require__( /*! ./stomp-headers */\"./src/stomp-headers.ts\"));\n        __export(__webpack_require__( /*! ./stomp-subscription */\"./src/stomp-subscription.ts\"));\n        __export(__webpack_require__( /*! ./versions */\"./src/versions.ts\"));\n        __export(__webpack_require__( /*! ./web-socket-state */\"./src/web-socket-state.ts\"));\n        // Compatibility code\n        __export(__webpack_require__( /*! ./compatibility/compat-client */\"./src/compatibility/compat-client.ts\"));\n        __export(__webpack_require__( /*! ./compatibility/stomp */\"./src/compatibility/stomp.ts\"));\n\n        /***/\n      },\n\n      /***/\"./src/parser.ts\":\n      /*!***********************!*\\\n        !*** ./src/parser.ts ***!\n        \\***********************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * @internal\n         */\n        var NULL = 0;\n        /**\n         * @internal\n         */\n        var LF = 10;\n        /**\n         * @internal\n         */\n        var CR = 13;\n        /**\n         * @internal\n         */\n        var COLON = 58;\n        /**\n         * This is an evented, rec descent parser.\n         * A stream of Octets can be passed and whenever it recognizes\n         * a complete Frame or an incoming ping it will invoke the registered callbacks.\n         *\n         * All incoming Octets are fed into _onByte function.\n         * Depending on current state the _onByte function keeps changing.\n         * Depending on the state it keeps accumulating into _token and _results.\n         * State is indicated by current value of _onByte, all states are named as _collect.\n         *\n         * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n         * imply that all lengths are considered in bytes (instead of string lengths).\n         * So, before actual parsing, if the incoming data is String it is converted to Octets.\n         * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n         *\n         * There is no peek function on the incoming data.\n         * When a state change occurs based on an Octet without consuming the Octet,\n         * the Octet, after state change, is fed again (_reinjectByte).\n         * This became possible as the state change can be determined by inspecting just one Octet.\n         *\n         * There are two modes to collect the body, if content-length header is there then it by counting Octets\n         * otherwise it is determined by NULL terminator.\n         *\n         * Following the standards, the command and headers are converted to Strings\n         * and the body is returned as Octets.\n         * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n         *\n         * This parser does not use Regular Expressions as that can only operate on Strings.\n         *\n         * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n         * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n         * is pushed.\n         *\n         * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n         * (which is protocol version specific), and convert body to text.\n         *\n         * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n        var Parser = /** @class */function () {\n          function Parser(onFrame, onIncomingPing) {\n            this.onFrame = onFrame;\n            this.onIncomingPing = onIncomingPing;\n            this._encoder = new TextEncoder();\n            this._decoder = new TextDecoder();\n            this._token = [];\n            this._initState();\n          }\n          Parser.prototype.parseChunk = function (segment, appendMissingNULLonIncoming) {\n            if (appendMissingNULLonIncoming === void 0) {\n              appendMissingNULLonIncoming = false;\n            }\n            var chunk;\n            if (segment instanceof ArrayBuffer) {\n              chunk = new Uint8Array(segment);\n            } else {\n              chunk = this._encoder.encode(segment);\n            }\n            // See https://github.com/stomp-js/stompjs/issues/89\n            // Remove when underlying issue is fixed.\n            //\n            // Send a NULL byte, if the last byte of a Text frame was not NULL.F\n            if (appendMissingNULLonIncoming && chunk[chunk.length - 1] !== 0) {\n              var chunkWithNull = new Uint8Array(chunk.length + 1);\n              chunkWithNull.set(chunk, 0);\n              chunkWithNull[chunk.length] = 0;\n              chunk = chunkWithNull;\n            }\n            // tslint:disable-next-line:prefer-for-of\n            for (var i = 0; i < chunk.length; i++) {\n              var byte = chunk[i];\n              this._onByte(byte);\n            }\n          };\n          // The following implements a simple Rec Descent Parser.\n          // The grammar is simple and just one byte tells what should be the next state\n          Parser.prototype._collectFrame = function (byte) {\n            if (byte === NULL) {\n              // Ignore\n              return;\n            }\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n            if (byte === LF) {\n              // Incoming Ping\n              this.onIncomingPing();\n              return;\n            }\n            this._onByte = this._collectCommand;\n            this._reinjectByte(byte);\n          };\n          Parser.prototype._collectCommand = function (byte) {\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n            if (byte === LF) {\n              this._results.command = this._consumeTokenAsUTF8();\n              this._onByte = this._collectHeaders;\n              return;\n            }\n            this._consumeByte(byte);\n          };\n          Parser.prototype._collectHeaders = function (byte) {\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n            if (byte === LF) {\n              this._setupCollectBody();\n              return;\n            }\n            this._onByte = this._collectHeaderKey;\n            this._reinjectByte(byte);\n          };\n          Parser.prototype._reinjectByte = function (byte) {\n            this._onByte(byte);\n          };\n          Parser.prototype._collectHeaderKey = function (byte) {\n            if (byte === COLON) {\n              this._headerKey = this._consumeTokenAsUTF8();\n              this._onByte = this._collectHeaderValue;\n              return;\n            }\n            this._consumeByte(byte);\n          };\n          Parser.prototype._collectHeaderValue = function (byte) {\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n            if (byte === LF) {\n              this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n              this._headerKey = undefined;\n              this._onByte = this._collectHeaders;\n              return;\n            }\n            this._consumeByte(byte);\n          };\n          Parser.prototype._setupCollectBody = function () {\n            var contentLengthHeader = this._results.headers.filter(function (header) {\n              return header[0] === 'content-length';\n            })[0];\n            if (contentLengthHeader) {\n              this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n              this._onByte = this._collectBodyFixedSize;\n            } else {\n              this._onByte = this._collectBodyNullTerminated;\n            }\n          };\n          Parser.prototype._collectBodyNullTerminated = function (byte) {\n            if (byte === NULL) {\n              this._retrievedBody();\n              return;\n            }\n            this._consumeByte(byte);\n          };\n          Parser.prototype._collectBodyFixedSize = function (byte) {\n            // It is post decrement, so that we discard the trailing NULL octet\n            if (this._bodyBytesRemaining-- === 0) {\n              this._retrievedBody();\n              return;\n            }\n            this._consumeByte(byte);\n          };\n          Parser.prototype._retrievedBody = function () {\n            this._results.binaryBody = this._consumeTokenAsRaw();\n            this.onFrame(this._results);\n            this._initState();\n          };\n          // Rec Descent Parser helpers\n          Parser.prototype._consumeByte = function (byte) {\n            this._token.push(byte);\n          };\n          Parser.prototype._consumeTokenAsUTF8 = function () {\n            return this._decoder.decode(this._consumeTokenAsRaw());\n          };\n          Parser.prototype._consumeTokenAsRaw = function () {\n            var rawResult = new Uint8Array(this._token);\n            this._token = [];\n            return rawResult;\n          };\n          Parser.prototype._initState = function () {\n            this._results = {\n              command: undefined,\n              headers: [],\n              binaryBody: undefined\n            };\n            this._token = [];\n            this._headerKey = undefined;\n            this._onByte = this._collectFrame;\n          };\n          return Parser;\n        }();\n        exports.Parser = Parser;\n\n        /***/\n      },\n\n      /***/\"./src/stomp-config.ts\":\n      /*!*****************************!*\\\n        !*** ./src/stomp-config.ts ***!\n        \\*****************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Configuration options for STOMP Client, each key corresponds to\n         * field by the same name in {@link Client}. This can be passed to\n         * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n        var StompConfig = /** @class */function () {\n          function StompConfig() {}\n          return StompConfig;\n        }();\n        exports.StompConfig = StompConfig;\n\n        /***/\n      },\n\n      /***/\"./src/stomp-handler.ts\":\n      /*!******************************!*\\\n        !*** ./src/stomp-handler.ts ***!\n        \\******************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        var byte_1 = __webpack_require__( /*! ./byte */\"./src/byte.ts\");\n        var frame_impl_1 = __webpack_require__( /*! ./frame-impl */\"./src/frame-impl.ts\");\n        var parser_1 = __webpack_require__( /*! ./parser */\"./src/parser.ts\");\n        var versions_1 = __webpack_require__( /*! ./versions */\"./src/versions.ts\");\n        var web_socket_state_1 = __webpack_require__( /*! ./web-socket-state */\"./src/web-socket-state.ts\");\n        /**\n         * The STOMP protocol handler\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n        var StompHandler = /** @class */function () {\n          function StompHandler(_client, _webSocket, config) {\n            var _this = this;\n            if (config === void 0) {\n              config = {};\n            }\n            this._client = _client;\n            this._webSocket = _webSocket;\n            this._serverFrameHandlers = {\n              // [CONNECTED Frame](http://stomp.github.com/stomp-specification-1.2.html#CONNECTED_Frame)\n              CONNECTED: function (frame) {\n                _this.debug(\"connected to server \" + frame.headers.server);\n                _this._connected = true;\n                _this._connectedVersion = frame.headers.version;\n                // STOMP version 1.2 needs header values to be escaped\n                if (_this._connectedVersion === versions_1.Versions.V1_2) {\n                  _this._escapeHeaderValues = true;\n                }\n                _this._setupHeartbeat(frame.headers);\n                _this.onConnect(frame);\n              },\n              // [MESSAGE Frame](http://stomp.github.com/stomp-specification-1.2.html#MESSAGE)\n              MESSAGE: function (frame) {\n                // the callback is registered when the client calls\n                // `subscribe()`.\n                // If there is no registered subscription for the received message,\n                // the default `onUnhandledMessage` callback is used that the client can set.\n                // This is useful for subscriptions that are automatically created\n                // on the browser side (e.g. [RabbitMQ's temporary\n                // queues](http://www.rabbitmq.com/stomp.html)).\n                var subscription = frame.headers.subscription;\n                var onReceive = _this._subscriptions[subscription] || _this.onUnhandledMessage;\n                // bless the frame to be a Message\n                var message = frame;\n                var client = _this;\n                var messageId = _this._connectedVersion === versions_1.Versions.V1_2 ? message.headers.ack : message.headers['message-id'];\n                // add `ack()` and `nack()` methods directly to the returned frame\n                // so that a simple call to `message.ack()` can acknowledge the message.\n                message.ack = function (headers) {\n                  if (headers === void 0) {\n                    headers = {};\n                  }\n                  return client.ack(messageId, subscription, headers);\n                };\n                message.nack = function (headers) {\n                  if (headers === void 0) {\n                    headers = {};\n                  }\n                  return client.nack(messageId, subscription, headers);\n                };\n                onReceive(message);\n              },\n              // [RECEIPT Frame](http://stomp.github.com/stomp-specification-1.2.html#RECEIPT)\n              RECEIPT: function (frame) {\n                var callback = _this._receiptWatchers[frame.headers['receipt-id']];\n                if (callback) {\n                  callback(frame);\n                  // Server will acknowledge only once, remove the callback\n                  delete _this._receiptWatchers[frame.headers['receipt-id']];\n                } else {\n                  _this.onUnhandledReceipt(frame);\n                }\n              },\n              // [ERROR Frame](http://stomp.github.com/stomp-specification-1.2.html#ERROR)\n              ERROR: function (frame) {\n                _this.onStompError(frame);\n              }\n            };\n            // used to index subscribers\n            this._counter = 0;\n            // subscription callbacks indexed by subscriber's ID\n            this._subscriptions = {};\n            // receipt-watchers indexed by receipts-ids\n            this._receiptWatchers = {};\n            this._partialData = '';\n            this._escapeHeaderValues = false;\n            this._lastServerActivityTS = Date.now();\n            this.configure(config);\n          }\n          Object.defineProperty(StompHandler.prototype, \"connectedVersion\", {\n            get: function () {\n              return this._connectedVersion;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(StompHandler.prototype, \"connected\", {\n            get: function () {\n              return this._connected;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          StompHandler.prototype.configure = function (conf) {\n            // bulk assign all properties to this\n            Object.assign(this, conf);\n          };\n          StompHandler.prototype.start = function () {\n            var _this = this;\n            var parser = new parser_1.Parser(\n            // On Frame\n            function (rawFrame) {\n              var frame = frame_impl_1.FrameImpl.fromRawFrame(rawFrame, _this._escapeHeaderValues);\n              // if this.logRawCommunication is set, the rawChunk is logged at this._webSocket.onmessage\n              if (!_this.logRawCommunication) {\n                _this.debug(\"<<< \" + frame);\n              }\n              var serverFrameHandler = _this._serverFrameHandlers[frame.command] || _this.onUnhandledFrame;\n              serverFrameHandler(frame);\n            },\n            // On Incoming Ping\n            function () {\n              _this.debug('<<< PONG');\n            });\n            this._webSocket.onmessage = function (evt) {\n              _this.debug('Received data');\n              _this._lastServerActivityTS = Date.now();\n              if (_this.logRawCommunication) {\n                var rawChunkAsString = evt.data instanceof ArrayBuffer ? new TextDecoder().decode(evt.data) : evt.data;\n                _this.debug(\"<<< \" + rawChunkAsString);\n              }\n              parser.parseChunk(evt.data, _this.appendMissingNULLonIncoming);\n            };\n            this._webSocket.onclose = function (closeEvent) {\n              _this.debug(\"Connection closed to \" + _this._webSocket.url);\n              _this.onWebSocketClose(closeEvent);\n              _this._cleanUp();\n            };\n            this._webSocket.onerror = function (errorEvent) {\n              _this.onWebSocketError(errorEvent);\n            };\n            this._webSocket.onopen = function () {\n              // Clone before updating\n              var connectHeaders = Object.assign({}, _this.connectHeaders);\n              _this.debug('Web Socket Opened...');\n              connectHeaders['accept-version'] = _this.stompVersions.supportedVersions();\n              connectHeaders['heart-beat'] = [_this.heartbeatOutgoing, _this.heartbeatIncoming].join(',');\n              _this._transmit({\n                command: 'CONNECT',\n                headers: connectHeaders\n              });\n            };\n          };\n          StompHandler.prototype._setupHeartbeat = function (headers) {\n            var _this = this;\n            if (headers.version !== versions_1.Versions.V1_1 && headers.version !== versions_1.Versions.V1_2) {\n              return;\n            }\n            // It is valid for the server to not send this header\n            // https://stomp.github.io/stomp-specification-1.2.html#Heart-beating\n            if (!headers['heart-beat']) {\n              return;\n            }\n            // heart-beat header received from the server looks like:\n            //\n            //     heart-beat: sx, sy\n            var _a = headers['heart-beat'].split(',').map(function (v) {\n                return parseInt(v, 10);\n              }),\n              serverOutgoing = _a[0],\n              serverIncoming = _a[1];\n            if (this.heartbeatOutgoing !== 0 && serverIncoming !== 0) {\n              var ttl = Math.max(this.heartbeatOutgoing, serverIncoming);\n              this.debug(\"send PING every \" + ttl + \"ms\");\n              this._pinger = setInterval(function () {\n                if (_this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                  _this._webSocket.send(byte_1.BYTE.LF);\n                  _this.debug('>>> PING');\n                }\n              }, ttl);\n            }\n            if (this.heartbeatIncoming !== 0 && serverOutgoing !== 0) {\n              var ttl_1 = Math.max(this.heartbeatIncoming, serverOutgoing);\n              this.debug(\"check PONG every \" + ttl_1 + \"ms\");\n              this._ponger = setInterval(function () {\n                var delta = Date.now() - _this._lastServerActivityTS;\n                // We wait twice the TTL to be flexible on window's setInterval calls\n                if (delta > ttl_1 * 2) {\n                  _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\n                  _this._closeWebsocket();\n                }\n              }, ttl_1);\n            }\n          };\n          StompHandler.prototype._closeWebsocket = function () {\n            this._webSocket.onmessage = function () {}; // ignore messages\n            this._webSocket.close();\n          };\n          StompHandler.prototype._transmit = function (params) {\n            var command = params.command,\n              headers = params.headers,\n              body = params.body,\n              binaryBody = params.binaryBody,\n              skipContentLengthHeader = params.skipContentLengthHeader;\n            var frame = new frame_impl_1.FrameImpl({\n              command: command,\n              headers: headers,\n              body: body,\n              binaryBody: binaryBody,\n              escapeHeaderValues: this._escapeHeaderValues,\n              skipContentLengthHeader: skipContentLengthHeader\n            });\n            var rawChunk = frame.serialize();\n            if (this.logRawCommunication) {\n              this.debug(\">>> \" + rawChunk);\n            } else {\n              this.debug(\">>> \" + frame);\n            }\n            if (this.forceBinaryWSFrames && typeof rawChunk === 'string') {\n              rawChunk = new TextEncoder().encode(rawChunk);\n            }\n            if (typeof rawChunk !== 'string' || !this.splitLargeFrames) {\n              this._webSocket.send(rawChunk);\n            } else {\n              var out = rawChunk;\n              while (out.length > 0) {\n                var chunk = out.substring(0, this.maxWebSocketChunkSize);\n                out = out.substring(this.maxWebSocketChunkSize);\n                this._webSocket.send(chunk);\n                this.debug(\"chunk sent = \" + chunk.length + \", remaining = \" + out.length);\n              }\n            }\n          };\n          StompHandler.prototype.dispose = function () {\n            var _this = this;\n            if (this.connected) {\n              try {\n                // clone before updating\n                var disconnectHeaders = Object.assign({}, this.disconnectHeaders);\n                if (!disconnectHeaders.receipt) {\n                  disconnectHeaders.receipt = \"close-\" + this._counter++;\n                }\n                this.watchForReceipt(disconnectHeaders.receipt, function (frame) {\n                  _this._closeWebsocket();\n                  _this._cleanUp();\n                  _this.onDisconnect(frame);\n                });\n                this._transmit({\n                  command: 'DISCONNECT',\n                  headers: disconnectHeaders\n                });\n              } catch (error) {\n                this.debug(\"Ignoring error during disconnect \" + error);\n              }\n            } else {\n              if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._closeWebsocket();\n              }\n            }\n          };\n          StompHandler.prototype._cleanUp = function () {\n            this._connected = false;\n            if (this._pinger) {\n              clearInterval(this._pinger);\n            }\n            if (this._ponger) {\n              clearInterval(this._ponger);\n            }\n          };\n          StompHandler.prototype.publish = function (params) {\n            var destination = params.destination,\n              headers = params.headers,\n              body = params.body,\n              binaryBody = params.binaryBody,\n              skipContentLengthHeader = params.skipContentLengthHeader;\n            var hdrs = Object.assign({\n              destination: destination\n            }, headers);\n            this._transmit({\n              command: 'SEND',\n              headers: hdrs,\n              body: body,\n              binaryBody: binaryBody,\n              skipContentLengthHeader: skipContentLengthHeader\n            });\n          };\n          StompHandler.prototype.watchForReceipt = function (receiptId, callback) {\n            this._receiptWatchers[receiptId] = callback;\n          };\n          StompHandler.prototype.subscribe = function (destination, callback, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            headers = Object.assign({}, headers);\n            if (!headers.id) {\n              headers.id = \"sub-\" + this._counter++;\n            }\n            headers.destination = destination;\n            this._subscriptions[headers.id] = callback;\n            this._transmit({\n              command: 'SUBSCRIBE',\n              headers: headers\n            });\n            var client = this;\n            return {\n              id: headers.id,\n              unsubscribe: function (hdrs) {\n                return client.unsubscribe(headers.id, hdrs);\n              }\n            };\n          };\n          StompHandler.prototype.unsubscribe = function (id, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            headers = Object.assign({}, headers);\n            delete this._subscriptions[id];\n            headers.id = id;\n            this._transmit({\n              command: 'UNSUBSCRIBE',\n              headers: headers\n            });\n          };\n          StompHandler.prototype.begin = function (transactionId) {\n            var txId = transactionId || \"tx-\" + this._counter++;\n            this._transmit({\n              command: 'BEGIN',\n              headers: {\n                transaction: txId\n              }\n            });\n            var client = this;\n            return {\n              id: txId,\n              commit: function () {\n                client.commit(txId);\n              },\n              abort: function () {\n                client.abort(txId);\n              }\n            };\n          };\n          StompHandler.prototype.commit = function (transactionId) {\n            this._transmit({\n              command: 'COMMIT',\n              headers: {\n                transaction: transactionId\n              }\n            });\n          };\n          StompHandler.prototype.abort = function (transactionId) {\n            this._transmit({\n              command: 'ABORT',\n              headers: {\n                transaction: transactionId\n              }\n            });\n          };\n          StompHandler.prototype.ack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            headers = Object.assign({}, headers);\n            if (this._connectedVersion === versions_1.Versions.V1_2) {\n              headers.id = messageId;\n            } else {\n              headers['message-id'] = messageId;\n            }\n            headers.subscription = subscriptionId;\n            this._transmit({\n              command: 'ACK',\n              headers: headers\n            });\n          };\n          StompHandler.prototype.nack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n            headers = Object.assign({}, headers);\n            if (this._connectedVersion === versions_1.Versions.V1_2) {\n              headers.id = messageId;\n            } else {\n              headers['message-id'] = messageId;\n            }\n            headers.subscription = subscriptionId;\n            return this._transmit({\n              command: 'NACK',\n              headers: headers\n            });\n          };\n          return StompHandler;\n        }();\n        exports.StompHandler = StompHandler;\n\n        /***/\n      },\n\n      /***/\"./src/stomp-headers.ts\":\n      /*!******************************!*\\\n        !*** ./src/stomp-headers.ts ***!\n        \\******************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * STOMP headers. Many functions calls will accept headers as parameters.\n         * The headers sent by Broker will be available as [IFrame#headers]{@link IFrame#headers}.\n         *\n         * `key` and `value` must be valid strings.\n         * In addition, `key` must not contain `CR`, `LF`, or `:`.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n        var StompHeaders = /** @class */function () {\n          function StompHeaders() {}\n          return StompHeaders;\n        }();\n        exports.StompHeaders = StompHeaders;\n\n        /***/\n      },\n\n      /***/\"./src/stomp-subscription.ts\":\n      /*!***********************************!*\\\n        !*** ./src/stomp-subscription.ts ***!\n        \\***********************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n        var StompSubscription = /** @class */function () {\n          function StompSubscription() {}\n          return StompSubscription;\n        }();\n        exports.StompSubscription = StompSubscription;\n\n        /***/\n      },\n\n      /***/\"./src/versions.ts\":\n      /*!*************************!*\\\n        !*** ./src/versions.ts ***!\n        \\*************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Supported STOMP versions\n         *\n         * Part of `@stomp/stompjs`.\n         */\n        var Versions = /** @class */function () {\n          /**\n           * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n           *\n           * You will an instance if this class if you want to override supported versions to be declared during\n           * STOMP handshake.\n           */\n          function Versions(versions) {\n            this.versions = versions;\n          }\n          /**\n           * Used as part of CONNECT STOMP Frame\n           */\n          Versions.prototype.supportedVersions = function () {\n            return this.versions.join(',');\n          };\n          /**\n           * Used while creating a WebSocket\n           */\n          Versions.prototype.protocolVersions = function () {\n            return this.versions.map(function (x) {\n              return \"v\" + x.replace('.', '') + \".stomp\";\n            });\n          };\n          /**\n           * Indicates protocol version 1.0\n           */\n          Versions.V1_0 = '1.0';\n          /**\n           * Indicates protocol version 1.1\n           */\n          Versions.V1_1 = '1.1';\n          /**\n           * Indicates protocol version 1.2\n           */\n          Versions.V1_2 = '1.2';\n          /**\n           * @internal\n           */\n          Versions.default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n          return Versions;\n        }();\n        exports.Versions = Versions;\n\n        /***/\n      },\n\n      /***/\"./src/web-socket-state.ts\":\n      /*!*********************************!*\\\n        !*** ./src/web-socket-state.ts ***!\n        \\*********************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Possible states for the WebSocket, copied here to avoid dependency on WebSocket class\n         *\n         * Part of `@stomp/rx-stomp`\n         *\n         * @internal\n         */\n        var WebSocketState;\n        (function (WebSocketState) {\n          WebSocketState[WebSocketState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n          WebSocketState[WebSocketState[\"OPEN\"] = 1] = \"OPEN\";\n          WebSocketState[WebSocketState[\"CLOSING\"] = 2] = \"CLOSING\";\n          WebSocketState[WebSocketState[\"CLOSED\"] = 3] = \"CLOSED\";\n        })(WebSocketState = exports.WebSocketState || (exports.WebSocketState = {}));\n\n        /***/\n      },\n\n      /***/0:\n      /*!****************************!*\\\n        !*** multi ./src/index.ts ***!\n        \\****************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        module.exports = __webpack_require__( /*! /home/kdeepak/MyWork/Tech/stomp/stompjs/src/index.ts */\"./src/index.ts\");\n\n        /***/\n      }\n\n      /******/\n    })\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","./src/byte.ts","BYTE","LF","NULL","./src/client.ts","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","trys","ops","f","y","g","verb","iterator","v","op","TypeError","pop","length","push","stomp_handler_1","versions_1","web_socket_state_1","Client","conf","stompVersions","Versions","default","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","splitLargeFrames","maxWebSocketChunkSize","forceBinaryWSFrames","appendMissingNULLonIncoming","_active","noOp","debug","beforeConnect","onConnect","onDisconnect","onUnhandledMessage","onUnhandledReceipt","onUnhandledFrame","onStompError","onWebSocketClose","onWebSocketError","logRawCommunication","connectHeaders","_disconnectHeaders","configure","_webSocket","configurable","set","_stompHandler","disconnectHeaders","connected","connectedVersion","undefined","assign","activate","_connect","_this","_a","_createWebSocket","StompHandler","frame","_disposeStompHandler","evt","_schedule_reconnect","message","start","webSocket","webSocketFactory","WebSocket","brokerURL","protocolVersions","binaryType","_reconnector","setTimeout","deactivate","clearTimeout","forceDisconnect","readyState","WebSocketState","CONNECTING","OPEN","_closeWebsocket","dispose","publish","params","watchForReceipt","receiptId","callback","subscribe","destination","headers","unsubscribe","id","begin","transactionId","commit","abort","ack","messageId","subscriptionId","nack","./src/compatibility/compat-client.ts","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","__","constructor","client_1","heartbeat_info_1","CompatClient","_super","maxWebSocketFrameSize","_heartbeatInfo","HeartbeatInfo","reconnect_delay","_i","arguments","console","log","_parseConnect","args","closeEventCallback","connectCallback","errorCallback","Error","login","passcode","host","connect","out","disconnect","disconnectCallback","send","skipContentLengthHeader","incoming","outgoing","./src/compatibility/heartbeat-info.ts","client","./src/compatibility/stomp.ts","compat_client_1","Stomp","url","protocols","wsFn","klass","WebSocketClass","over","ws","warn","./src/frame-impl.ts","byte_1","FrameImpl","command","binaryBody","escapeHeaderValues","_binaryBody","isBinaryBody","_body","TextDecoder","decode","TextEncoder","encode","fromRawFrame","rawFrame","trim","str","replace","reverse","header","idx","indexOf","hdrValueUnEscape","toString","serializeCmdAndHeaders","serialize","cmdAndHeaders","toUnit8Array","buffer","lines","keys","name_1","hdrValueEscape","isBodyEmpty","bodyLength","join","sizeOfUTF8","uint8CmdAndHeaders","nullTerminator","Uint8Array","uint8Frame","marshall","./src/index.ts","__export","./src/parser.ts","CR","COLON","Parser","onFrame","onIncomingPing","_encoder","_decoder","_token","_initState","parseChunk","segment","chunk","ArrayBuffer","chunkWithNull","byte","_onByte","_collectFrame","_collectCommand","_reinjectByte","_results","_consumeTokenAsUTF8","_collectHeaders","_consumeByte","_setupCollectBody","_collectHeaderKey","_headerKey","_collectHeaderValue","contentLengthHeader","filter","_bodyBytesRemaining","parseInt","_collectBodyFixedSize","_collectBodyNullTerminated","_retrievedBody","_consumeTokenAsRaw","rawResult","./src/stomp-config.ts","StompConfig","./src/stomp-handler.ts","frame_impl_1","parser_1","_client","config","_serverFrameHandlers","CONNECTED","server","_connected","_connectedVersion","version","V1_2","_escapeHeaderValues","_setupHeartbeat","MESSAGE","subscription","onReceive","_subscriptions","RECEIPT","_receiptWatchers","ERROR","_counter","_partialData","_lastServerActivityTS","Date","now","parser","serverFrameHandler","onmessage","rawChunkAsString","data","onclose","closeEvent","_cleanUp","onerror","errorEvent","onopen","supportedVersions","_transmit","V1_1","split","map","serverOutgoing","serverIncoming","ttl","Math","max","_pinger","setInterval","ttl_1","_ponger","delta","close","rawChunk","substring","receipt","error","clearInterval","hdrs","txId","transaction","./src/stomp-headers.ts","StompHeaders","./src/stomp-subscription.ts","StompSubscription","./src/versions.ts","versions","x","V1_0","./src/web-socket-state.ts"],"sources":["C:/Важное/6 семестр =)/Практыка/Проект/questionnaire/angular-questionnaire/node_modules/@stomp/stompjs/bundles/stomp.umd.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StompJs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StompJs\"] = factory();\n\telse\n\t\troot[\"StompJs\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/byte.ts\":\n/*!*********************!*\\\n  !*** ./src/byte.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Some byte values, used as per STOMP specifications.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexports.BYTE = {\n    // LINEFEED byte (octet 10)\n    LF: '\\x0A',\n    // NULL byte (octet 0)\n    NULL: '\\x00'\n};\n\n\n/***/ }),\n\n/***/ \"./src/client.ts\":\n/*!***********************!*\\\n  !*** ./src/client.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stomp_handler_1 = __webpack_require__(/*! ./stomp-handler */ \"./src/stomp-handler.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * STOMP Client Class.\n *\n * Part of `@stomp/stompjs`.\n */\nvar Client = /** @class */ (function () {\n    /**\n     * Create an instance.\n     */\n    function Client(conf) {\n        if (conf === void 0) { conf = {}; }\n        /**\n         * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n         *\n         * Example:\n         * ```javascript\n         *        // Try only versions 1.0 and 1.1\n         *        client.stompVersions = new Versions(['1.0', '1.1'])\n         * ```\n         */\n        this.stompVersions = versions_1.Versions.default;\n        /**\n         *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n         */\n        this.reconnectDelay = 5000;\n        /**\n         * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatIncoming = 10000;\n        /**\n         * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatOutgoing = 10000;\n        /**\n         * This switches on a non standard behavior while sending WebSocket packets.\n         * It splits larger (text) packets into chunks of [maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n         * Only Java Spring brokers seems to use this mode.\n         *\n         * WebSockets, by itself, split large (text) packets,\n         * so it is not needed with a truly compliant STOMP/WebSocket broker.\n         * Actually setting it for such broker will cause large messages to fail.\n         *\n         * `false` by default.\n         *\n         * Binary frames are never split.\n         */\n        this.splitLargeFrames = false;\n        /**\n         * See [splitLargeFrames]{@link Client#splitLargeFrames}.\n         * This has no effect if [splitLargeFrames]{@link Client#splitLargeFrames} is `false`.\n         */\n        this.maxWebSocketChunkSize = 8 * 1024;\n        /**\n         * Usually the\n         * [type of WebSocket frame]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send#Parameters}\n         * is automatically decided by type of the payload.\n         * Default is `false`, which should work with all compliant brokers.\n         *\n         * Set this flag to force binary frames.\n         */\n        this.forceBinaryWSFrames = false;\n        /**\n         * A bug in ReactNative chops a string on occurrence of a NULL.\n         * See issue [https://github.com/stomp-js/stompjs/issues/89]{@link https://github.com/stomp-js/stompjs/issues/89}.\n         * This makes incoming WebSocket messages invalid STOMP packets.\n         * Setting this flag attempts to reverse the damage by appending a NULL.\n         * If the broker splits a large message into multiple WebSocket messages,\n         * this flag will cause data loss and abnormal termination of connection.\n         *\n         * This is not an ideal solution, but a stop gap until the underlying issue is fixed at ReactNative library.\n         */\n        this.appendMissingNULLonIncoming = false;\n        this._active = false;\n        // Dummy callbacks\n        var noOp = function () { };\n        this.debug = noOp;\n        this.beforeConnect = noOp;\n        this.onConnect = noOp;\n        this.onDisconnect = noOp;\n        this.onUnhandledMessage = noOp;\n        this.onUnhandledReceipt = noOp;\n        this.onUnhandledFrame = noOp;\n        this.onStompError = noOp;\n        this.onWebSocketClose = noOp;\n        this.onWebSocketError = noOp;\n        this.logRawCommunication = false;\n        // These parameters would typically get proper values before connect is called\n        this.connectHeaders = {};\n        this._disconnectHeaders = {};\n        // Apply configuration\n        this.configure(conf);\n    }\n    Object.defineProperty(Client.prototype, \"webSocket\", {\n        /**\n         * Underlying WebSocket instance, READONLY.\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"disconnectHeaders\", {\n        /**\n         * Disconnection headers.\n         */\n        get: function () {\n            return this._disconnectHeaders;\n        },\n        set: function (value) {\n            this._disconnectHeaders = value;\n            if (this._stompHandler) {\n                this._stompHandler.disconnectHeaders = this._disconnectHeaders;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connected\", {\n        /**\n         * `true` if there is a active connection with STOMP Broker\n         */\n        get: function () {\n            return (!!this._stompHandler) && this._stompHandler.connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connectedVersion\", {\n        /**\n         * version of STOMP protocol negotiated with the server, READONLY\n         */\n        get: function () {\n            return this._stompHandler ? this._stompHandler.connectedVersion : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"active\", {\n        /**\n         * if the client is active (connected or going to reconnect)\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Update configuration.\n     */\n    Client.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    /**\n     * Initiate the connection with the broker.\n     * If the connection breaks, as per [Client#reconnectDelay]{@link Client#reconnectDelay},\n     * it will keep trying to reconnect.\n     *\n     * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n     */\n    Client.prototype.activate = function () {\n        this._active = true;\n        this._connect();\n    };\n    Client.prototype._connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.connected) {\n                            this.debug('STOMP: already connected, nothing to do');\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.beforeConnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this._active) {\n                            this.debug('Client has been marked inactive, will not attempt to connect');\n                            return [2 /*return*/];\n                        }\n                        this.debug('Opening Web Socket...');\n                        // Get the actual WebSocket (or a similar object)\n                        this._webSocket = this._createWebSocket();\n                        this._stompHandler = new stomp_handler_1.StompHandler(this, this._webSocket, {\n                            debug: this.debug,\n                            stompVersions: this.stompVersions,\n                            connectHeaders: this.connectHeaders,\n                            disconnectHeaders: this._disconnectHeaders,\n                            heartbeatIncoming: this.heartbeatIncoming,\n                            heartbeatOutgoing: this.heartbeatOutgoing,\n                            splitLargeFrames: this.splitLargeFrames,\n                            maxWebSocketChunkSize: this.maxWebSocketChunkSize,\n                            forceBinaryWSFrames: this.forceBinaryWSFrames,\n                            logRawCommunication: this.logRawCommunication,\n                            appendMissingNULLonIncoming: this.appendMissingNULLonIncoming,\n                            onConnect: function (frame) {\n                                if (!_this._active) {\n                                    _this.debug('STOMP got connected while deactivate was issued, will disconnect now');\n                                    _this._disposeStompHandler();\n                                    return;\n                                }\n                                _this.onConnect(frame);\n                            },\n                            onDisconnect: function (frame) {\n                                _this.onDisconnect(frame);\n                            },\n                            onStompError: function (frame) {\n                                _this.onStompError(frame);\n                            },\n                            onWebSocketClose: function (evt) {\n                                _this.onWebSocketClose(evt);\n                                // The callback is called before attempting to reconnect, this would allow the client\n                                // to be `deactivated` in the callback.\n                                if (_this._active) {\n                                    _this._schedule_reconnect();\n                                }\n                            },\n                            onWebSocketError: function (evt) {\n                                _this.onWebSocketError(evt);\n                            },\n                            onUnhandledMessage: function (message) {\n                                _this.onUnhandledMessage(message);\n                            },\n                            onUnhandledReceipt: function (frame) {\n                                _this.onUnhandledReceipt(frame);\n                            },\n                            onUnhandledFrame: function (frame) {\n                                _this.onUnhandledFrame(frame);\n                            }\n                        });\n                        this._stompHandler.start();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Client.prototype._createWebSocket = function () {\n        var webSocket;\n        if (this.webSocketFactory) {\n            webSocket = this.webSocketFactory();\n        }\n        else {\n            webSocket = new WebSocket(this.brokerURL, this.stompVersions.protocolVersions());\n        }\n        webSocket.binaryType = 'arraybuffer';\n        return webSocket;\n    };\n    Client.prototype._schedule_reconnect = function () {\n        var _this = this;\n        if (this.reconnectDelay > 0) {\n            this.debug(\"STOMP: scheduling reconnection in \" + this.reconnectDelay + \"ms\");\n            this._reconnector = setTimeout(function () {\n                _this._connect();\n            }, this.reconnectDelay);\n        }\n    };\n    /**\n     * Disconnect if connected and stop auto reconnect loop.\n     * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n     *\n     * To reactivate you can call [Client#activate]{@link Client#activate}.\n     */\n    Client.prototype.deactivate = function () {\n        // indicate that auto reconnect loop should terminate\n        this._active = false;\n        // Clear if a reconnection was scheduled\n        if (this._reconnector) {\n            clearTimeout(this._reconnector);\n        }\n        this._disposeStompHandler();\n    };\n    /**\n     * Force disconnect if there is an active connection by directly closing the underlying WebSocket.\n     * This is different than a normal disconnect where a DISCONNECT sequence is carried out with the broker.\n     * After forcing disconnect, automatic reconnect will be attempted.\n     * To stop further reconnects call [Client#deactivate]{@link Client#deactivate} as well.\n     */\n    Client.prototype.forceDisconnect = function () {\n        if (this._webSocket) {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._stompHandler._closeWebsocket();\n            }\n        }\n    };\n    Client.prototype._disposeStompHandler = function () {\n        // Dispose STOMP Handler\n        if (this._stompHandler) {\n            this._stompHandler.dispose();\n            this._stompHandler = null;\n        }\n    };\n    /**\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations.\n     *\n     * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n     *\n     * `body` must be String.\n     * You will need to covert the payload to string in case it is not string (e.g. JSON).\n     *\n     * To send a binary message body use binaryBody parameter. It should be a\n     * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n     * Sometimes brokers may not support binary frames out of the box.\n     * Please check your broker documentation.\n     *\n     * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n     * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n     * For binary messages `content-length` header is always added.\n     *\n     * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n     * and `content-length` header is missing.\n     *\n     * ```javascript\n     *        client.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n     *\n     *        // Only destination is mandatory parameter\n     *        client.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n     *\n     *        // Skip content-length header in the frame to the broker\n     *        client.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n     *\n     *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n     *        // setting content-type header is not mandatory, however a good practice\n     *        client.publish({destination: '/topic/special', binaryBody: binaryData,\n     *                         headers: {'content-type': 'application/octet-stream'}});\n     * ```\n     */\n    Client.prototype.publish = function (params) {\n        this._stompHandler.publish(params);\n    };\n    /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {@link FrameImpl} will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Subscribing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *\n     *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n     *\n     *\n     *        // Publishing with acknowledgement\n     *        receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        client.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n     * ```\n     */\n    Client.prototype.watchForReceipt = function (receiptId, callback) {\n        this._stompHandler.watchForReceipt(receiptId, callback);\n    };\n    /**\n     * Subscribe to a STOMP Broker location. The callback will be invoked for each received message with\n     * the {@link IMessage} as argument.\n     *\n     * Note: The library will generate an unique ID if there is none provided in the headers.\n     *       To use your own ID, pass it using the headers argument.\n     *\n     * ```javascript\n     *        callback = function(message) {\n     *        // called when the client receives a STOMP message from the server\n     *          if (message.body) {\n     *            alert(\"got message with body \" + message.body)\n     *          } else {\n     *            alert(\"got empty message\");\n     *          }\n     *        });\n     *\n     *        var subscription = client.subscribe(\"/queue/test\", callback);\n     *\n     *        // Explicit subscription id\n     *        var mySubId = 'my-subscription-id-001';\n     *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n     * ```\n     */\n    Client.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        return this._stompHandler.subscribe(destination, callback, headers);\n    };\n    /**\n     * It is preferable to unsubscribe from a subscription by calling\n     * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n     *\n     * ```javascript\n     *        var subscription = client.subscribe(destination, onmessage);\n     *        // ...\n     *        subscription.unsubscribe();\n     * ```\n     *\n     * See: http://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n     */\n    Client.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.unsubscribe(id, headers);\n    };\n    /**\n     * Start a transaction, the returned {@link ITransaction} has methods - [commit]{@link ITransaction#commit}\n     * and [abort]{@link ITransaction#abort}.\n     *\n     * `transactionId` is optional, if not passed the library will generate it internally.\n     */\n    Client.prototype.begin = function (transactionId) {\n        return this._stompHandler.begin(transactionId);\n    };\n    /**\n     * Commit a transaction.\n     *\n     * It is preferable to commit a transaction by calling [commit]{@link ITransaction#commit} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.commit();\n     * ```\n     */\n    Client.prototype.commit = function (transactionId) {\n        this._stompHandler.commit(transactionId);\n    };\n    /**\n     * Abort a transaction.\n     * It is preferable to abort a transaction by calling [abort]{@link ITransaction#abort} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.abort();\n     * ```\n     */\n    Client.prototype.abort = function (transactionId) {\n        this._stompHandler.abort(transactionId);\n    };\n    /**\n     * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link IMessage#ack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // acknowledge it\n     *          message.ack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.ack(messageId, subscriptionId, headers);\n    };\n    /**\n     * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link IMessage#nack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // an error occurs, nack it\n     *          message.nack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.nack(messageId, subscriptionId, headers);\n    };\n    return Client;\n}());\nexports.Client = Client;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/compat-client.ts\":\n/*!********************************************!*\\\n  !*** ./src/compatibility/compat-client.ts ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! ../client */ \"./src/client.ts\");\nvar heartbeat_info_1 = __webpack_require__(/*! ./heartbeat-info */ \"./src/compatibility/heartbeat-info.ts\");\n/**\n * Available for backward compatibility, please shift to using {@link Client}.\n *\n * **Deprecated**\n *\n * Part of `@stomp/stompjs`.\n *\n * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n */\nvar CompatClient = /** @class */ (function (_super) {\n    __extends(CompatClient, _super);\n    /**\n     * Available for backward compatibility, please shift to using {@link Client}\n     * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     *\n     * **Deprecated**\n     *\n     * @internal\n     */\n    function CompatClient(webSocketFactory) {\n        var _this = _super.call(this) || this;\n        /**\n         * It is no op now. No longer needed. Large packets work out of the box.\n         */\n        _this.maxWebSocketFrameSize = 16 * 1024;\n        _this._heartbeatInfo = new heartbeat_info_1.HeartbeatInfo(_this);\n        _this.reconnect_delay = 0;\n        _this.webSocketFactory = webSocketFactory;\n        // Default from previous version\n        _this.debug = function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            console.log.apply(console, message);\n        };\n        return _this;\n    }\n    CompatClient.prototype._parseConnect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var closeEventCallback;\n        var connectCallback;\n        var errorCallback;\n        var headers = {};\n        if (args.length < 2) {\n            throw new Error(('Connect requires at least 2 arguments'));\n        }\n        if (typeof (args[1]) === 'function') {\n            headers = args[0], connectCallback = args[1], errorCallback = args[2], closeEventCallback = args[3];\n        }\n        else {\n            switch (args.length) {\n                case 6:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4], headers.host = args[5];\n                    break;\n                default:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4];\n            }\n        }\n        return [headers, connectCallback, errorCallback, closeEventCallback];\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n     *\n     * **Deprecated**\n     *\n     * The `connect` method accepts different number of arguments and types. See the Overloads list. Use the\n     * version with headers to pass your broker specific options.\n     *\n     * overloads:\n     * - connect(headers, connectCallback)\n     * - connect(headers, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback)\n     * - connect(login, passcode, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n     *\n     * params:\n     * - headers, see [Client#connectHeaders]{@link Client#connectHeaders}\n     * - connectCallback, see [Client#onConnect]{@link Client#onConnect}\n     * - errorCallback, see [Client#onStompError]{@link Client#onStompError}\n     * - closeEventCallback, see [Client#onWebSocketClose]{@link Client#onWebSocketClose}\n     * - login [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - passcode [String], [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - host [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.connect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var out = this._parseConnect.apply(this, args);\n        if (out[0]) {\n            this.connectHeaders = out[0];\n        }\n        if (out[1]) {\n            this.onConnect = out[1];\n        }\n        if (out[2]) {\n            this.onStompError = out[2];\n        }\n        if (out[3]) {\n            this.onWebSocketClose = out[3];\n        }\n        _super.prototype.activate.call(this);\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#deactivate]{@link Client#deactivate}.\n     *\n     * **Deprecated**\n     *\n     * See:\n     * [Client#onDisconnect]{@link Client#onDisconnect}, and\n     * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.disconnect = function (disconnectCallback, headers) {\n        if (headers === void 0) { headers = {}; }\n        if (disconnectCallback) {\n            this.onDisconnect = disconnectCallback;\n        }\n        this.disconnectHeaders = headers;\n        _super.prototype.deactivate.call(this);\n    };\n    /**\n     * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n     *\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations. The headers will, typically, be available to the subscriber.\n     * However, there may be special purpose headers corresponding to your STOMP broker.\n     *\n     *  **Deprecated**, use [Client#publish]{@link Client#publish}\n     *\n     * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n     *\n     * ```javascript\n     *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n     *\n     *        // If you want to send a message with a body, you must also pass the headers argument.\n     *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n     * ```\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.send = function (destination, headers, body) {\n        if (headers === void 0) { headers = {}; }\n        if (body === void 0) { body = ''; }\n        headers = Object.assign({}, headers);\n        var skipContentLengthHeader = (headers['content-length'] === false);\n        if (skipContentLengthHeader) {\n            delete headers['content-length'];\n        }\n        this.publish({\n            destination: destination,\n            headers: headers,\n            body: body,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    Object.defineProperty(CompatClient.prototype, \"reconnect_delay\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.reconnectDelay = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"ws\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"version\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#connectedVersion]{@link Client#connectedVersion}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceive\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledMessage;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledMessage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceipt\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledReceipt;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledReceipt = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"heartbeat\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._heartbeatInfo;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.heartbeatIncoming = value.incoming;\n            this.heartbeatOutgoing = value.outgoing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompatClient;\n}(client_1.Client));\nexports.CompatClient = CompatClient;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/heartbeat-info.ts\":\n/*!*********************************************!*\\\n  !*** ./src/compatibility/heartbeat-info.ts ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar HeartbeatInfo = /** @class */ (function () {\n    function HeartbeatInfo(client) {\n        this.client = client;\n    }\n    Object.defineProperty(HeartbeatInfo.prototype, \"outgoing\", {\n        get: function () {\n            return this.client.heartbeatOutgoing;\n        },\n        set: function (value) {\n            this.client.heartbeatOutgoing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HeartbeatInfo.prototype, \"incoming\", {\n        get: function () {\n            return this.client.heartbeatIncoming;\n        },\n        set: function (value) {\n            this.client.heartbeatIncoming = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HeartbeatInfo;\n}());\nexports.HeartbeatInfo = HeartbeatInfo;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/stomp.ts\":\n/*!************************************!*\\\n  !*** ./src/compatibility/stomp.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar versions_1 = __webpack_require__(/*! ../versions */ \"./src/versions.ts\");\nvar compat_client_1 = __webpack_require__(/*! ./compat-client */ \"./src/compatibility/compat-client.ts\");\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nvar Stomp = /** @class */ (function () {\n    function Stomp() {\n    }\n    /**\n     * This method creates a WebSocket client that is connected to\n     * the STOMP server located at the url.\n     *\n     * ```javascript\n     *        var url = \"ws://localhost:61614/stomp\";\n     *        var client = Stomp.client(url);\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#brokerURL]{@link Client#brokerURL}.\n     */\n    Stomp.client = function (url, protocols) {\n        // This is a hack to allow another implementation than the standard\n        // HTML5 WebSocket class.\n        //\n        // It is possible to use another class by calling\n        //\n        //     Stomp.WebSocketClass = MozWebSocket\n        //\n        // *prior* to call `Stomp.client()`.\n        //\n        // This hack is deprecated and `Stomp.over()` method should be used\n        // instead.\n        // See remarks on the function Stomp.over\n        if (protocols == null) {\n            protocols = versions_1.Versions.default.protocolVersions();\n        }\n        var wsFn = function () {\n            var klass = Stomp.WebSocketClass || WebSocket;\n            return new klass(url, protocols);\n        };\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n     * specify the WebSocket to use (either a standard HTML5 WebSocket or\n     * a similar object).\n     *\n     * In order to support reconnection, the function Client._connect should be callable more than once.\n     * While reconnecting\n     * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n     * alternatively allows passing a function that should return a new instance of the underlying socket.\n     *\n     * ```javascript\n     *        var client = Stomp.over(function(){\n     *          return new WebSocket('ws://localhost:15674/ws')\n     *        });\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    Stomp.over = function (ws) {\n        var wsFn;\n        if (typeof (ws) === 'function') {\n            wsFn = ws;\n        }\n        else {\n            console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' +\n                'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n            wsFn = function () { return ws; };\n        }\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * In case you need to use a non standard class for WebSocket.\n     *\n     * For example when using within NodeJS environment:\n     *\n     * ```javascript\n     *        StompJs = require('../../esm5/');\n     *        Stomp = StompJs.Stomp;\n     *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n     * ```\n     *\n     * **Deprecated**\n     *\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    // tslint:disable-next-line:variable-name\n    Stomp.WebSocketClass = null;\n    return Stomp;\n}());\nexports.Stomp = Stomp;\n\n\n/***/ }),\n\n/***/ \"./src/frame-impl.ts\":\n/*!***************************!*\\\n  !*** ./src/frame-impl.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\n/**\n * Frame class represents a STOMP frame.\n *\n * @internal\n */\nvar FrameImpl = /** @class */ (function () {\n    /**\n     * Frame constructor. `command`, `headers` and `body` are available as properties.\n     *\n     * @internal\n     */\n    function FrameImpl(params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, escapeHeaderValues = params.escapeHeaderValues, skipContentLengthHeader = params.skipContentLengthHeader;\n        this.command = command;\n        this.headers = Object.assign({}, headers || {});\n        if (binaryBody) {\n            this._binaryBody = binaryBody;\n            this.isBinaryBody = true;\n        }\n        else {\n            this._body = body || '';\n            this.isBinaryBody = false;\n        }\n        this.escapeHeaderValues = escapeHeaderValues || false;\n        this.skipContentLengthHeader = skipContentLengthHeader || false;\n    }\n    Object.defineProperty(FrameImpl.prototype, \"body\", {\n        /**\n         * body of the frame\n         */\n        get: function () {\n            if (!this._body && this.isBinaryBody) {\n                this._body = new TextDecoder().decode(this._binaryBody);\n            }\n            return this._body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameImpl.prototype, \"binaryBody\", {\n        /**\n         * body as Uint8Array\n         */\n        get: function () {\n            if (!this._binaryBody && !this.isBinaryBody) {\n                this._binaryBody = new TextEncoder().encode(this._body);\n            }\n            return this._binaryBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * deserialize a STOMP Frame from raw data.\n     *\n     * @internal\n     */\n    FrameImpl.fromRawFrame = function (rawFrame, escapeHeaderValues) {\n        var headers = {};\n        var trim = function (str) { return str.replace(/^\\s+|\\s+$/g, ''); };\n        // In case of repeated headers, as per standards, first value need to be used\n        for (var _i = 0, _a = rawFrame.headers.reverse(); _i < _a.length; _i++) {\n            var header = _a[_i];\n            var idx = header.indexOf(':');\n            var key = trim(header[0]);\n            var value = trim(header[1]);\n            if (escapeHeaderValues && (rawFrame.command !== 'CONNECT') && (rawFrame.command !== 'CONNECTED')) {\n                value = FrameImpl.hdrValueUnEscape(value);\n            }\n            headers[key] = value;\n        }\n        return new FrameImpl({\n            command: rawFrame.command,\n            headers: headers,\n            binaryBody: rawFrame.binaryBody,\n            escapeHeaderValues: escapeHeaderValues\n        });\n    };\n    /**\n     * @internal\n     */\n    FrameImpl.prototype.toString = function () {\n        return this.serializeCmdAndHeaders();\n    };\n    /**\n     * serialize this Frame in a format suitable to be passed to WebSocket.\n     * If the body is string the output will be string.\n     * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n     *\n     * @internal\n     */\n    FrameImpl.prototype.serialize = function () {\n        var cmdAndHeaders = this.serializeCmdAndHeaders();\n        if (this.isBinaryBody) {\n            return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n        }\n        else {\n            return cmdAndHeaders + this._body + byte_1.BYTE.NULL;\n        }\n    };\n    FrameImpl.prototype.serializeCmdAndHeaders = function () {\n        var lines = [this.command];\n        if (this.skipContentLengthHeader) {\n            delete this.headers['content-length'];\n        }\n        for (var _i = 0, _a = Object.keys(this.headers || {}); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            var value = this.headers[name_1];\n            if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n                lines.push(name_1 + \":\" + FrameImpl.hdrValueEscape(\"\" + value));\n            }\n            else {\n                lines.push(name_1 + \":\" + value);\n            }\n        }\n        if (this.isBinaryBody || (!this.isBodyEmpty() && !this.skipContentLengthHeader)) {\n            lines.push(\"content-length:\" + this.bodyLength());\n        }\n        return lines.join(byte_1.BYTE.LF) + byte_1.BYTE.LF + byte_1.BYTE.LF;\n    };\n    FrameImpl.prototype.isBodyEmpty = function () {\n        return this.bodyLength() === 0;\n    };\n    FrameImpl.prototype.bodyLength = function () {\n        var binaryBody = this.binaryBody;\n        return binaryBody ? binaryBody.length : 0;\n    };\n    /**\n     * Compute the size of a UTF-8 string by counting its number of bytes\n     * (and not the number of characters composing the string)\n     */\n    FrameImpl.sizeOfUTF8 = function (s) {\n        return s ? new TextEncoder().encode(s).length : 0;\n    };\n    FrameImpl.toUnit8Array = function (cmdAndHeaders, binaryBody) {\n        var uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n        var nullTerminator = new Uint8Array([0]);\n        var uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n        uint8Frame.set(uint8CmdAndHeaders);\n        uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n        uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n        return uint8Frame;\n    };\n    /**\n     * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n     *\n     * @internal\n     */\n    FrameImpl.marshall = function (params) {\n        var frame = new FrameImpl(params);\n        return frame.serialize();\n    };\n    /**\n     *  Escape header values\n     */\n    FrameImpl.hdrValueEscape = function (str) {\n        return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n    };\n    /**\n     * UnEscape header values\n     */\n    FrameImpl.hdrValueUnEscape = function (str) {\n        return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n    };\n    return FrameImpl;\n}());\nexports.FrameImpl = FrameImpl;\n\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./client */ \"./src/client.ts\"));\n__export(__webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\"));\n__export(__webpack_require__(/*! ./parser */ \"./src/parser.ts\"));\n__export(__webpack_require__(/*! ./stomp-config */ \"./src/stomp-config.ts\"));\n__export(__webpack_require__(/*! ./stomp-headers */ \"./src/stomp-headers.ts\"));\n__export(__webpack_require__(/*! ./stomp-subscription */ \"./src/stomp-subscription.ts\"));\n__export(__webpack_require__(/*! ./versions */ \"./src/versions.ts\"));\n__export(__webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\"));\n// Compatibility code\n__export(__webpack_require__(/*! ./compatibility/compat-client */ \"./src/compatibility/compat-client.ts\"));\n__export(__webpack_require__(/*! ./compatibility/stomp */ \"./src/compatibility/stomp.ts\"));\n\n\n/***/ }),\n\n/***/ \"./src/parser.ts\":\n/*!***********************!*\\\n  !*** ./src/parser.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internal\n */\nvar NULL = 0;\n/**\n * @internal\n */\nvar LF = 10;\n/**\n * @internal\n */\nvar CR = 13;\n/**\n * @internal\n */\nvar COLON = 58;\n/**\n * This is an evented, rec descent parser.\n * A stream of Octets can be passed and whenever it recognizes\n * a complete Frame or an incoming ping it will invoke the registered callbacks.\n *\n * All incoming Octets are fed into _onByte function.\n * Depending on current state the _onByte function keeps changing.\n * Depending on the state it keeps accumulating into _token and _results.\n * State is indicated by current value of _onByte, all states are named as _collect.\n *\n * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n * imply that all lengths are considered in bytes (instead of string lengths).\n * So, before actual parsing, if the incoming data is String it is converted to Octets.\n * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n *\n * There is no peek function on the incoming data.\n * When a state change occurs based on an Octet without consuming the Octet,\n * the Octet, after state change, is fed again (_reinjectByte).\n * This became possible as the state change can be determined by inspecting just one Octet.\n *\n * There are two modes to collect the body, if content-length header is there then it by counting Octets\n * otherwise it is determined by NULL terminator.\n *\n * Following the standards, the command and headers are converted to Strings\n * and the body is returned as Octets.\n * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n *\n * This parser does not use Regular Expressions as that can only operate on Strings.\n *\n * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n * is pushed.\n *\n * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n * (which is protocol version specific), and convert body to text.\n *\n * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar Parser = /** @class */ (function () {\n    function Parser(onFrame, onIncomingPing) {\n        this.onFrame = onFrame;\n        this.onIncomingPing = onIncomingPing;\n        this._encoder = new TextEncoder();\n        this._decoder = new TextDecoder();\n        this._token = [];\n        this._initState();\n    }\n    Parser.prototype.parseChunk = function (segment, appendMissingNULLonIncoming) {\n        if (appendMissingNULLonIncoming === void 0) { appendMissingNULLonIncoming = false; }\n        var chunk;\n        if ((segment instanceof ArrayBuffer)) {\n            chunk = new Uint8Array(segment);\n        }\n        else {\n            chunk = this._encoder.encode(segment);\n        }\n        // See https://github.com/stomp-js/stompjs/issues/89\n        // Remove when underlying issue is fixed.\n        //\n        // Send a NULL byte, if the last byte of a Text frame was not NULL.F\n        if (appendMissingNULLonIncoming && chunk[chunk.length - 1] !== 0) {\n            var chunkWithNull = new Uint8Array(chunk.length + 1);\n            chunkWithNull.set(chunk, 0);\n            chunkWithNull[chunk.length] = 0;\n            chunk = chunkWithNull;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < chunk.length; i++) {\n            var byte = chunk[i];\n            this._onByte(byte);\n        }\n    };\n    // The following implements a simple Rec Descent Parser.\n    // The grammar is simple and just one byte tells what should be the next state\n    Parser.prototype._collectFrame = function (byte) {\n        if (byte === NULL) { // Ignore\n            return;\n        }\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) { // Incoming Ping\n            this.onIncomingPing();\n            return;\n        }\n        this._onByte = this._collectCommand;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._collectCommand = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.command = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaders = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._setupCollectBody();\n            return;\n        }\n        this._onByte = this._collectHeaderKey;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._reinjectByte = function (byte) {\n        this._onByte(byte);\n    };\n    Parser.prototype._collectHeaderKey = function (byte) {\n        if (byte === COLON) {\n            this._headerKey = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaderValue;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaderValue = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n            this._headerKey = undefined;\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._setupCollectBody = function () {\n        var contentLengthHeader = this._results.headers.filter(function (header) {\n            return header[0] === 'content-length';\n        })[0];\n        if (contentLengthHeader) {\n            this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n            this._onByte = this._collectBodyFixedSize;\n        }\n        else {\n            this._onByte = this._collectBodyNullTerminated;\n        }\n    };\n    Parser.prototype._collectBodyNullTerminated = function (byte) {\n        if (byte === NULL) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectBodyFixedSize = function (byte) {\n        // It is post decrement, so that we discard the trailing NULL octet\n        if (this._bodyBytesRemaining-- === 0) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._retrievedBody = function () {\n        this._results.binaryBody = this._consumeTokenAsRaw();\n        this.onFrame(this._results);\n        this._initState();\n    };\n    // Rec Descent Parser helpers\n    Parser.prototype._consumeByte = function (byte) {\n        this._token.push(byte);\n    };\n    Parser.prototype._consumeTokenAsUTF8 = function () {\n        return this._decoder.decode(this._consumeTokenAsRaw());\n    };\n    Parser.prototype._consumeTokenAsRaw = function () {\n        var rawResult = new Uint8Array(this._token);\n        this._token = [];\n        return rawResult;\n    };\n    Parser.prototype._initState = function () {\n        this._results = {\n            command: undefined,\n            headers: [],\n            binaryBody: undefined\n        };\n        this._token = [];\n        this._headerKey = undefined;\n        this._onByte = this._collectFrame;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-config.ts\":\n/*!*****************************!*\\\n  !*** ./src/stomp-config.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompConfig = /** @class */ (function () {\n    function StompConfig() {\n    }\n    return StompConfig;\n}());\nexports.StompConfig = StompConfig;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-handler.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-handler.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\nvar frame_impl_1 = __webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\");\nvar parser_1 = __webpack_require__(/*! ./parser */ \"./src/parser.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * The STOMP protocol handler\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar StompHandler = /** @class */ (function () {\n    function StompHandler(_client, _webSocket, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        this._client = _client;\n        this._webSocket = _webSocket;\n        this._serverFrameHandlers = {\n            // [CONNECTED Frame](http://stomp.github.com/stomp-specification-1.2.html#CONNECTED_Frame)\n            CONNECTED: function (frame) {\n                _this.debug(\"connected to server \" + frame.headers.server);\n                _this._connected = true;\n                _this._connectedVersion = frame.headers.version;\n                // STOMP version 1.2 needs header values to be escaped\n                if (_this._connectedVersion === versions_1.Versions.V1_2) {\n                    _this._escapeHeaderValues = true;\n                }\n                _this._setupHeartbeat(frame.headers);\n                _this.onConnect(frame);\n            },\n            // [MESSAGE Frame](http://stomp.github.com/stomp-specification-1.2.html#MESSAGE)\n            MESSAGE: function (frame) {\n                // the callback is registered when the client calls\n                // `subscribe()`.\n                // If there is no registered subscription for the received message,\n                // the default `onUnhandledMessage` callback is used that the client can set.\n                // This is useful for subscriptions that are automatically created\n                // on the browser side (e.g. [RabbitMQ's temporary\n                // queues](http://www.rabbitmq.com/stomp.html)).\n                var subscription = frame.headers.subscription;\n                var onReceive = _this._subscriptions[subscription] || _this.onUnhandledMessage;\n                // bless the frame to be a Message\n                var message = frame;\n                var client = _this;\n                var messageId = _this._connectedVersion === versions_1.Versions.V1_2 ? message.headers.ack : message.headers['message-id'];\n                // add `ack()` and `nack()` methods directly to the returned frame\n                // so that a simple call to `message.ack()` can acknowledge the message.\n                message.ack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.ack(messageId, subscription, headers);\n                };\n                message.nack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.nack(messageId, subscription, headers);\n                };\n                onReceive(message);\n            },\n            // [RECEIPT Frame](http://stomp.github.com/stomp-specification-1.2.html#RECEIPT)\n            RECEIPT: function (frame) {\n                var callback = _this._receiptWatchers[frame.headers['receipt-id']];\n                if (callback) {\n                    callback(frame);\n                    // Server will acknowledge only once, remove the callback\n                    delete _this._receiptWatchers[frame.headers['receipt-id']];\n                }\n                else {\n                    _this.onUnhandledReceipt(frame);\n                }\n            },\n            // [ERROR Frame](http://stomp.github.com/stomp-specification-1.2.html#ERROR)\n            ERROR: function (frame) {\n                _this.onStompError(frame);\n            }\n        };\n        // used to index subscribers\n        this._counter = 0;\n        // subscription callbacks indexed by subscriber's ID\n        this._subscriptions = {};\n        // receipt-watchers indexed by receipts-ids\n        this._receiptWatchers = {};\n        this._partialData = '';\n        this._escapeHeaderValues = false;\n        this._lastServerActivityTS = Date.now();\n        this.configure(config);\n    }\n    Object.defineProperty(StompHandler.prototype, \"connectedVersion\", {\n        get: function () {\n            return this._connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompHandler.prototype, \"connected\", {\n        get: function () {\n            return this._connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StompHandler.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    StompHandler.prototype.start = function () {\n        var _this = this;\n        var parser = new parser_1.Parser(\n        // On Frame\n        function (rawFrame) {\n            var frame = frame_impl_1.FrameImpl.fromRawFrame(rawFrame, _this._escapeHeaderValues);\n            // if this.logRawCommunication is set, the rawChunk is logged at this._webSocket.onmessage\n            if (!_this.logRawCommunication) {\n                _this.debug(\"<<< \" + frame);\n            }\n            var serverFrameHandler = _this._serverFrameHandlers[frame.command] || _this.onUnhandledFrame;\n            serverFrameHandler(frame);\n        }, \n        // On Incoming Ping\n        function () {\n            _this.debug('<<< PONG');\n        });\n        this._webSocket.onmessage = function (evt) {\n            _this.debug('Received data');\n            _this._lastServerActivityTS = Date.now();\n            if (_this.logRawCommunication) {\n                var rawChunkAsString = (evt.data instanceof ArrayBuffer) ? new TextDecoder().decode(evt.data) : evt.data;\n                _this.debug(\"<<< \" + rawChunkAsString);\n            }\n            parser.parseChunk(evt.data, _this.appendMissingNULLonIncoming);\n        };\n        this._webSocket.onclose = function (closeEvent) {\n            _this.debug(\"Connection closed to \" + _this._webSocket.url);\n            _this.onWebSocketClose(closeEvent);\n            _this._cleanUp();\n        };\n        this._webSocket.onerror = function (errorEvent) {\n            _this.onWebSocketError(errorEvent);\n        };\n        this._webSocket.onopen = function () {\n            // Clone before updating\n            var connectHeaders = Object.assign({}, _this.connectHeaders);\n            _this.debug('Web Socket Opened...');\n            connectHeaders['accept-version'] = _this.stompVersions.supportedVersions();\n            connectHeaders['heart-beat'] = [_this.heartbeatOutgoing, _this.heartbeatIncoming].join(',');\n            _this._transmit({ command: 'CONNECT', headers: connectHeaders });\n        };\n    };\n    StompHandler.prototype._setupHeartbeat = function (headers) {\n        var _this = this;\n        if ((headers.version !== versions_1.Versions.V1_1 && headers.version !== versions_1.Versions.V1_2)) {\n            return;\n        }\n        // It is valid for the server to not send this header\n        // https://stomp.github.io/stomp-specification-1.2.html#Heart-beating\n        if (!headers['heart-beat']) {\n            return;\n        }\n        // heart-beat header received from the server looks like:\n        //\n        //     heart-beat: sx, sy\n        var _a = (headers['heart-beat']).split(',').map(function (v) { return parseInt(v, 10); }), serverOutgoing = _a[0], serverIncoming = _a[1];\n        if ((this.heartbeatOutgoing !== 0) && (serverIncoming !== 0)) {\n            var ttl = Math.max(this.heartbeatOutgoing, serverIncoming);\n            this.debug(\"send PING every \" + ttl + \"ms\");\n            this._pinger = setInterval(function () {\n                if (_this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                    _this._webSocket.send(byte_1.BYTE.LF);\n                    _this.debug('>>> PING');\n                }\n            }, ttl);\n        }\n        if ((this.heartbeatIncoming !== 0) && (serverOutgoing !== 0)) {\n            var ttl_1 = Math.max(this.heartbeatIncoming, serverOutgoing);\n            this.debug(\"check PONG every \" + ttl_1 + \"ms\");\n            this._ponger = setInterval(function () {\n                var delta = Date.now() - _this._lastServerActivityTS;\n                // We wait twice the TTL to be flexible on window's setInterval calls\n                if (delta > (ttl_1 * 2)) {\n                    _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\n                    _this._closeWebsocket();\n                }\n            }, ttl_1);\n        }\n    };\n    StompHandler.prototype._closeWebsocket = function () {\n        this._webSocket.onmessage = function () { }; // ignore messages\n        this._webSocket.close();\n    };\n    StompHandler.prototype._transmit = function (params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var frame = new frame_impl_1.FrameImpl({\n            command: command,\n            headers: headers,\n            body: body,\n            binaryBody: binaryBody,\n            escapeHeaderValues: this._escapeHeaderValues,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n        var rawChunk = frame.serialize();\n        if (this.logRawCommunication) {\n            this.debug(\">>> \" + rawChunk);\n        }\n        else {\n            this.debug(\">>> \" + frame);\n        }\n        if (this.forceBinaryWSFrames && typeof rawChunk === 'string') {\n            rawChunk = new TextEncoder().encode(rawChunk);\n        }\n        if (typeof rawChunk !== 'string' || !this.splitLargeFrames) {\n            this._webSocket.send(rawChunk);\n        }\n        else {\n            var out = rawChunk;\n            while (out.length > 0) {\n                var chunk = out.substring(0, this.maxWebSocketChunkSize);\n                out = out.substring(this.maxWebSocketChunkSize);\n                this._webSocket.send(chunk);\n                this.debug(\"chunk sent = \" + chunk.length + \", remaining = \" + out.length);\n            }\n        }\n    };\n    StompHandler.prototype.dispose = function () {\n        var _this = this;\n        if (this.connected) {\n            try {\n                // clone before updating\n                var disconnectHeaders = Object.assign({}, this.disconnectHeaders);\n                if (!disconnectHeaders.receipt) {\n                    disconnectHeaders.receipt = \"close-\" + this._counter++;\n                }\n                this.watchForReceipt(disconnectHeaders.receipt, function (frame) {\n                    _this._closeWebsocket();\n                    _this._cleanUp();\n                    _this.onDisconnect(frame);\n                });\n                this._transmit({ command: 'DISCONNECT', headers: disconnectHeaders });\n            }\n            catch (error) {\n                this.debug(\"Ignoring error during disconnect \" + error);\n            }\n        }\n        else {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._closeWebsocket();\n            }\n        }\n    };\n    StompHandler.prototype._cleanUp = function () {\n        this._connected = false;\n        if (this._pinger) {\n            clearInterval(this._pinger);\n        }\n        if (this._ponger) {\n            clearInterval(this._ponger);\n        }\n    };\n    StompHandler.prototype.publish = function (params) {\n        var destination = params.destination, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var hdrs = Object.assign({ destination: destination }, headers);\n        this._transmit({\n            command: 'SEND',\n            headers: hdrs,\n            body: body,\n            binaryBody: binaryBody,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    StompHandler.prototype.watchForReceipt = function (receiptId, callback) {\n        this._receiptWatchers[receiptId] = callback;\n    };\n    StompHandler.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (!headers.id) {\n            headers.id = \"sub-\" + this._counter++;\n        }\n        headers.destination = destination;\n        this._subscriptions[headers.id] = callback;\n        this._transmit({ command: 'SUBSCRIBE', headers: headers });\n        var client = this;\n        return {\n            id: headers.id,\n            unsubscribe: function (hdrs) {\n                return client.unsubscribe(headers.id, hdrs);\n            }\n        };\n    };\n    StompHandler.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        delete this._subscriptions[id];\n        headers.id = id;\n        this._transmit({ command: 'UNSUBSCRIBE', headers: headers });\n    };\n    StompHandler.prototype.begin = function (transactionId) {\n        var txId = transactionId || (\"tx-\" + this._counter++);\n        this._transmit({\n            command: 'BEGIN', headers: {\n                transaction: txId\n            }\n        });\n        var client = this;\n        return {\n            id: txId,\n            commit: function () {\n                client.commit(txId);\n            },\n            abort: function () {\n                client.abort(txId);\n            }\n        };\n    };\n    StompHandler.prototype.commit = function (transactionId) {\n        this._transmit({\n            command: 'COMMIT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.abort = function (transactionId) {\n        this._transmit({\n            command: 'ABORT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        this._transmit({ command: 'ACK', headers: headers });\n    };\n    StompHandler.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        return this._transmit({ command: 'NACK', headers: headers });\n    };\n    return StompHandler;\n}());\nexports.StompHandler = StompHandler;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-headers.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-headers.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * STOMP headers. Many functions calls will accept headers as parameters.\n * The headers sent by Broker will be available as [IFrame#headers]{@link IFrame#headers}.\n *\n * `key` and `value` must be valid strings.\n * In addition, `key` must not contain `CR`, `LF`, or `:`.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompHeaders = /** @class */ (function () {\n    function StompHeaders() {\n    }\n    return StompHeaders;\n}());\nexports.StompHeaders = StompHeaders;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-subscription.ts\":\n/*!***********************************!*\\\n  !*** ./src/stomp-subscription.ts ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompSubscription = /** @class */ (function () {\n    function StompSubscription() {\n    }\n    return StompSubscription;\n}());\nexports.StompSubscription = StompSubscription;\n\n\n/***/ }),\n\n/***/ \"./src/versions.ts\":\n/*!*************************!*\\\n  !*** ./src/versions.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nvar Versions = /** @class */ (function () {\n    /**\n     * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n     *\n     * You will an instance if this class if you want to override supported versions to be declared during\n     * STOMP handshake.\n     */\n    function Versions(versions) {\n        this.versions = versions;\n    }\n    /**\n     * Used as part of CONNECT STOMP Frame\n     */\n    Versions.prototype.supportedVersions = function () {\n        return this.versions.join(',');\n    };\n    /**\n     * Used while creating a WebSocket\n     */\n    Versions.prototype.protocolVersions = function () {\n        return this.versions.map(function (x) { return \"v\" + x.replace('.', '') + \".stomp\"; });\n    };\n    /**\n     * Indicates protocol version 1.0\n     */\n    Versions.V1_0 = '1.0';\n    /**\n     * Indicates protocol version 1.1\n     */\n    Versions.V1_1 = '1.1';\n    /**\n     * Indicates protocol version 1.2\n     */\n    Versions.V1_2 = '1.2';\n    /**\n     * @internal\n     */\n    Versions.default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n    return Versions;\n}());\nexports.Versions = Versions;\n\n\n/***/ }),\n\n/***/ \"./src/web-socket-state.ts\":\n/*!*********************************!*\\\n  !*** ./src/web-socket-state.ts ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Possible states for the WebSocket, copied here to avoid dependency on WebSocket class\n *\n * Part of `@stomp/rx-stomp`\n *\n * @internal\n */\nvar WebSocketState;\n(function (WebSocketState) {\n    WebSocketState[WebSocketState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    WebSocketState[WebSocketState[\"OPEN\"] = 1] = \"OPEN\";\n    WebSocketState[WebSocketState[\"CLOSING\"] = 2] = \"CLOSING\";\n    WebSocketState[WebSocketState[\"CLOSED\"] = 3] = \"CLOSED\";\n})(WebSocketState = exports.WebSocketState || (exports.WebSocketState = {}));\n\n\n/***/ }),\n\n/***/ 0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! /home/kdeepak/MyWork/Tech/stomp/stompjs/src/index.ts */\"./src/index.ts\");\n\n\n/***/ })\n\n/******/ });\n});\n"],"mappings":"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CtC;YACA,IAAI,CAAC7C,OAAO,GAAG,KAAK;YACpB;YACA,IAAI,IAAI,CAAC2C,YAAY,EAAE;cACnBG,YAAY,CAAC,IAAI,CAACH,YAAY,CAAC;YACnC;YACA,IAAI,CAACX,oBAAoB,CAAC,CAAC;UAC/B,CAAC;UACD;AACJ;AACA;AACA;AACA;AACA;UACI5C,MAAM,CAAChD,SAAS,CAAC2G,eAAe,GAAG,YAAY;YAC3C,IAAI,IAAI,CAAC/B,UAAU,EAAE;cACjB,IAAI,IAAI,CAACA,UAAU,CAACgC,UAAU,KAAK7D,kBAAkB,CAAC8D,cAAc,CAACC,UAAU,IACxE,IAAI,CAAClC,UAAU,CAACgC,UAAU,KAAK7D,kBAAkB,CAAC8D,cAAc,CAACE,IAAI,EAAE;gBAC1E,IAAI,CAAChC,aAAa,CAACiC,eAAe,CAAC,CAAC;cACxC;YACJ;UACJ,CAAC;UACDhE,MAAM,CAAChD,SAAS,CAAC4F,oBAAoB,GAAG,YAAY;YAChD;YACA,IAAI,IAAI,CAACb,aAAa,EAAE;cACpB,IAAI,CAACA,aAAa,CAACkC,OAAO,CAAC,CAAC;cAC5B,IAAI,CAAClC,aAAa,GAAG,IAAI;YAC7B;UACJ,CAAC;UACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACI/B,MAAM,CAAChD,SAAS,CAACkH,OAAO,GAAG,UAAUC,MAAM,EAAE;YACzC,IAAI,CAACpC,aAAa,CAACmC,OAAO,CAACC,MAAM,CAAC;UACtC,CAAC;UACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACInE,MAAM,CAAChD,SAAS,CAACoH,eAAe,GAAG,UAAUC,SAAS,EAAEC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"},"metadata":{},"sourceType":"script","externalDependencies":[]}