{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Topic } from \"../../entity/Topic\";\nexport let CreateTopicComponent = class CreateTopicComponent {\n  constructor(topicService, modalService, router) {\n    this.showAllErrors = false;\n    this.globalError = '';\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.minLength(3), Validators.maxLength(100), Validators.required]),\n      description: new FormControl('', [Validators.maxLength(250)])\n    });\n    this.topicService = topicService;\n    this.modalService = modalService;\n    this.router = router;\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n  isGlobalErrorSet() {\n    return this.globalError != '';\n  }\n  submit() {\n    if (this.anyErrorExists()) return;\n    this.addTopic();\n  }\n  anyErrorExists() {\n    this.resetGlobalError();\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n  addTopic() {\n    let topic = this.createTopicFromFields();\n    this.subscription = this.topicService.saveTopic(topic).subscribe(result => {\n      console.log(result);\n      if (result.success) {\n        this.modalService.close();\n      } else {\n        this.globalError = result.message;\n      }\n    });\n  }\n  resetGlobalError() {\n    this.globalError = '';\n  }\n  createTopicFromFields() {\n    let name = this.getNameFromField();\n    let description = this.getDescriptionFromField();\n    return new Topic(null, name, description);\n  }\n  getNameFromField() {\n    return this.form.controls.name.getRawValue();\n  }\n  getDescriptionFromField() {\n    return this.form.controls.description.getRawValue();\n  }\n  isAnyErrorInFields() {\n    return this.doesControlHaveError(this.form.controls.name) || this.doesControlHaveError(this.form.controls.description);\n  }\n  doesControlHaveError(formControl) {\n    return formControl.errors != null;\n  }\n};\nCreateTopicComponent = __decorate([Component({\n  selector: 'app-create-topic',\n  templateUrl: './create-topic.component.html',\n  styleUrls: ['./create-topic.component.css']\n})], CreateTopicComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","Topic","CreateTopicComponent","constructor","topicService","modalService","router","showAllErrors","globalError","form","name","minLength","maxLength","required","description","ngOnDestroy","subscription","unsubscribe","isGlobalErrorSet","submit","anyErrorExists","addTopic","resetGlobalError","isAnyErrorInFields","topic","createTopicFromFields","saveTopic","subscribe","result","console","log","success","close","message","getNameFromField","getDescriptionFromField","controls","getRawValue","doesControlHaveError","formControl","errors","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-topic\\create-topic.component.ts"],"sourcesContent":["import {Component, OnDestroy} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TopicService} from \"../../service/topic.service\";\nimport {Topic} from \"../../entity/Topic\";\nimport {ModalCreateWindowService} from \"../../service/modal-create-window.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-create-topic',\n  templateUrl: './create-topic.component.html',\n  styleUrls: ['./create-topic.component.css']\n})\nexport class CreateTopicComponent implements OnDestroy {\n  private topicService: TopicService;\n  private modalService: ModalCreateWindowService;\n  private router: Router;\n\n  showAllErrors = false;\n  globalError: string = '';\n\n  private subscription: Subscription;\n\n  form = new FormGroup({\n    name: new FormControl<string>('', [\n      Validators.minLength(3),\n      Validators.maxLength(100),\n      Validators.required\n    ]),\n    description: new FormControl<string>('', [\n      Validators.maxLength(250)\n    ])\n  });\n\n  constructor(topicService: TopicService,\n              modalService: ModalCreateWindowService,\n              router: Router) {\n    this.topicService = topicService;\n    this.modalService = modalService;\n    this.router = router;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n  isGlobalErrorSet(): boolean {\n    return this.globalError != '';\n  }\n\n  submit() {\n    if (this.anyErrorExists())\n      return;\n\n    this.addTopic();\n  }\n\n  private anyErrorExists(): boolean {\n    this.resetGlobalError();\n\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n\n  private addTopic() {\n    let topic = this.createTopicFromFields();\n\n    this.subscription = this.topicService.saveTopic(topic)\n      .subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.modalService.close();\n        }\n        else {\n          this.globalError = result.message;\n        }\n      });\n  }\n\n  private resetGlobalError() {\n    this.globalError = '';\n  }\n\n  private createTopicFromFields(): Topic {\n    let name = this.getNameFromField();\n    let description = this.getDescriptionFromField();\n\n    return new Topic(null, name, description);\n  }\n\n  private getNameFromField(): string {\n    return this.form.controls.name.getRawValue();\n  }\n\n  private getDescriptionFromField(): string {\n    return this.form.controls.description.getRawValue();\n  }\n\n  private isAnyErrorInFields(): boolean {\n    return this.doesControlHaveError(this.form.controls.name) ||\n      this.doesControlHaveError(this.form.controls.description);\n  }\n\n  private doesControlHaveError(formControl: FormControl): boolean {\n    return formControl.errors != null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}