{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../radio-options/radio-options.component\";\nexport class RadioOptionsStringComponent {\n  constructor() {\n    this.required = false;\n    this.showError = false;\n    this.form = new FormGroup({\n      fieldOption: new FormControl(null)\n    });\n  }\n  ngOnInit() {\n    this.subscription = this.form.controls.fieldOption.valueChanges.subscribe(value => {\n      let strValue = value.shownName;\n      this.formElement.setValue(strValue);\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n}\nRadioOptionsStringComponent.ɵfac = function RadioOptionsStringComponent_Factory(t) {\n  return new (t || RadioOptionsStringComponent)();\n};\nRadioOptionsStringComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RadioOptionsStringComponent,\n  selectors: [[\"app-radio-options-string\"]],\n  inputs: {\n    field: \"field\",\n    required: \"required\",\n    formElement: \"formElement\",\n    showError: \"showError\"\n  },\n  decls: 1,\n  vars: 5,\n  consts: [[3, \"fieldName\", \"required\", \"formElement\", \"showError\", \"options\"]],\n  template: function RadioOptionsStringComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-radio-options\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"fieldName\", ctx.field.label)(\"required\", ctx.required)(\"formElement\", ctx.form.controls.fieldOption)(\"showError\", ctx.showError)(\"options\", ctx.field.options);\n    }\n  },\n  dependencies: [i1.RadioOptionsComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","RadioOptionsStringComponent","constructor","required","showError","form","fieldOption","ngOnInit","subscription","controls","valueChanges","subscribe","value","strValue","shownName","formElement","setValue","ngOnDestroy","unsubscribe","selectors","inputs","field","decls","vars","consts","template","RadioOptionsStringComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵproperty","label","options"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\radio-options-string\\radio-options-string.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\radio-options-string\\radio-options-string.component.html"],"sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Field} from \"../../entity/Field\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {FieldOption} from \"../../entity/FieldOption\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-radio-options-string',\r\n  templateUrl: './radio-options-string.component.html',\r\n  styleUrls: ['./radio-options-string.component.css']\r\n})\r\nexport class RadioOptionsStringComponent implements OnInit, OnDestroy {\r\n  @Input() field: Field;\r\n  @Input() required: boolean = false;\r\n  @Input() formElement: FormControl<string>;\r\n  @Input() showError: boolean = false;\r\n\r\n  form = new FormGroup({\r\n    fieldOption: new FormControl<FieldOption>(null)\r\n  });\r\n\r\n  private subscription: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.form.controls.fieldOption.valueChanges\r\n      .subscribe(value => {\r\n        let strValue = value.shownName;\r\n        this.formElement.setValue(strValue);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription)\r\n      this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<app-radio-options\r\n  [fieldName]=\"field.label\"\r\n  [required]=\"required\"\r\n  [formElement]=\"form.controls.fieldOption\"\r\n  [showError]=\"showError\"\r\n  [options]=\"field.options\"\r\n></app-radio-options>\r\n"],"mappings":"AAEA,SAAQA,WAAW,EAAEC,SAAS,QAAO,gBAAgB;;;AASrD,OAAM,MAAOC,2BAA2B;EALxCC,YAAA;IAOW,KAAAC,QAAQ,GAAY,KAAK;IAEzB,KAAAC,SAAS,GAAY,KAAK;IAEnC,KAAAC,IAAI,GAAG,IAAIL,SAAS,CAAC;MACnBM,WAAW,EAAE,IAAIP,WAAW,CAAc,IAAI;KAC/C,CAAC;;EAIFQ,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,IAAI,CAACI,QAAQ,CAACH,WAAW,CAACI,YAAY,CAC5DC,SAAS,CAACC,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAGD,KAAK,CAACE,SAAS;MAC9B,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACH,QAAQ,CAAC;IACrC,CAAC,CAAC;EACN;EAEAI,WAAWA,CAAA;IACT,IAAI,IAAI,CAACT,YAAY,EACnB,IAAI,CAACA,YAAY,CAACU,WAAW,EAAE;EACnC;;AAvBWjB,2BAA2B,C;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B,C;QAA3BA,2BAA2B;EAAAkB,SAAA;EAAAC,MAAA;IAAAC,KAAA;IAAAlB,QAAA;IAAAY,WAAA;IAAAX,SAAA;EAAA;EAAAkB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXxCE,EAAA,CAAAC,SAAA,2BAMqB;;;MALnBD,EAAA,CAAAE,UAAA,cAAAH,GAAA,CAAAP,KAAA,CAAAW,KAAA,CAAyB,aAAAJ,GAAA,CAAAzB,QAAA,iBAAAyB,GAAA,CAAAvB,IAAA,CAAAI,QAAA,CAAAH,WAAA,eAAAsB,GAAA,CAAAxB,SAAA,aAAAwB,GAAA,CAAAP,KAAA,CAAAY,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}