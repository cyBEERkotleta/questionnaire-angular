{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class ModalService {\n  constructor() {\n    this.visible$ = new BehaviorSubject(true);\n  }\n  open() {\n    this.visible$.next(true);\n  }\n  close() {\n    this.visible$.next(false);\n  }\n  isVisible() {\n    return this.visible$.getValue();\n  }\n}\nModalService.ɵfac = function ModalService_Factory(t) {\n  return new (t || ModalService)();\n};\nModalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModalService,\n  factory: ModalService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","ModalService","constructor","visible$","open","next","close","isVisible","getValue","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\modal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private visible$ = new BehaviorSubject<boolean>(true);\n\n  constructor() { }\n\n  open() {\n    this.visible$.next(true);\n  }\n\n  close() {\n    this.visible$.next(false);\n  }\n\n  isVisible(): boolean {\n    return this.visible$.getValue();\n  }\n}\n"],"mappings":"AACA,SAAQA,eAAe,QAAO,MAAM;;AAKpC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAFQ,KAAAC,QAAQ,GAAG,IAAIH,eAAe,CAAU,IAAI,CAAC;EAErC;EAEhBI,IAAIA,CAAA;IACF,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;EAC1B;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACH,QAAQ,CAACE,IAAI,CAAC,KAAK,CAAC;EAC3B;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACJ,QAAQ,CAACK,QAAQ,EAAE;EACjC;;AAhBWP,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAQ,OAAA,EAAZR,YAAY,CAAAS,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}