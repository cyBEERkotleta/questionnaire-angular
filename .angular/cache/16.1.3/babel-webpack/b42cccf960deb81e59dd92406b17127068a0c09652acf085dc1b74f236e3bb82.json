{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CheckBoxState } from \"../../additional/CheckBoxState\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class CheckboxComponent {\n  constructor() {\n    this.itemSelection = new EventEmitter();\n    this.form = new FormGroup({\n      check: new FormControl(false)\n    });\n  }\n  selectionChanged() {\n    let active = this.form.value.check;\n    let checkBoxState = new CheckBoxState(this.text, active);\n    this.itemSelection.emit(checkBoxState);\n  }\n}\nCheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) {\n  return new (t || CheckboxComponent)();\n};\nCheckboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckboxComponent,\n  selectors: [[\"app-checkbox\"]],\n  inputs: {\n    text: \"text\"\n  },\n  outputs: {\n    itemSelection: \"itemSelection\"\n  },\n  decls: 3,\n  vars: 4,\n  consts: [[\"type\", \"checkbox\", 3, \"name\", \"formControl\", \"value\", \"click\"], [1, \"text-black\", \"fs-6\", \"pl-2\"]],\n  template: function CheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"click\", function CheckboxComponent_Template_input_click_0_listener() {\n        return ctx.selectionChanged();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"name\", ctx.text);\n      i0.ɵɵproperty(\"formControl\", ctx.form.controls.check)(\"value\", ctx.form.controls.check.getRawValue());\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.text);\n    }\n  },\n  dependencies: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","CheckBoxState","FormControl","FormGroup","CheckboxComponent","constructor","itemSelection","form","check","selectionChanged","active","value","checkBoxState","text","emit","selectors","inputs","outputs","decls","vars","consts","template","CheckboxComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","CheckboxComponent_Template_input_click_0_listener","ɵɵelementEnd","ɵɵtext","ɵɵpropertyInterpolate","ɵɵproperty","controls","getRawValue","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\checkbox\\checkbox.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\checkbox\\checkbox.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {CheckBoxState} from \"../../additional/CheckBoxState\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.css']\n})\nexport class CheckboxComponent {\n  @Input() text: string;\n\n  @Output() itemSelection = new EventEmitter<CheckBoxState>();\n\n  form = new FormGroup({\n    check: new FormControl<boolean>(false)\n  })\n\n  selectionChanged() {\n    let active = this.form.value.check;\n    let checkBoxState = new CheckBoxState(this.text, active);\n    this.itemSelection.emit(checkBoxState);\n  }\n}\n","<input\n  type=\"checkbox\"\n  name=\"{{text}}\"\n  [formControl]=\"form.controls.check\"\n  [value]=\"form.controls.check.getRawValue()\"\n  (click)=\"selectionChanged()\"\n/>\n<span class=\"text-black fs-6 pl-2\">{{text}}</span>\n"],"mappings":"AAAA,SAAmBA,YAAY,QAAsB,eAAe;AACpE,SAAQC,aAAa,QAAO,gCAAgC;AAC5D,SAAQC,WAAW,EAAEC,SAAS,QAAO,gBAAgB;;;AAOrD,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAQY,KAAAC,aAAa,GAAG,IAAIN,YAAY,EAAiB;IAE3D,KAAAO,IAAI,GAAG,IAAIJ,SAAS,CAAC;MACnBK,KAAK,EAAE,IAAIN,WAAW,CAAU,KAAK;KACtC,CAAC;;EAEFO,gBAAgBA,CAAA;IACd,IAAIC,MAAM,GAAG,IAAI,CAACH,IAAI,CAACI,KAAK,CAACH,KAAK;IAClC,IAAII,aAAa,GAAG,IAAIX,aAAa,CAAC,IAAI,CAACY,IAAI,EAAEH,MAAM,CAAC;IACxD,IAAI,CAACJ,aAAa,CAACQ,IAAI,CAACF,aAAa,CAAC;EACxC;;AAbWR,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;QAAjBA,iBAAiB;EAAAW,SAAA;EAAAC,MAAA;IAAAH,IAAA;EAAA;EAAAI,OAAA;IAAAX,aAAA;EAAA;EAAAY,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT9BE,EAAA,CAAAC,cAAA,eAME;MADAD,EAAA,CAAAE,UAAA,mBAAAC,kDAAA;QAAA,OAASJ,GAAA,CAAAf,gBAAA,EAAkB;MAAA,EAAC;MAL9BgB,EAAA,CAAAI,YAAA,EAME;MACFJ,EAAA,CAAAC,cAAA,cAAmC;MAAAD,EAAA,CAAAK,MAAA,GAAQ;MAAAL,EAAA,CAAAI,YAAA,EAAO;;;MALhDJ,EAAA,CAAAM,qBAAA,SAAAP,GAAA,CAAAX,IAAA,CAAe;MACfY,EAAA,CAAAO,UAAA,gBAAAR,GAAA,CAAAjB,IAAA,CAAA0B,QAAA,CAAAzB,KAAA,CAAmC,UAAAgB,GAAA,CAAAjB,IAAA,CAAA0B,QAAA,CAAAzB,KAAA,CAAA0B,WAAA;MAIFT,EAAA,CAAAU,SAAA,GAAQ;MAARV,EAAA,CAAAW,iBAAA,CAAAZ,GAAA,CAAAX,IAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}