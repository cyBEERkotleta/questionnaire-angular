{"ast":null,"code":"import { delay } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get('http://localhost:8080/users').pipe(delay(2000), catchError(this.errorHandler));\n  }\n  errorHandler(error) {}\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["delay","UserService","constructor","http","getAll","get","pipe","catchError","errorHandler","error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\users.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\r\nimport {delay, Observable} from \"rxjs\";\r\nimport {User} from \"../entity/User\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private http: HttpClient;\r\n\r\n  constructor(http: HttpClient) {\r\n    this.http = http;\r\n  }\r\n\r\n  getAll() : Observable<User[]> {\r\n    return this.http.get<User[]>('http://localhost:8080/users')\r\n      .pipe(\r\n        delay(2000),\r\n        catchError(this.errorHandler)\r\n      )\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    \r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAQA,KAAK,QAAmB,MAAM;;;AAMtC,OAAM,MAAOC,WAAW;EAGtBC,YAAYC,IAAgB;IAC1B,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,6BAA6B,CAAC,CACxDC,IAAI,CACHN,KAAK,CAAC,IAAI,CAAC,EACXO,UAAU,CAAC,IAAI,CAACC,YAAY,CAAC,CAC9B;EACL;EAEQA,YAAYA,CAACC,KAAwB,GAE7C;;AAjBWR,WAAW,C;mBAAXA,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXZ,WAAW,C;SAAXA,WAAW;EAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}