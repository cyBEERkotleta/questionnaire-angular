{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction CheckboxGroupComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"app-checkbox\", 5);\n    i0.ɵɵlistener(\"itemSelection\", function CheckboxGroupComponent_div_4_Template_app_checkbox_itemSelection_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", item_r1);\n  }\n}\nexport class CheckboxGroupComponent {\n  constructor() {\n    this.showError = false;\n  }\n  onChange(checkBoxState) {\n    this.removeStateFromSelectedOptions(checkBoxState);\n    if (checkBoxState.active) this.selectedOptions.push(checkBoxState);\n    this.formElement.setValue(this.selectedOptions);\n  }\n  removeStateFromSelectedOptions(checkBoxState) {\n    this.selectedOptions = this.selectedOptions.filter(opt => opt.text != checkBoxState.text);\n  }\n}\nCheckboxGroupComponent.ɵfac = function CheckboxGroupComponent_Factory(t) {\n  return new (t || CheckboxGroupComponent)();\n};\nCheckboxGroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckboxGroupComponent,\n  selectors: [[\"app-checkbox-group\"]],\n  inputs: {\n    fieldName: \"fieldName\",\n    formElement: \"formElement\",\n    showError: \"showError\",\n    optionNames: \"optionNames\"\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"pt-3\"], [1, \"border-1\", \"border-gray-500\", \"rounded\", \"block\"], [3, \"fieldName\", \"required\"], [\"class\", \"flex items-center flex-row gap-x-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"flex-row\", \"gap-x-1\"], [3, \"text\", \"itemSelection\"]],\n  template: function CheckboxGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"fieldset\", 1)(2, \"legend\");\n      i0.ɵɵelement(3, \"app-field-name\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, CheckboxGroupComponent_div_4_Template, 3, 1, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"fieldName\", ctx.fieldName)(\"required\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.optionNames);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","CheckboxGroupComponent_div_4_Template_app_checkbox_itemSelection_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onChange","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","item_r1","CheckboxGroupComponent","constructor","showError","checkBoxState","removeStateFromSelectedOptions","active","selectedOptions","push","formElement","setValue","filter","opt","text","selectors","inputs","fieldName","optionNames","decls","vars","consts","template","CheckboxGroupComponent_Template","rf","ctx","ɵɵtemplate","CheckboxGroupComponent_div_4_Template"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\checkbox-group\\checkbox-group.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\checkbox-group\\checkbox-group.component.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {CheckBoxState} from \"../../additional/CheckBoxState\";\n\n@Component({\n  selector: 'app-checkbox-group',\n  templateUrl: './checkbox-group.component.html',\n  styleUrls: ['./checkbox-group.component.css']\n})\nexport class CheckboxGroupComponent {\n  @Input() fieldName: string;\n  @Input() formElement: FormControl<CheckBoxState[]>;\n  @Input() showError: boolean = false;\n\n  @Input() optionNames: string[];\n\n  selectedOptions: CheckBoxState[];\n\n  onChange(checkBoxState: CheckBoxState) {\n    this.removeStateFromSelectedOptions(checkBoxState);\n    if (checkBoxState.active)\n      this.selectedOptions.push(checkBoxState);\n\n    this.formElement.setValue(this.selectedOptions);\n  }\n\n  private removeStateFromSelectedOptions(checkBoxState: CheckBoxState) {\n    this.selectedOptions = this.selectedOptions\n      .filter(opt => opt.text != checkBoxState.text);\n  }\n}\n","<div class=\"pt-3\">\n  <fieldset class=\"border-1 border-gray-500 rounded block\">\n    <legend>\n      <app-field-name\n        [fieldName]=\"fieldName\"\n        [required]=\"false\"\n      ></app-field-name>\n    </legend>\n\n    <div class=\"flex items-center flex-row gap-x-1\"\n         *ngFor=\"let item of optionNames\"\n    >\n      <app-checkbox\n        [text]=\"item\"\n        (itemSelection)=\"onChange($event)\"\n      ></app-checkbox>\n      <br/>\n    </div>\n  </fieldset>\n</div>\n"],"mappings":";;;;ICSIA,EAAA,CAAAC,cAAA,aAEC;IAGGD,EAAA,CAAAE,UAAA,2BAAAC,4EAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAAiBR,EAAA,CAAAS,WAAA,CAAAF,MAAA,CAAAG,QAAA,CAAAN,MAAA,CAAgB;IAAA,EAAC;IACnCJ,EAAA,CAAAW,YAAA,EAAe;IAChBX,EAAA,CAAAY,SAAA,SAAK;IACPZ,EAAA,CAAAW,YAAA,EAAM;;;;IAJFX,EAAA,CAAAa,SAAA,GAAa;IAAbb,EAAA,CAAAc,UAAA,SAAAC,OAAA,CAAa;;;ADJrB,OAAM,MAAOC,sBAAsB;EALnCC,YAAA;IAQW,KAAAC,SAAS,GAAY,KAAK;;EAMnCR,QAAQA,CAACS,aAA4B;IACnC,IAAI,CAACC,8BAA8B,CAACD,aAAa,CAAC;IAClD,IAAIA,aAAa,CAACE,MAAM,EACtB,IAAI,CAACC,eAAe,CAACC,IAAI,CAACJ,aAAa,CAAC;IAE1C,IAAI,CAACK,WAAW,CAACC,QAAQ,CAAC,IAAI,CAACH,eAAe,CAAC;EACjD;EAEQF,8BAA8BA,CAACD,aAA4B;IACjE,IAAI,CAACG,eAAe,GAAG,IAAI,CAACA,eAAe,CACxCI,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,IAAIT,aAAa,CAACS,IAAI,CAAC;EAClD;;AApBWZ,sBAAsB,C;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB,C;QAAtBA,sBAAsB;EAAAa,SAAA;EAAAC,MAAA;IAAAC,SAAA;IAAAP,WAAA;IAAAN,SAAA;IAAAc,WAAA;EAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTnCtC,EAAA,CAAAC,cAAA,aAAkB;MAGZD,EAAA,CAAAY,SAAA,wBAGkB;MACpBZ,EAAA,CAAAW,YAAA,EAAS;MAETX,EAAA,CAAAwC,UAAA,IAAAC,qCAAA,iBAQM;MACRzC,EAAA,CAAAW,YAAA,EAAW;;;MAdLX,EAAA,CAAAa,SAAA,GAAuB;MAAvBb,EAAA,CAAAc,UAAA,cAAAyB,GAAA,CAAAR,SAAA,CAAuB;MAML/B,EAAA,CAAAa,SAAA,GAAc;MAAdb,EAAA,CAAAc,UAAA,YAAAyB,GAAA,CAAAP,WAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}