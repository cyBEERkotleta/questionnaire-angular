{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/gender.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../radio-button-group/radio-button-group.component\";\nimport * as i4 from \"../field-validator/field-validator.component\";\nfunction ChoiceGenderComponent_app_radio_button_group_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-radio-button-group\", 3);\n    i0.ɵɵlistener(\"itemSelection\", function ChoiceGenderComponent_app_radio_button_group_1_Template_app_radio_button_group_itemSelection_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r0.fieldName)(\"required\", ctx_r0.isFieldRequired())(\"objects\", ctx_r0.genders)(\"selected\", ctx_r0.selectedGender);\n  }\n}\nexport let ChoiceGenderComponent = /*#__PURE__*/(() => {\n  class ChoiceGenderComponent {\n    constructor(genderService) {\n      this.showError = false;\n      this.listenerToValueChangeReady = new EventEmitter();\n      this.gendersLoaded = false;\n      this.genderService = genderService;\n    }\n    ngOnInit() {\n      this.subscription1 = this.genderService.getAll().subscribe(genders => {\n        this.genders = genders;\n        this.gendersLoaded = true;\n      });\n      this.subscription2 = this.formElement.valueChanges.subscribe(gender => {\n        this.selectedGender = gender;\n      });\n      this.listenerToValueChangeReady.emit();\n    }\n    ngOnDestroy() {\n      if (this.subscription1) this.subscription1.unsubscribe();\n      if (this.subscription2) this.subscription2.unsubscribe();\n    }\n    onChange(item) {\n      this.selectedGender = item;\n      this.formElement.setValue(this.selectedGender);\n    }\n    isFieldRequired() {\n      return this.formElement.hasValidator(Validators.required);\n    }\n  }\n  ChoiceGenderComponent.ɵfac = function ChoiceGenderComponent_Factory(t) {\n    return new (t || ChoiceGenderComponent)(i0.ɵɵdirectiveInject(i1.GenderService));\n  };\n  ChoiceGenderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChoiceGenderComponent,\n    selectors: [[\"app-choice-gender\"]],\n    inputs: {\n      formElement: \"formElement\",\n      fieldName: \"fieldName\",\n      showError: \"showError\"\n    },\n    outputs: {\n      listenerToValueChangeReady: \"listenerToValueChangeReady\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[1, \"pt-3\"], [3, \"label\", \"required\", \"objects\", \"selected\", \"itemSelection\", 4, \"ngIf\"], [3, \"formElement\", \"showError\"], [3, \"label\", \"required\", \"objects\", \"selected\", \"itemSelection\"]],\n    template: function ChoiceGenderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ChoiceGenderComponent_app_radio_button_group_1_Template, 1, 4, \"app-radio-button-group\", 1);\n        i0.ɵɵelement(2, \"app-field-validator\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.gendersLoaded);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.formElement)(\"showError\", ctx.showError);\n      }\n    },\n    dependencies: [i2.NgIf, i3.RadioButtonGroupComponent, i4.FieldValidatorComponent]\n  });\n  return ChoiceGenderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}