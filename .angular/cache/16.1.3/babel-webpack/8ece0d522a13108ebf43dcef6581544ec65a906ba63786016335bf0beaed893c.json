{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let FormsPageComponent = class FormsPageComponent {\n  constructor(formService, topicService, fieldService, activatedRoute, modalCreateService, modalEditService, modalDeleteService) {\n    this.loading = false;\n    this.formsLoaded = false;\n    this.topicLoaded = false;\n    this.fieldCountsLoaded = false;\n    this.term = '';\n    this.formService = formService;\n    this.topicService = topicService;\n    this.fieldService = fieldService;\n    this.activatedRoute = activatedRoute;\n    this.modalCreateService = modalCreateService;\n    this.modalEditService = modalEditService;\n    this.modalDeleteService = modalDeleteService;\n  }\n  ngOnInit() {\n    this.subscription1 = this.activatedRoute.params.subscribe(params => {\n      let topicId = params['topic_id'];\n      this.loading = true;\n      this.subscription2 = this.topicService.getTopicById(topicId).subscribe(result => {\n        this.topicLoaded = true;\n        this.topic = result;\n        this.checkLoading();\n      });\n      this.subscription3 = this.formService.getFormsByTopicId(topicId).subscribe(result => {\n        this.forms = result;\n        this.formsLoaded = true;\n        this.checkLoading();\n      });\n      this.subscription4 = this.fieldService.getFieldCountsOfTopicForms(topicId).subscribe(result => {\n        this.fieldCounts = result;\n        this.fieldCountsLoaded = true;\n        this.checkLoading();\n      });\n    });\n  }\n  getTopicName() {\n    if (this.topic) {\n      return '\"' + this.topic.name + '\"';\n    }\n    return '';\n  }\n  ngOnDestroy() {\n    if (this.subscription1) this.subscription1.unsubscribe();\n    if (this.subscription2) this.subscription2.unsubscribe();\n    if (this.subscription3) this.subscription3.unsubscribe();\n    if (this.subscription4) this.subscription4.unsubscribe();\n  }\n  checkLoading() {\n    if (this.formsLoaded && this.topicLoaded && this.fieldCountsLoaded) this.loading = false;\n  }\n};\nFormsPageComponent = __decorate([Component({\n  selector: 'app-forms-page',\n  templateUrl: './forms-page.component.html',\n  styleUrls: ['./forms-page.component.css']\n})], FormsPageComponent);","map":{"version":3,"names":["Component","FormsPageComponent","constructor","formService","topicService","fieldService","activatedRoute","modalCreateService","modalEditService","modalDeleteService","loading","formsLoaded","topicLoaded","fieldCountsLoaded","term","ngOnInit","subscription1","params","subscribe","topicId","subscription2","getTopicById","result","topic","checkLoading","subscription3","getFormsByTopicId","forms","subscription4","getFieldCountsOfTopicForms","fieldCounts","getTopicName","name","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\pages\\forms-page\\forms-page.component.ts"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ModalCreateWindowService} from \"../../service/modal-create-window.service\";\r\nimport {FormService} from \"../../service/form.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {TopicService} from \"../../service/topic.service\";\r\nimport {Topic} from \"../../entity/Topic\";\r\nimport {Form} from \"../../entity/Form\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {FieldService} from \"../../service/field.service\";\r\nimport {ModalEditWindowService} from \"../../service/modal-edit-window.service\";\r\nimport {ModalDeleteWindowService} from \"../../service/modal-delete-window.service\";\r\nimport {ModalDeleteWindowComponent} from \"../../components/modal-delete-window/modal-delete-window.component\";\r\n\r\n@Component({\r\n  selector: 'app-forms-page',\r\n  templateUrl: './forms-page.component.html',\r\n  styleUrls: ['./forms-page.component.css']\r\n})\r\nexport class FormsPageComponent implements OnInit, OnDestroy {\r\n  private activatedRoute: ActivatedRoute;\r\n\r\n  loading = false;\r\n  private formsLoaded = false;\r\n  private topicLoaded = false;\r\n  private fieldCountsLoaded = false;\r\n\r\n  term: string = '';\r\n\r\n  formService: FormService;\r\n  topicService: TopicService;\r\n  private fieldService: FieldService;\r\n\r\n  modalCreateService: ModalCreateWindowService;\r\n  modalEditService: ModalEditWindowService;\r\n  modalDeleteService: ModalDeleteWindowService;\r\n\r\n  topic: Topic;\r\n  forms: Form[];\r\n  fieldCounts: number[];\r\n\r\n  private subscription1: Subscription;\r\n  private subscription2: Subscription;\r\n  private subscription3: Subscription;\r\n  private subscription4: Subscription;\r\n\r\n  constructor(formService: FormService,\r\n              topicService: TopicService,\r\n              fieldService: FieldService,\r\n              activatedRoute: ActivatedRoute,\r\n\r\n              modalCreateService: ModalCreateWindowService,\r\n              modalEditService: ModalEditWindowService,\r\n              modalDeleteService: ModalDeleteWindowService) {\r\n    this.formService = formService;\r\n    this.topicService = topicService;\r\n    this.fieldService = fieldService;\r\n    this.activatedRoute = activatedRoute;\r\n\r\n    this.modalCreateService = modalCreateService;\r\n    this.modalEditService = modalEditService;\r\n    this.modalDeleteService = modalDeleteService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription1 = this.activatedRoute.params.subscribe(params => {\r\n      let topicId = params['topic_id'];\r\n\r\n      this.loading = true;\r\n\r\n      this.subscription2 = this.topicService.getTopicById(topicId).subscribe(result => {\r\n        this.topicLoaded = true;\r\n        this.topic = result;\r\n        this.checkLoading();\r\n      });\r\n\r\n      this.subscription3 = this.formService.getFormsByTopicId(topicId)\r\n        .subscribe(result => {\r\n          this.forms = result;\r\n          this.formsLoaded = true;\r\n          this.checkLoading();\r\n        });\r\n\r\n      this.subscription4 = this.fieldService.getFieldCountsOfTopicForms(topicId)\r\n        .subscribe(result => {\r\n          this.fieldCounts = result;\r\n          this.fieldCountsLoaded = true;\r\n          this.checkLoading();\r\n        });\r\n    });\r\n  }\r\n\r\n  getTopicName() {\r\n    if (this.topic) {\r\n      return '\"' + this.topic.name + '\"';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription1)\r\n      this.subscription1.unsubscribe();\r\n    if (this.subscription2)\r\n      this.subscription2.unsubscribe();\r\n    if (this.subscription3)\r\n      this.subscription3.unsubscribe();\r\n    if (this.subscription4)\r\n      this.subscription4.unsubscribe();\r\n  }\r\n\r\n  private checkLoading() {\r\n    if (this.formsLoaded && this.topicLoaded && this.fieldCountsLoaded)\r\n      this.loading = false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}