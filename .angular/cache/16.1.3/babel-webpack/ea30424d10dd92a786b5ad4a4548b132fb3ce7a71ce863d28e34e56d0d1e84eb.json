{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../service/url.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../little-components/error-paragraph/error-paragraph.component\";\nimport * as i7 from \"../../little-components/middle-control/middle-control.component\";\nimport * as i8 from \"../../little-components/text-field-password/text-field-password.component\";\nfunction ChangePasswordComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nfunction ChangePasswordComponent_app_middle_control_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-middle-control\")(1, \"span\", 9);\n    i0.ɵɵtext(2, \" \\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F... \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(userService, router, urlService) {\n      this.showAllErrors = false;\n      this.globalError = '';\n      this.changingPasswordProcess = false;\n      this.form = new FormGroup({\n        oldPassword: new FormControl('', [Validators.required]),\n        newPassword: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(30)]),\n        confirmNewPassword: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(30)])\n      });\n      this.userService = userService;\n      this.router = router;\n      this.urlService = urlService;\n    }\n    ngOnDestroy() {\n      if (this.subscription) this.subscription.unsubscribe();\n    }\n    isGlobalErrorSet() {\n      return this.globalError != '';\n    }\n    submit() {\n      if (this.anyErrorExists()) return;\n      this.changePassword();\n    }\n    anyErrorExists() {\n      this.resetGlobalError();\n      if (this.isAnyErrorInFields()) {\n        this.showAllErrors = true;\n        return true;\n      }\n      return false;\n    }\n    changePassword() {\n      let oldPassword = this.getOldPasswordFromField();\n      let newPassword = this.getNewPasswordFromField();\n      this.changingPasswordProcess = true;\n      this.subscription = this.userService.changePassword(oldPassword, newPassword).subscribe(result => {\n        this.changingPasswordProcess = false;\n        console.log(result);\n        if (result.success) {\n          this.doTransferToSuccessPage();\n        } else {\n          this.globalError = result.message;\n        }\n      });\n    }\n    resetGlobalError() {\n      this.globalError = '';\n    }\n    getOldPasswordFromField() {\n      return this.form.controls.oldPassword.getRawValue();\n    }\n    getNewPasswordFromField() {\n      return this.form.controls.newPassword.getRawValue();\n    }\n    getConfirmNewPasswordFromField() {\n      return this.form.controls.confirmNewPassword.getRawValue();\n    }\n    isAnyErrorInFields() {\n      let newPassword = this.getNewPasswordFromField();\n      let confirmNewPassword = this.getConfirmNewPasswordFromField();\n      if (newPassword != confirmNewPassword) {\n        this.globalError = 'Новый пароль и его подтверждение не совпадают';\n        return true;\n      }\n      return this.doesControlHaveError(this.form.controls.oldPassword) || this.doesControlHaveError(this.form.controls.newPassword) || this.doesControlHaveError(this.form.controls.confirmNewPassword);\n    }\n    doesControlHaveError(formControl) {\n      return formControl.errors != null;\n    }\n    doTransferToSuccessPage() {\n      this.router.navigate(['/successful-password-change']);\n    }\n    doTransferToLastPage() {\n      this.router.navigate([this.urlService.getLastPage()]);\n    }\n  }\n  ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UrlService));\n  };\n  ChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 12,\n    vars: 9,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [4, \"ngIf\"], [\"fieldName\", \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [\"type\", \"button\", 1, \"button-back\", 3, \"click\"], [3, \"errorMessage\"], [1, \"text-blue-500\", \"fs-6\", \"fw-bold\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtemplate(1, ChangePasswordComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n        i0.ɵɵtemplate(2, ChangePasswordComponent_app_middle_control_2_Template, 3, 0, \"app-middle-control\", 2);\n        i0.ɵɵelement(3, \"app-text-field-password\", 3)(4, \"app-text-field-password\", 4)(5, \"app-text-field-password\", 5)(6, \"br\");\n        i0.ɵɵelementStart(7, \"app-middle-control\")(8, \"button\", 6);\n        i0.ɵɵtext(9, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_10_listener() {\n          return ctx.doTransferToLastPage();\n        });\n        i0.ɵɵtext(11, \"\\u041D\\u0430\\u0437\\u0430\\u0434\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.changingPasswordProcess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.oldPassword)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.newPassword)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.confirmNewPassword)(\"showError\", ctx.showAllErrors);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.ErrorParagraphComponent, i7.MiddleControlComponent, i8.TextFieldPasswordComponent]\n  });\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}