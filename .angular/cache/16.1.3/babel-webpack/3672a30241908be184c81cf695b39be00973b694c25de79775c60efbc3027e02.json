{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport let RoleService = /*#__PURE__*/(() => {\n  class RoleService {\n    constructor(http, errorService) {\n      this.http = http;\n      this.errorService = errorService;\n      this.initializeRoles();\n    }\n    areRolesEqual(role1, role2) {\n      if (!this.isRolePresent(role1) || !this.isRolePresent(role2)) return false;\n      return role1.id == role2.id && role1.name == role2.name && role1.shownName == role2.shownName;\n    }\n    isRolePresent(role) {\n      return !!role && !!role.id && !!role.name && !!role.shownName;\n    }\n    initializeRoles() {\n      const MEMBER_ROLE_ID = 1;\n      this.getRoleById(MEMBER_ROLE_ID).subscribe(result => {\n        this.memberRole = result;\n      });\n      const ADMIN_ROLE_ID = 2;\n      this.getRoleById(ADMIN_ROLE_ID).subscribe(result => {\n        this.adminRole = result;\n      });\n    }\n    getRoleById(id) {\n      let path = 'http://localhost:8090/user_roles/' + id;\n      return this.http.get(path).pipe(catchError(this.errorHandler.bind(this)));\n    }\n    errorHandler(error) {\n      this.errorService.handle(error.message);\n      return throwError(() => error.message);\n    }\n  }\n  RoleService.ɵfac = function RoleService_Factory(t) {\n    return new (t || RoleService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n  RoleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoleService,\n    factory: RoleService.ɵfac,\n    providedIn: 'root'\n  });\n  return RoleService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}