{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SessionService {\n  constructor() {\n    this.TOKEN_KEY = 'token';\n    this.TOKEN_BY_DEFAULT = 'no_token';\n  }\n  ping() {\n    console.log('sessionStorage token=' + sessionStorage.getItem(this.TOKEN_KEY));\n    console.log('localStorage token=' + localStorage.getItem(this.TOKEN_KEY));\n  }\n  saveTokenToLocalStorage(token) {\n    localStorage.setItem(this.TOKEN_KEY, token);\n    console.log('method saveTokenToLocalStorage');\n    this.ping();\n  }\n  saveTokenToSessionStorage(token) {\n    sessionStorage.setItem(this.TOKEN_KEY, token);\n    console.log('method saveTokenToSessionStorage');\n    this.ping();\n  }\n  updateTokenWhereItWasSet(token) {\n    console.log('method updateTokenWhereItWasSet');\n    this.ping();\n    if (this.getTokenFromSessionStorage() != this.TOKEN_BY_DEFAULT) this.saveTokenToSessionStorage(token);\n    if (this.getTokenFromLocalStorage() != this.TOKEN_BY_DEFAULT) this.saveTokenToLocalStorage(token);\n    this.ping();\n  }\n  getTokenFromLocalStorage() {\n    console.log('method getTokenFromLocalStorage');\n    this.ping();\n    let token = localStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n  getTokenFromSessionStorage() {\n    this.ping();\n    let token = sessionStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n  getToken() {\n    this.ping();\n    let token = this.getTokenFromSessionStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      console.log('token: ' + token);\n      return token;\n    }\n    token = this.getTokenFromLocalStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      this.saveTokenToSessionStorage(token);\n      console.log('token: ' + token);\n      return token;\n    }\n    console.log('token: ' + token);\n    return this.TOKEN_BY_DEFAULT;\n  }\n  removeTokenFromLocalStorage() {\n    this.ping();\n    localStorage.removeItem(this.TOKEN_KEY);\n    this.ping();\n  }\n  removeTokenFromSessionStorage() {\n    this.ping();\n    sessionStorage.removeItem(this.TOKEN_KEY);\n    this.ping();\n  }\n  removeTokenFromEverywhere() {\n    this.removeTokenFromSessionStorage();\n    this.removeTokenFromLocalStorage();\n  }\n}\nSessionService.ɵfac = function SessionService_Factory(t) {\n  return new (t || SessionService)();\n};\nSessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionService,\n  factory: SessionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SessionService","constructor","TOKEN_KEY","TOKEN_BY_DEFAULT","ping","console","log","sessionStorage","getItem","localStorage","saveTokenToLocalStorage","token","setItem","saveTokenToSessionStorage","updateTokenWhereItWasSet","getTokenFromSessionStorage","getTokenFromLocalStorage","getToken","removeTokenFromLocalStorage","removeItem","removeTokenFromSessionStorage","removeTokenFromEverywhere","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  private TOKEN_KEY = 'token';\n  private TOKEN_BY_DEFAULT = 'no_token';\n\n  ping() {\n    console.log('sessionStorage token=' + sessionStorage.getItem(this.TOKEN_KEY));\n    console.log('localStorage token=' + localStorage.getItem(this.TOKEN_KEY));\n  }\n\n  saveTokenToLocalStorage(token: string){\n    localStorage.setItem(this.TOKEN_KEY, token);\n\n    console.log('method saveTokenToLocalStorage');\n    this.ping();\n  }\n\n  saveTokenToSessionStorage(token: string) {\n    sessionStorage.setItem(this.TOKEN_KEY, token);\n\n    console.log('method saveTokenToSessionStorage');\n    this.ping();\n  }\n\n  updateTokenWhereItWasSet(token: string) {\n    console.log('method updateTokenWhereItWasSet');\n    this.ping();\n\n    if (this.getTokenFromSessionStorage() != this.TOKEN_BY_DEFAULT)\n      this.saveTokenToSessionStorage(token);\n    if (this.getTokenFromLocalStorage() != this.TOKEN_BY_DEFAULT)\n      this.saveTokenToLocalStorage(token);\n\n    this.ping();\n  }\n\n  getTokenFromLocalStorage() {\n    console.log('method getTokenFromLocalStorage');\n    this.ping();\n\n    let token = localStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n\n  getTokenFromSessionStorage() {\n    this.ping();\n\n    let token = sessionStorage.getItem(this.TOKEN_KEY);\n    return token ? token : this.TOKEN_BY_DEFAULT;\n  }\n\n  getToken() {\n    this.ping();\n\n    let token = this.getTokenFromSessionStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      console.log('token: ' + token);\n      return token;\n    }\n    token = this.getTokenFromLocalStorage();\n    if (token && token != this.TOKEN_BY_DEFAULT) {\n      this.saveTokenToSessionStorage(token);\n      console.log('token: ' + token);\n      return token;\n    }\n    console.log('token: ' + token);\n    return this.TOKEN_BY_DEFAULT;\n  }\n\n  removeTokenFromLocalStorage(){\n    this.ping();\n\n    localStorage.removeItem(this.TOKEN_KEY);\n\n    this.ping();\n  }\n\n  removeTokenFromSessionStorage(){\n    this.ping();\n\n    sessionStorage.removeItem(this.TOKEN_KEY);\n\n    this.ping();\n  }\n\n  removeTokenFromEverywhere(){\n    this.removeTokenFromSessionStorage();\n    this.removeTokenFromLocalStorage();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}