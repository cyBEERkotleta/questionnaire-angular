{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/field.service\";\nimport * as i2 from \"../../service/answered-form.service\";\nexport class QuestionnaireComponent {\n  constructor(fieldService, answeredFormService) {\n    this.fieldService = fieldService;\n    this.answeredFormService = answeredFormService;\n  }\n  ngOnInit() {\n    this.subscriptionFields = this.fieldService.getFieldsByFormId(this.formId).subscribe(result => {\n      this.fields = result;\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscriptionFields) this.subscriptionFields.unsubscribe();\n    if (this.subscriptionSaveAnswers) this.subscriptionSaveAnswers.unsubscribe();\n  }\n}\nQuestionnaireComponent.ɵfac = function QuestionnaireComponent_Factory(t) {\n  return new (t || QuestionnaireComponent)(i0.ɵɵdirectiveInject(i1.FieldService), i0.ɵɵdirectiveInject(i2.AnsweredFormService));\n};\nQuestionnaireComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionnaireComponent,\n  selectors: [[\"app-questionnaire\"]],\n  inputs: {\n    formId: \"formId\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function QuestionnaireComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"questionnaire works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["QuestionnaireComponent","constructor","fieldService","answeredFormService","ngOnInit","subscriptionFields","getFieldsByFormId","formId","subscribe","result","fields","ngOnDestroy","unsubscribe","subscriptionSaveAnswers","i0","ɵɵdirectiveInject","i1","FieldService","i2","AnsweredFormService","selectors","inputs","decls","vars","template","QuestionnaireComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\questionnaire\\questionnaire.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\questionnaire\\questionnaire.component.html"],"sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FieldService} from \"../../service/field.service\";\nimport {AnsweredFormService} from \"../../service/answered-form.service\";\nimport {Field} from \"../../entity/Field\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.css']\n})\nexport class QuestionnaireComponent implements OnInit, OnDestroy {\n  @Input() formId: bigint;\n\n  private fieldService: FieldService;\n  private answeredFormService: AnsweredFormService;\n\n  fields: Field[];\n\n  private subscriptionFields: Subscription;\n  private subscriptionSaveAnswers: Subscription;\n\n  constructor(fieldService: FieldService,\n              answeredFormService: AnsweredFormService) {\n    this.fieldService = fieldService;\n    this.answeredFormService = answeredFormService;\n  }\n\n\n  ngOnInit() {\n    this.subscriptionFields = this.fieldService.getFieldsByFormId(this.formId)\n      .subscribe(result => {\n        this.fields = result;\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptionFields)\n      this.subscriptionFields.unsubscribe();\n    if (this.subscriptionSaveAnswers)\n      this.subscriptionSaveAnswers.unsubscribe();\n  }\n}\n","<p>questionnaire works!</p>\n"],"mappings":";;;AAWA,OAAM,MAAOA,sBAAsB;EAWjCC,YAAYC,YAA0B,EAC1BC,mBAAwC;IAClD,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;EAChD;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACH,YAAY,CAACI,iBAAiB,CAAC,IAAI,CAACC,MAAM,CAAC,CACvEC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,MAAM,GAAGD,MAAM;IACtB,CAAC,CAAC;EACN;EAEAE,WAAWA,CAAA;IACT,IAAI,IAAI,CAACN,kBAAkB,EACzB,IAAI,CAACA,kBAAkB,CAACO,WAAW,EAAE;IACvC,IAAI,IAAI,CAACC,uBAAuB,EAC9B,IAAI,CAACA,uBAAuB,CAACD,WAAW,EAAE;EAC9C;;AA9BWZ,sBAAsB,C;mBAAtBA,sBAAsB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;AAAtBnB,sBAAsB,C;QAAtBA,sBAAsB;EAAAoB,SAAA;EAAAC,MAAA;IAAAd,MAAA;EAAA;EAAAe,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXnCZ,EAAA,CAAAc,cAAA,QAAG;MAAAd,EAAA,CAAAe,MAAA,2BAAoB;MAAAf,EAAA,CAAAgB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}