{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class MailService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n  sendConfirmationEmail(user, password) {\n    const userWithPassword = {\n      user: user,\n      password: password\n    };\n    return this.http.post('http://localhost:8080/send_confirmation_email', userWithPassword).pipe(catchError(this.errorHandler.bind(this)));\n  }\n  sendPasswordChangeNotification(email) {\n    return this.http.post('http://localhost:8080/send_notification_password_changed', email).pipe(catchError(this.errorHandler.bind(this)));\n  }\n  sendPasswordRestoration(email) {\n    return this.http.post('http://localhost:8080/send_password_restoration', email).pipe(catchError(this.errorHandler.bind(this)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n}\nMailService.ɵfac = function MailService_Factory(t) {\n  return new (t || MailService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nMailService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MailService,\n  factory: MailService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","throwError","MailService","constructor","http","errorService","sendConfirmationEmail","user","password","userWithPassword","post","pipe","errorHandler","bind","sendPasswordChangeNotification","email","sendPasswordRestoration","error","handle","message","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\mail.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {User} from \"../entity/User\";\nimport {catchError, Observable, throwError} from \"rxjs\";\nimport {ErrorService} from \"./error.service\";\nimport {RequestResult} from \"../additional/RequestResult\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n  private http: HttpClient;\n  private errorService: ErrorService;\n  constructor(http: HttpClient,\n              errorService: ErrorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n\n  sendConfirmationEmail(user: User, password: string): Observable<RequestResult> {\n    const userWithPassword = {user: user, password: password};\n    return this.http.post<RequestResult>('http://localhost:8080/send_confirmation_email', userWithPassword)\n      .pipe(\n        catchError(this.errorHandler.bind(this))\n      );\n  }\n\n  sendPasswordChangeNotification(email: string): Observable<RequestResult> {\n    return this.http.post<RequestResult>('http://localhost:8080/send_notification_password_changed', email)\n      .pipe(\n        catchError(this.errorHandler.bind(this))\n      );\n  }\n\n  sendPasswordRestoration(email: string): Observable<RequestResult> {\n    return this.http.post<RequestResult>('http://localhost:8080/send_password_restoration', email)\n      .pipe(\n        catchError(this.errorHandler.bind(this))\n      );\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n}\n"],"mappings":"AAGA,SAAQA,UAAU,EAAcC,UAAU,QAAO,MAAM;;;;AAOvD,OAAM,MAAOC,WAAW;EAGtBC,YAAYC,IAAgB,EAChBC,YAA0B;IACpC,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEAC,qBAAqBA,CAACC,IAAU,EAAEC,QAAgB;IAChD,MAAMC,gBAAgB,GAAG;MAACF,IAAI,EAAEA,IAAI;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;IACzD,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAgB,+CAA+C,EAAED,gBAAgB,CAAC,CACpGE,IAAI,CACHX,UAAU,CAAC,IAAI,CAACY,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEAC,8BAA8BA,CAACC,KAAa;IAC1C,OAAO,IAAI,CAACX,IAAI,CAACM,IAAI,CAAgB,0DAA0D,EAAEK,KAAK,CAAC,CACpGJ,IAAI,CACHX,UAAU,CAAC,IAAI,CAACY,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEAG,uBAAuBA,CAACD,KAAa;IACnC,OAAO,IAAI,CAACX,IAAI,CAACM,IAAI,CAAgB,iDAAiD,EAAEK,KAAK,CAAC,CAC3FJ,IAAI,CACHX,UAAU,CAAC,IAAI,CAACY,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEQD,YAAYA,CAACK,KAAwB;IAC3C,IAAI,CAACZ,YAAY,CAACa,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOlB,UAAU,CAAC,MAAMgB,KAAK,CAACE,OAAO,CAAC;EACxC;;AAlCWjB,WAAW,C;mBAAXA,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAXvB,WAAW,C;SAAXA,WAAW;EAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}