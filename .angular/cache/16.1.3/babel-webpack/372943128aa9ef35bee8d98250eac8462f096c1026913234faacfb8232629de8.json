{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/field.service\";\nimport * as i3 from \"../../service/form.service\";\nexport class MyFieldsPageComponent {\n  constructor(activatedRoute, fieldService, formService) {\n    this.activatedRoute = activatedRoute;\n    this.fieldService = fieldService;\n    this.formService = formService;\n  }\n  ngOnInit() {\n    this.subscriptionParams = this.activatedRoute.params.subscribe(params => {\n      let formId = params['id'];\n      this.subscriptionFields = this.fieldService.getFieldsByFormId(formId).subscribe(result => {\n        this.fields = result;\n      });\n      this.subscriptionForm = this.formService.getFormById(formId).subscribe(result => {\n        this.form = result;\n      });\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscriptionParams) this.subscriptionParams.unsubscribe();\n    if (this.subscriptionFields) this.subscriptionFields.unsubscribe();\n    if (this.subscriptionForm) this.subscriptionForm.unsubscribe();\n  }\n}\nMyFieldsPageComponent.ɵfac = function MyFieldsPageComponent_Factory(t) {\n  return new (t || MyFieldsPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FieldService), i0.ɵɵdirectiveInject(i3.FormService));\n};\nMyFieldsPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyFieldsPageComponent,\n  selectors: [[\"app-my-fields-page\"]],\n  decls: 2,\n  vars: 0,\n  template: function MyFieldsPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"my-fields-page works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["MyFieldsPageComponent","constructor","activatedRoute","fieldService","formService","ngOnInit","subscriptionParams","params","subscribe","formId","subscriptionFields","getFieldsByFormId","result","fields","subscriptionForm","getFormById","form","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","FieldService","i3","FormService","selectors","decls","vars","template","MyFieldsPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\pages\\my-fields-page\\my-fields-page.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\pages\\my-fields-page\\my-fields-page.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {Field} from \"../../entity/Field\";\nimport {FieldService} from \"../../service/field.service\";\nimport {FormService} from \"../../service/form.service\";\nimport {Form} from \"../../entity/Form\";\n\n@Component({\n  selector: 'app-my-fields-page',\n  templateUrl: './my-fields-page.component.html',\n  styleUrls: ['./my-fields-page.component.css']\n})\nexport class MyFieldsPageComponent implements OnInit, OnDestroy {\n  private activatedRoute: ActivatedRoute;\n  private fieldService: FieldService;\n  private formService: FormService;\n\n  form: Form;\n  fields: Field[];\n\n  private subscriptionParams: Subscription;\n  private subscriptionFields: Subscription;\n  private subscriptionForm: Subscription;\n\n  constructor(activatedRoute: ActivatedRoute,\n              fieldService: FieldService,\n              formService: FormService) {\n    this.activatedRoute = activatedRoute;\n    this.fieldService = fieldService;\n    this.formService = formService;\n  }\n\n  ngOnInit() {\n    this.subscriptionParams = this.activatedRoute.params\n      .subscribe(params => {\n          let formId: bigint = params['id'];\n\n          this.subscriptionFields = this.fieldService.getFieldsByFormId(formId)\n            .subscribe(result => {\n              this.fields = result;\n            });\n\n          this.subscriptionForm = this.formService.getFormById(formId)\n            .subscribe(result => {\n              this.form = result;\n            });\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptionParams)\n      this.subscriptionParams.unsubscribe();\n    if (this.subscriptionFields)\n      this.subscriptionFields.unsubscribe();\n    if (this.subscriptionForm)\n      this.subscriptionForm.unsubscribe();\n  }\n}\n","<p>my-fields-page works!</p>\n"],"mappings":";;;;AAaA,OAAM,MAAOA,qBAAqB;EAYhCC,YAAYC,cAA8B,EAC9BC,YAA0B,EAC1BC,WAAwB;IAClC,IAAI,CAACF,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,WAAW,GAAGA,WAAW;EAChC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACJ,cAAc,CAACK,MAAM,CACjDC,SAAS,CAACD,MAAM,IAAG;MAChB,IAAIE,MAAM,GAAWF,MAAM,CAAC,IAAI,CAAC;MAEjC,IAAI,CAACG,kBAAkB,GAAG,IAAI,CAACP,YAAY,CAACQ,iBAAiB,CAACF,MAAM,CAAC,CAClED,SAAS,CAACI,MAAM,IAAG;QAClB,IAAI,CAACC,MAAM,GAAGD,MAAM;MACtB,CAAC,CAAC;MAEJ,IAAI,CAACE,gBAAgB,GAAG,IAAI,CAACV,WAAW,CAACW,WAAW,CAACN,MAAM,CAAC,CACzDD,SAAS,CAACI,MAAM,IAAG;QAClB,IAAI,CAACI,IAAI,GAAGJ,MAAM;MACpB,CAAC,CAAC;IACN,CAAC,CACF;EACL;EAEAK,WAAWA,CAAA;IACT,IAAI,IAAI,CAACX,kBAAkB,EACzB,IAAI,CAACA,kBAAkB,CAACY,WAAW,EAAE;IACvC,IAAI,IAAI,CAACR,kBAAkB,EACzB,IAAI,CAACA,kBAAkB,CAACQ,WAAW,EAAE;IACvC,IAAI,IAAI,CAACJ,gBAAgB,EACvB,IAAI,CAACA,gBAAgB,CAACI,WAAW,EAAE;EACvC;;AA7CWlB,qBAAqB,C;mBAArBA,qBAAqB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;AAArB1B,qBAAqB,C;QAArBA,qBAAqB;EAAA2B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCblCb,EAAA,CAAAe,cAAA,QAAG;MAAAf,EAAA,CAAAgB,MAAA,4BAAqB;MAAAhB,EAAA,CAAAiB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}