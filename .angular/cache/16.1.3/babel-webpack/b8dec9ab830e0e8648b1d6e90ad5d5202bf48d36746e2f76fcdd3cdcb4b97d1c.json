{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FieldOption } from \"../../entity/FieldOption\";\nimport { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nexport let OptionListComponent = class OptionListComponent {\n  constructor() {\n    this.fieldOptions = [];\n    this.visible = false;\n    this.fieldOptionsChange = new EventEmitter();\n    this.fieldOptionsForm = new FormGroup({\n      options: new FormArray([new FormGroup({\n        text: new FormControl('', [Validators.required, Validators.maxLength(200)])\n      })])\n    });\n  }\n  ngOnInit() {\n    this.populateFieldOptionsForm();\n  }\n  getOptionsFormArray() {\n    return this.fieldOptionsForm.get('options');\n  }\n  populateFieldOptionsForm() {\n    const optionsArray = this.getOptionsFormArray();\n    //optionsArray.clear();\n    for (let i = 0; i < this.fieldOptions.length; i++) {\n      this.addFieldOption(this.fieldOptions[i].text);\n    }\n  }\n  addFieldOption(value = '') {\n    const optionsArray = this.getOptionsFormArray();\n    optionsArray.push(new FormGroup({\n      text: new FormControl(value, [Validators.required, Validators.maxLength(200)])\n    }));\n    this.fieldOptions.push(new FieldOption(null, ''));\n    this.updateTextInFieldOptions();\n  }\n  removeFieldOption(indexToRemove) {\n    const optionsArray = this.getOptionsFormArray();\n    optionsArray.removeAt(indexToRemove);\n    this.fieldOptions = this.fieldOptions.filter((_, index) => index != indexToRemove);\n    this.updateTextInFieldOptions();\n  }\n  updateTextInFieldOptions() {\n    const optionsArray = this.getOptionsFormArray();\n    for (let i = 0; i < this.fieldOptions.length; i++) {\n      /*let text = optionsArray[i].getFormGroup().values.text;*/\n      let text = optionsArray.controls[i].getRawValue().text;\n      this.fieldOptions[i].text = text;\n      this.fieldOptions[i].shownName = text;\n    }\n    this.fieldOptionsChange.emit(this.fieldOptions);\n    console.log('fieldOptions:');\n    this.fieldOptions.forEach(option => console.log(option.text + ', ' + option.id));\n  }\n};\n__decorate([Input()], OptionListComponent.prototype, \"fieldOptions\", void 0);\n__decorate([Input()], OptionListComponent.prototype, \"visible\", void 0);\n__decorate([Output()], OptionListComponent.prototype, \"fieldOptionsChange\", void 0);\nOptionListComponent = __decorate([Component({\n  selector: 'app-option-list',\n  templateUrl: './option-list.component.html',\n  styleUrls: ['./option-list.component.css']\n})], OptionListComponent);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","FieldOption","FormArray","FormControl","FormGroup","Validators","OptionListComponent","constructor","fieldOptions","visible","fieldOptionsChange","fieldOptionsForm","options","text","required","maxLength","ngOnInit","populateFieldOptionsForm","getOptionsFormArray","get","optionsArray","i","length","addFieldOption","value","push","updateTextInFieldOptions","removeFieldOption","indexToRemove","removeAt","filter","_","index","controls","getRawValue","shownName","emit","console","log","forEach","option","id","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\option-list\\option-list.component.ts"],"sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FieldOption} from \"../../entity/FieldOption\";\nimport {FormArray, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-option-list',\n  templateUrl: './option-list.component.html',\n  styleUrls: ['./option-list.component.css']\n})\nexport class OptionListComponent implements OnInit {\n  @Input() fieldOptions: FieldOption[] = [];\n  @Input() visible: boolean = false;\n\n  @Output() fieldOptionsChange = new EventEmitter<FieldOption[]>();\n\n  fieldOptionsForm: FormGroup;\n\n  constructor() {\n    this.fieldOptionsForm = new FormGroup({\n      options: new FormArray([\n        new FormGroup({\n          text: new FormControl<string>('', [\n            Validators.required,\n            Validators.maxLength(200)\n          ])\n        })\n      ])\n    });\n  }\n\n  ngOnInit() {\n    this.populateFieldOptionsForm();\n  }\n\n  getOptionsFormArray(): FormArray {\n    return this.fieldOptionsForm.get('options') as FormArray;\n  }\n\n  private populateFieldOptionsForm() {\n    const optionsArray = this.getOptionsFormArray();\n    //optionsArray.clear();\n\n    for (let i = 0; i < this.fieldOptions.length; i++) {\n      this.addFieldOption(this.fieldOptions[i].text);\n    }\n  }\n\n  addFieldOption(value: string = '') {\n    const optionsArray = this.getOptionsFormArray();\n    optionsArray.push(\n      new FormGroup({\n        text: new FormControl<string>(value, [\n          Validators.required,\n          Validators.maxLength(200)\n        ])\n      })\n    );\n\n    this.fieldOptions.push(new FieldOption(null, ''));\n    this.updateTextInFieldOptions();\n  }\n\n  removeFieldOption(indexToRemove: number) {\n    const optionsArray = this.getOptionsFormArray();\n    optionsArray.removeAt(indexToRemove);\n\n    this.fieldOptions = this.fieldOptions.filter((_, index) => index != indexToRemove);\n    this.updateTextInFieldOptions();\n  }\n\n  updateTextInFieldOptions() {\n    const optionsArray = this.getOptionsFormArray();\n\n    for (let i = 0; i < this.fieldOptions.length; i++) {\n      /*let text = optionsArray[i].getFormGroup().values.text;*/\n      let text = optionsArray.controls[i].getRawValue().text;\n\n      this.fieldOptions[i].text = text;\n      this.fieldOptions[i].shownName = text;\n    }\n\n    this.fieldOptionsChange.emit(this.fieldOptions);\n\n    console.log('fieldOptions:');\n    this.fieldOptions.forEach(option => console.log(option.text + ', ' + option.id));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}