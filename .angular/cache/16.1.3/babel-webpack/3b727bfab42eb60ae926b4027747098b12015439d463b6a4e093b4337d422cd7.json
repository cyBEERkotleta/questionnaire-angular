{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Topic } from \"../../entity/Topic\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/topic.service\";\nimport * as i2 from \"../../service/modal.service\";\nimport * as i3 from \"@angular/router\";\nfunction CreateTopicComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nexport class CreateTopicComponent {\n  constructor(topicService, modalService, router) {\n    this.showAllErrors = false;\n    this.globalError = '';\n    this.successfulCreation = false;\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.email, Validators.minLength(3), Validators.maxLength(100), Validators.required]),\n      description: new FormControl('', [Validators.maxLength(250)])\n    });\n    this.topicService = topicService;\n    this.modalService = modalService;\n    this.router = router;\n  }\n  isGlobalErrorSet() {\n    return this.globalError != '';\n  }\n  submit() {\n    if (this.anyErrorExists()) return;\n    this.addTopic();\n  }\n  anyErrorExists() {\n    this.resetGlobalError();\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n  addTopic() {\n    let topic = this.createTopicFromFields();\n    this.topicService.addTopic(topic).subscribe(result => {\n      console.log(result);\n      if (result.success) {\n        this.successfulCreation = true;\n        this.modalService.close();\n      } else {\n        this.globalError = result.message;\n        this.successfulLogin = false;\n      }\n    });\n  }\n  resetGlobalError() {\n    this.globalError = '';\n  }\n  createTopicFromFields() {\n    let name = this.getNameFromField();\n    let description = this.getDescriptionFromField();\n    return new Topic(null, name, description, null);\n  }\n  getNameFromField() {\n    return this.form.controls.name.getRawValue();\n  }\n  getDescriptionFromField() {\n    return this.form.controls.description.getRawValue();\n  }\n  isAnyErrorInFields() {\n    return this.doesControlHaveError(this.form.controls.name) || this.doesControlHaveError(this.form.controls.description);\n  }\n  doesControlHaveError(formControl) {\n    return formControl.errors != null;\n  }\n}\nCreateTopicComponent.ɵfac = function CreateTopicComponent_Factory(t) {\n  return new (t || CreateTopicComponent)(i0.ɵɵdirectiveInject(i1.TopicService), i0.ɵɵdirectiveInject(i2.ModalService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateTopicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTopicComponent,\n  selectors: [[\"app-create-topic\"]],\n  decls: 13,\n  vars: 16,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [\"placeholder\", \"Email\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u0418\\u043C\\u044F\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u043B\", 3, \"formElement\", \"showError\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [3, \"errorMessage\"]],\n  template: function CreateTopicComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateTopicComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtemplate(1, CreateTopicComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n      i0.ɵɵelement(2, \"app-text-field-placeholder\", 2)(3, \"app-text-field-placeholder\", 3)(4, \"app-text-field-placeholder\", 4)(5, \"app-text-field-placeholder\", 5)(6, \"app-text-field-placeholder\", 6)(7, \"app-text-field-placeholder\", 7)(8, \"app-choice-gender\", 8)(9, \"br\");\n      i0.ɵɵelementStart(10, \"app-middle-control\")(11, \"button\", 9);\n      i0.ɵɵtext(12, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.email)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.password)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.confirmPassword)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.firstName)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.lastName)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.phoneNumber)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.gender)(\"showError\", ctx.showAllErrors);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","Topic","i0","ɵɵelement","ɵɵproperty","ctx_r0","globalError","CreateTopicComponent","constructor","topicService","modalService","router","showAllErrors","successfulCreation","form","name","email","minLength","maxLength","required","description","isGlobalErrorSet","submit","anyErrorExists","addTopic","resetGlobalError","isAnyErrorInFields","topic","createTopicFromFields","subscribe","result","console","log","success","close","message","successfulLogin","getNameFromField","getDescriptionFromField","controls","getRawValue","doesControlHaveError","formControl","errors","ɵɵdirectiveInject","i1","TopicService","i2","ModalService","i3","Router","selectors","decls","vars","consts","template","CreateTopicComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreateTopicComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","CreateTopicComponent_app_error_paragraph_1_Template","ɵɵtext","ɵɵelementEnd","ɵɵadvance","password","confirmPassword","firstName","lastName","phoneNumber","gender"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-topic\\create-topic.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-topic\\create-topic.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {UserService} from \"../../service/user.service\";\nimport {NavigationExtras, Router} from \"@angular/router\";\nimport {User} from \"../../entity/User\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Gender} from \"../../entity/Gender\";\nimport {TopicService} from \"../../service/topic.service\";\nimport {Topic} from \"../../entity/Topic\";\nimport {ModalService} from \"../../service/modal.service\";\n\n@Component({\n  selector: 'app-create-topic',\n  templateUrl: './create-topic.component.html',\n  styleUrls: ['./create-topic.component.css']\n})\nexport class CreateTopicComponent {\n  private topicService: TopicService;\n  private modalService: ModalService;\n  private router: Router;\n\n  private createdTopic: Topic;\n\n  showAllErrors = false;\n  globalError: string = '';\n  private successfulCreation = false;\n\n  form = new FormGroup({\n    name: new FormControl<string>('', [\n      Validators.email,\n      Validators.minLength(3),\n      Validators.maxLength(100),\n      Validators.required\n    ]),\n    description: new FormControl<string>('', [\n      Validators.maxLength(250)\n    ])\n  });\n\n  constructor(topicService: TopicService,\n              modalService: ModalService,\n              router: Router) {\n    this.topicService = topicService;\n    this.modalService = modalService;\n    this.router = router;\n  }\n\n  isGlobalErrorSet(): boolean {\n    return this.globalError != '';\n  }\n\n  submit() {\n    if (this.anyErrorExists())\n      return;\n\n    this.addTopic();\n  }\n\n  private anyErrorExists(): boolean {\n    this.resetGlobalError();\n\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n\n  private addTopic() {\n    let topic = this.createTopicFromFields();\n\n    this.topicService.addTopic(topic)\n      .subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.successfulCreation = true;\n          this.modalService.close();\n        }\n        else {\n          this.globalError = result.message;\n          this.successfulLogin = false;\n        }\n      });\n  }\n\n  private resetGlobalError() {\n    this.globalError = '';\n  }\n\n  private createTopicFromFields(): Topic {\n    let name = this.getNameFromField();\n    let description = this.getDescriptionFromField();\n\n    return new Topic(null, name, description, null);\n  }\n\n  private getNameFromField(): string {\n    return this.form.controls.name.getRawValue();\n  }\n\n  private getDescriptionFromField(): string {\n    return this.form.controls.description.getRawValue();\n  }\n\n  private isAnyErrorInFields(): boolean {\n    return this.doesControlHaveError(this.form.controls.name) ||\n      this.doesControlHaveError(this.form.controls.description);\n  }\n\n  private doesControlHaveError(formControl: FormControl): boolean {\n    return formControl.errors != null;\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <app-error-paragraph\n    *ngIf=\"isGlobalErrorSet()\"\n    [errorMessage]=\"globalError\"\n  ></app-error-paragraph>\n\n  <app-text-field-placeholder\n    placeholder=\"Email\"\n    [formElement]=\"form.controls.email\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field-placeholder>\n\n  <app-text-field-placeholder\n    placeholder=\"Пароль\"\n    [formElement]=\"form.controls.password\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field-placeholder>\n\n  <app-text-field-placeholder\n    placeholder=\"Подтверждение пароля\"\n    [formElement]=\"form.controls.confirmPassword\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field-placeholder>\n\n  <app-text-field-placeholder\n    placeholder=\"Имя\"\n    [formElement]=\"form.controls.firstName\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field-placeholder>\n\n  <app-text-field-placeholder\n    placeholder=\"Фамилия\"\n    [formElement]=\"form.controls.lastName\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field-placeholder>\n\n  <app-text-field-placeholder\n    placeholder=\"Номер телефона\"\n    [formElement]=\"form.controls.phoneNumber\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field-placeholder>\n\n  <app-choice-gender\n    fieldName=\"Пол\"\n    [formElement]=\"form.controls.gender\"\n    [showError]=\"showAllErrors\"\n  ></app-choice-gender>\n\n  <br/>\n\n  <app-middle-control>\n    <button\n      type=\"submit\"\n      class=\"button-red-rounded\"\n    >Зарегистрироваться</button>\n  </app-middle-control>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}