{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction OptionListComponent_div_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"input\", 6);\n    i0.ɵɵelementStart(2, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function OptionListComponent_div_0_div_3_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.removeFieldOption(i_r3));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const optionCtrl_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", optionCtrl_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \", i_r3 + 1, \"\");\n  }\n}\nfunction OptionListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"form\", 2);\n    i0.ɵɵtemplate(3, OptionListComponent_div_0_div_3_Template, 4, 2, \"div\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function OptionListComponent_div_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addFieldOption());\n    });\n    i0.ɵɵtext(5, \"Add Option\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.fieldOptionsForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getFormArray().controls);\n  }\n}\nexport class OptionListComponent {\n  constructor() {\n    this.fieldOptions = [];\n    this.visible = false;\n    this.fieldOptionsChange = new EventEmitter();\n    this.fieldOptionsForm = new FormGroup({\n      options: new FormArray([])\n    });\n  }\n  ngOnInit() {\n    this.populateFieldOptionsForm();\n  }\n  getFormArray() {\n    return this.fieldOptionsForm.get('options');\n  }\n  populateFieldOptionsForm() {\n    const optionsArray = this.getFormArray();\n    optionsArray.clear();\n    if (!this.fieldOptions) return;\n    this.fieldOptions.forEach(option => {\n      optionsArray.push(new FormControl(option.text));\n    });\n  }\n  addFieldOption() {\n    const optionsArray = this.getFormArray();\n    optionsArray.push(new FormControl(''));\n    this.updateFieldOptions();\n  }\n  removeFieldOption(index) {\n    const optionsArray = this.getFormArray();\n    optionsArray.removeAt(index);\n    this.updateFieldOptions();\n  }\n  updateFieldOptions() {\n    const optionsArray = this.getFormArray();\n    this.fieldOptions = optionsArray.value.map((text, index) => {\n      return {\n        id: !this.fieldOptions || this.fieldOptions.length <= index ? null : this.fieldOptions[index].id,\n        text,\n        shownName: text\n      };\n    });\n    this.fieldOptionsChange.emit(this.fieldOptions);\n  }\n}\nOptionListComponent.ɵfac = function OptionListComponent_Factory(t) {\n  return new (t || OptionListComponent)();\n};\nOptionListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OptionListComponent,\n  selectors: [[\"app-option-list\"]],\n  inputs: {\n    fieldOptions: \"fieldOptions\",\n    visible: \"visible\"\n  },\n  outputs: {\n    fieldOptionsChange: \"fieldOptionsChange\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"options-container\"], [3, \"formGroup\"], [\"class\", \"option-row\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"option-row\", 3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"text\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function OptionListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, OptionListComponent_div_0_Template, 6, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","FormArray","FormControl","FormGroup","i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","OptionListComponent_div_0_div_3_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r5","i_r3","index","ctx_r4","ɵɵnextContext","ɵɵresetView","removeFieldOption","ɵɵtext","ɵɵelementEnd","ɵɵproperty","optionCtrl_r2","ɵɵadvance","ɵɵpropertyInterpolate1","ɵɵtemplate","OptionListComponent_div_0_div_3_Template","OptionListComponent_div_0_Template_button_click_4_listener","_r7","ctx_r6","addFieldOption","ctx_r0","fieldOptionsForm","getFormArray","controls","OptionListComponent","constructor","fieldOptions","visible","fieldOptionsChange","options","ngOnInit","populateFieldOptionsForm","get","optionsArray","clear","forEach","option","push","text","updateFieldOptions","removeAt","value","map","id","length","shownName","emit","selectors","inputs","outputs","decls","vars","consts","template","OptionListComponent_Template","rf","ctx","OptionListComponent_div_0_Template"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\option-list\\option-list.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\option-list\\option-list.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FieldOption} from \"../../entity/FieldOption\";\nimport {FormArray, FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-option-list',\n  templateUrl: './option-list.component.html',\n  styleUrls: ['./option-list.component.css']\n})\nexport class OptionListComponent implements OnInit {\n  @Input() fieldOptions: FieldOption[] = [];\n  @Input() visible: boolean = false;\n\n  @Output() fieldOptionsChange = new EventEmitter<FieldOption[]>();\n\n  fieldOptionsForm: FormGroup;\n\n  constructor() {\n    this.fieldOptionsForm = new FormGroup({\n      options: new FormArray([])\n    });\n  }\n\n  ngOnInit() {\n    this.populateFieldOptionsForm();\n  }\n\n  getFormArray(): FormArray {\n    return this.fieldOptionsForm.get('options') as FormArray;\n  }\n\n  private populateFieldOptionsForm() {\n    const optionsArray = this.getFormArray();\n    optionsArray.clear();\n\n    if (!this.fieldOptions)\n      return;\n\n    this.fieldOptions.forEach(option => {\n      optionsArray.push(new FormControl(option.text));\n    });\n  }\n\n  addFieldOption() {\n    const optionsArray = this.getFormArray();\n    optionsArray.push(new FormControl(''));\n    this.updateFieldOptions();\n  }\n\n  removeFieldOption(index: number) {\n    const optionsArray = this.getFormArray();\n    optionsArray.removeAt(index);\n    this.updateFieldOptions();\n  }\n\n  updateFieldOptions() {\n    const optionsArray = this.getFormArray();\n    this.fieldOptions = optionsArray.value.map((text: string, index: number) => {\n      return {\n        id: (!this.fieldOptions || this.fieldOptions.length <= index) ? null : this.fieldOptions[index].id,\n        text,\n        shownName: text\n      };\n    });\n    this.fieldOptionsChange.emit(this.fieldOptions);\n  }\n}\n","<div *ngIf=\"visible\">\n  <div class=\"options-container\">\n    <form [formGroup]=\"fieldOptionsForm\">\n      <div *ngFor=\"let optionCtrl of getFormArray().controls; let i = index\" class=\"option-row\" [formGroupName]=\"optionCtrl\">\n        <input type=\"text\" formControlName=\"text\" class=\"form-control\" placeholder=\"Вариант {{i + 1}}\">\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeFieldOption(i)\">Remove</button>\n      </div>\n    </form>\n  </div>\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"addFieldOption()\">Add Option</button>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}