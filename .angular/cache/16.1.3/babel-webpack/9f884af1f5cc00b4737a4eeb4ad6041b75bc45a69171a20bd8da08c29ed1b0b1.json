{"ast":null,"code":"import { NavigationEnd } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let UrlService = /*#__PURE__*/(() => {\n  class UrlService {\n    constructor(router) {\n      this.router = router;\n      this.subscribeToNavigationEvents();\n    }\n    subscribeToNavigationEvents() {\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          this.saveCurrentPage();\n        }\n      });\n    }\n    saveCurrentPage() {\n      let currentPage = this.getCurrentRouterLink();\n      let prevPage = this.getCurrentPage();\n      if (prevPage != currentPage) {\n        this.lastPage = prevPage;\n        this.currentPage = currentPage;\n      }\n    }\n    getCurrentPage() {\n      return this.currentPage;\n    }\n    getLastPage() {\n      if (this.lastPage) return this.lastPage;\n      return '/';\n    }\n    getCurrentRouterLink() {\n      const urlTree = this.router.createUrlTree([], {\n        queryParamsHandling: 'merge',\n        preserveFragment: true\n      });\n      return this.router.serializeUrl(urlTree);\n    }\n  }\n  UrlService.ɵfac = function UrlService_Factory(t) {\n    return new (t || UrlService)(i0.ɵɵinject(i1.Router));\n  };\n  UrlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UrlService,\n    factory: UrlService.ɵfac,\n    providedIn: 'root'\n  });\n  return UrlService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}