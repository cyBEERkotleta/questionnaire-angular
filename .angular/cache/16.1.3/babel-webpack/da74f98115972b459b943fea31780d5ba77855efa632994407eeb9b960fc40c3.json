{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../field-validator/field-validator.component\";\nexport class TextFieldPasswordPlaceholderComponent {\n  constructor() {\n    this.showError = false;\n  }\n  getPlaceholder() {\n    return this.placeholder + (this.isFieldRequired() ? ' *' : '');\n  }\n  isFieldRequired() {\n    return this.formElement.hasValidator(Validators.required);\n  }\n}\nTextFieldPasswordPlaceholderComponent.ɵfac = function TextFieldPasswordPlaceholderComponent_Factory(t) {\n  return new (t || TextFieldPasswordPlaceholderComponent)();\n};\nTextFieldPasswordPlaceholderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TextFieldPasswordPlaceholderComponent,\n  selectors: [[\"app-text-field-password-placeholder\"]],\n  inputs: {\n    placeholder: \"placeholder\",\n    formElement: \"formElement\",\n    showError: \"showError\"\n  },\n  decls: 3,\n  vars: 4,\n  consts: [[1, \"pt-3\"], [\"type\", \"password\", 1, \"border\", \"rounded-1\", \"w-full\", \"py-2\", \"px-3\", \"mt-1\", 3, \"placeholder\", \"formControl\"], [3, \"formElement\", \"showError\"]],\n  template: function TextFieldPasswordPlaceholderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"input\", 1)(2, \"app-field-validator\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.getPlaceholder());\n      i0.ɵɵproperty(\"formControl\", ctx.formElement);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.formElement)(\"showError\", ctx.showError);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.FieldValidatorComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","TextFieldPasswordPlaceholderComponent","constructor","showError","getPlaceholder","placeholder","isFieldRequired","formElement","hasValidator","required","selectors","inputs","decls","vars","consts","template","TextFieldPasswordPlaceholderComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵproperty"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\text-field-password-placeholder\\text-field-password-placeholder.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\little-components\\text-field-password-placeholder\\text-field-password-placeholder.component.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-text-field-password-placeholder',\r\n  templateUrl: './text-field-password-placeholder.component.html',\r\n  styleUrls: ['./text-field-password-placeholder.component.css']\r\n})\r\nexport class TextFieldPasswordPlaceholderComponent {\r\n  @Input() placeholder: string;\r\n  @Input() formElement: FormControl;\r\n  @Input() showError: boolean = false;\r\n\r\n  getPlaceholder(): string {\r\n    return this.placeholder + (this.isFieldRequired() ? ' *' : '');\r\n  }\r\n\r\n  isFieldRequired(): boolean {\r\n    return this.formElement.hasValidator(Validators.required);\r\n  }\r\n}\r\n","<div class=\"pt-3\">\r\n  <input\r\n    type=\"password\"\r\n    class=\"border rounded-1 w-full py-2 px-3 mt-1\"\r\n    placeholder=\"{{getPlaceholder()}}\"\r\n    [formControl]=\"formElement\"\r\n  >\r\n\r\n  <app-field-validator\r\n    [formElement]=\"formElement\"\r\n    [showError]=\"showError\"\r\n  ></app-field-validator>\r\n</div>\r\n"],"mappings":"AACA,SAAqBA,UAAU,QAAO,gBAAgB;;;;AAOtD,OAAM,MAAOC,qCAAqC;EALlDC,YAAA;IAQW,KAAAC,SAAS,GAAY,KAAK;;EAEnCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACC,WAAW,IAAI,IAAI,CAACC,eAAe,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;EAChE;EAEAA,eAAeA,CAAA;IACb,OAAO,IAAI,CAACC,WAAW,CAACC,YAAY,CAACR,UAAU,CAACS,QAAQ,CAAC;EAC3D;;AAXWR,qCAAqC,C;mBAArCA,qCAAqC;AAAA;AAArCA,qCAAqC,C;QAArCA,qCAAqC;EAAAS,SAAA;EAAAC,MAAA;IAAAN,WAAA;IAAAE,WAAA;IAAAJ,SAAA;EAAA;EAAAS,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,+CAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRlDE,EAAA,CAAAC,cAAA,aAAkB;MAChBD,EAAA,CAAAE,SAAA,eAKC;MAMHF,EAAA,CAAAG,YAAA,EAAM;;;MARFH,EAAA,CAAAI,SAAA,GAAkC;MAAlCJ,EAAA,CAAAK,qBAAA,gBAAAN,GAAA,CAAAd,cAAA,GAAkC;MAClCe,EAAA,CAAAM,UAAA,gBAAAP,GAAA,CAAAX,WAAA,CAA2B;MAI3BY,EAAA,CAAAI,SAAA,GAA2B;MAA3BJ,EAAA,CAAAM,UAAA,gBAAAP,GAAA,CAAAX,WAAA,CAA2B,cAAAW,GAAA,CAAAf,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}