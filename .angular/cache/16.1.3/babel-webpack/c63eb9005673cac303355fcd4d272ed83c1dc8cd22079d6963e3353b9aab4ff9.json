{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { User } from \"../../entity/User\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/users.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../little-components/text-field/text-field.component\";\nimport * as i4 from \"../../little-components/choice-gender/choice-gender.component\";\nexport class CreateUserComponent {\n  constructor(userService) {\n    this.showAllErrors = false;\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.minLength(5), Validators.maxLength(60), Validators.required]),\n      password: new FormControl('', [Validators.minLength(8), Validators.maxLength(30), Validators.required]),\n      confirmPassword: new FormControl('', [Validators.minLength(8), Validators.maxLength(30), Validators.required]),\n      firstName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required]),\n      lastName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required]),\n      phoneNumber: new FormControl('', [Validators.pattern('\\\\d{3,15}')]),\n      gender: new FormControl(null, [Validators.required])\n    });\n    this.userService = userService;\n  }\n  ngOnInit() {}\n  submit() {\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return;\n    }\n    let user = this.collectUserFromFields();\n    let password = this.getPasswordFromField();\n    this.userService.register(user, password);\n  }\n  createUserFromFields() {\n    let email = this.form.controls.email.getRawValue();\n    let firstName = this.form.controls.firstName.getRawValue();\n    let lastName = this.form.controls.lastName.getRawValue();\n    let phoneNumber = this.form.controls.phoneNumber.getRawValue();\n    let gender = this.form.controls.gender.getRawValue();\n    return new User(undefined, email, firstName, lastName, phoneNumber, undefined, undefined, gender);\n  }\n  getPasswordFromField() {\n    return this.form.controls.password.getRawValue();\n  }\n  isAnyErrorInFields() {\n    return this.doPasswordsMatch() || this.doesControlHaveError(this.form.controls.email) || this.doesControlHaveError(this.form.controls.password) || this.doesControlHaveError(this.form.controls.confirmPassword) || this.doesControlHaveError(this.form.controls.firstName) || this.doesControlHaveError(this.form.controls.lastName) || this.doesControlHaveError(this.form.controls.phoneNumber) || this.doesControlHaveError(this.form.controls.gender);\n  }\n  doesControlHaveError(formControl) {\n    return formControl.errors != null;\n  }\n  doPasswordsMatch() {\n    let password = this.form.controls.password.getRawValue();\n    let confirmPassword = this.form.controls.confirmPassword.getRawValue();\n    return password == confirmPassword;\n  }\n}\nCreateUserComponent.ɵfac = function CreateUserComponent_Factory(t) {\n  return new (t || CreateUserComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nCreateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateUserComponent,\n  selectors: [[\"app-create-user\"]],\n  decls: 10,\n  vars: 21,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"fieldName\", \"Email\", 3, \"nextLine\", \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"nextLine\", \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\", 3, \"nextLine\", \"formElement\", \"showError\"], [\"fieldName\", \"\\u0418\\u043C\\u044F\", 3, \"nextLine\", \"formElement\", \"showError\"], [\"fieldName\", \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\", 3, \"nextLine\", \"formElement\", \"showError\"], [\"fieldName\", \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\", 3, \"nextLine\", \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u043B\", 3, \"formElement\", \"showError\"], [\"type\", \"submit\", 1, \"py-2\", \"px-4\", \"mt-3\", \"mx-auto\", \"rounded-1\", \"bg-blue-600\", \"text-white\"]],\n  template: function CreateUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateUserComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelement(1, \"app-text-field\", 1)(2, \"app-text-field\", 2)(3, \"app-text-field\", 3)(4, \"app-text-field\", 4)(5, \"app-text-field\", 5)(6, \"app-text-field\", 6)(7, \"app-choice-gender\", 7);\n      i0.ɵɵelementStart(8, \"button\", 8);\n      i0.ɵɵtext(9, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nextLine\", true)(\"formElement\", ctx.form.controls.email)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nextLine\", true)(\"formElement\", ctx.form.controls.password)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nextLine\", true)(\"formElement\", ctx.form.controls.confirmPassword)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nextLine\", true)(\"formElement\", ctx.form.controls.firstName)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nextLine\", true)(\"formElement\", ctx.form.controls.lastName)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nextLine\", true)(\"formElement\", ctx.form.controls.phoneNumber)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.gender)(\"showError\", ctx.showAllErrors);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.TextFieldComponent, i4.ChoiceGenderComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","User","CreateUserComponent","constructor","userService","showAllErrors","form","email","minLength","maxLength","required","password","confirmPassword","firstName","lastName","phoneNumber","pattern","gender","ngOnInit","submit","isAnyErrorInFields","user","collectUserFromFields","getPasswordFromField","register","createUserFromFields","controls","getRawValue","undefined","doPasswordsMatch","doesControlHaveError","formControl","errors","i0","ɵɵdirectiveInject","i1","UserService","selectors","decls","vars","consts","template","CreateUserComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreateUserComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-user\\create-user.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-user\\create-user.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Gender} from \"../../entity/Gender\";\nimport {UserService} from \"../../service/users.service\";\nimport {User} from \"../../entity/User\";\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  private userService: UserService;\n  showAllErrors = false;\n\n  form = new FormGroup({\n    email: new FormControl<string>('', [\n      Validators.email,\n      Validators.minLength(5),\n      Validators.maxLength(60),\n      Validators.required\n    ]),\n    password: new FormControl<string>('', [\n      Validators.minLength(8),\n      Validators.maxLength(30),\n      Validators.required\n    ]),\n    confirmPassword: new FormControl<string>('', [\n      Validators.minLength(8),\n      Validators.maxLength(30),\n      Validators.required\n    ]),\n    firstName: new FormControl<string>('', [\n      Validators.minLength(2),\n      Validators.maxLength(30),\n      Validators.required\n    ]),\n    lastName: new FormControl<string>('', [\n      Validators.minLength(2),\n      Validators.maxLength(30),\n      Validators.required\n    ]),\n    phoneNumber: new FormControl<string>('', [\n      Validators.pattern('\\\\d{3,15}')\n    ]),\n    gender: new FormControl<Gender>(null, [\n      Validators.required\n    ])\n  })\n\n  constructor(userService: UserService) {\n    this.userService = userService;\n  }\n\n  ngOnInit() {\n  }\n\n  submit() {\n    if (this.isAnyErrorInFields()) {\n      this.showAllErrors = true;\n      return;\n    }\n    let user = this.collectUserFromFields();\n    let password = this.getPasswordFromField();\n    this.userService.register(user, password);\n  }\n\n  createUserFromFields(): User {\n    let email = this.form.controls.email.getRawValue();\n    let firstName = this.form.controls.firstName.getRawValue();\n    let lastName = this.form.controls.lastName.getRawValue();\n    let phoneNumber = this.form.controls.phoneNumber.getRawValue();\n    let gender = this.form.controls.gender.getRawValue();\n\n    return new User(undefined, email, firstName, lastName, phoneNumber,\n      undefined, undefined, gender);\n  }\n\n  getPasswordFromField(): string {\n    return this.form.controls.password.getRawValue();\n  }\n\n  isAnyErrorInFields(): boolean {\n    return this.doPasswordsMatch() ||\n      this.doesControlHaveError(this.form.controls.email) ||\n      this.doesControlHaveError(this.form.controls.password) ||\n      this.doesControlHaveError(this.form.controls.confirmPassword) ||\n      this.doesControlHaveError(this.form.controls.firstName) ||\n      this.doesControlHaveError(this.form.controls.lastName) ||\n      this.doesControlHaveError(this.form.controls.phoneNumber) ||\n      this.doesControlHaveError(this.form.controls.gender);\n  }\n\n  doesControlHaveError(formControl: FormControl): boolean {\n    return formControl.errors != null;\n  }\n\n  doPasswordsMatch(): boolean {\n    let password = this.form.controls.password.getRawValue();\n    let confirmPassword = this.form.controls.confirmPassword.getRawValue();\n    return password == confirmPassword;\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <app-text-field\n    fieldName=\"Email\"\n    [nextLine]=\"true\"\n    [formElement]=\"form.controls.email\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Пароль\"\n    [nextLine]=\"true\"\n    [formElement]=\"form.controls.password\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Подтверждение пароля\"\n    [nextLine]=\"true\"\n    [formElement]=\"form.controls.confirmPassword\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Имя\"\n    [nextLine]=\"true\"\n    [formElement]=\"form.controls.firstName\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Фамилия\"\n    [nextLine]=\"true\"\n    [formElement]=\"form.controls.lastName\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-text-field\n    fieldName=\"Номер телефона\"\n    [nextLine]=\"true\"\n    [formElement]=\"form.controls.phoneNumber\"\n    [showError]=\"showAllErrors\"\n  ></app-text-field>\n\n  <app-choice-gender\n    fieldName=\"Пол\"\n    [formElement]=\"form.controls.gender\"\n    [showError]=\"showAllErrors\"\n  ></app-choice-gender>\n\n  <button\n    type=\"submit\"\n    class=\"py-2 px-4 mt-3 mx-auto rounded-1 bg-blue-600 text-white\"\n  >Создать</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}