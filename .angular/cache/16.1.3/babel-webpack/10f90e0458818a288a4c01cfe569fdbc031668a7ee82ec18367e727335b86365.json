{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { User } from \"../../entity/User\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/user.service\";\nimport * as i2 from \"../../service/mail.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../little-components/text-field-placeholder/text-field-placeholder.component\";\nimport * as i7 from \"../../little-components/choice-gender/choice-gender.component\";\nimport * as i8 from \"../../little-components/error-paragraph/error-paragraph.component\";\nimport * as i9 from \"../../little-components/middle-control/middle-control.component\";\nimport * as i10 from \"../../little-components/text-field-password-placeholder/text-field-password-placeholder.component\";\nfunction CreateUserComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nfunction CreateUserComponent_app_middle_control_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-middle-control\")(1, \"span\", 16);\n    i0.ɵɵtext(2, \" \\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u043F\\u0438\\u0441\\u044C\\u043C\\u0430 \\u043D\\u0430 \\u0432\\u0430\\u0448 Email... \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class CreateUserComponent {\n  constructor(userService, mailService, router) {\n    this.showAllErrors = false;\n    this.globalError = '';\n    this.sendingMailProcess = false;\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.minLength(5), Validators.maxLength(60), Validators.required]),\n      password: new FormControl('', [Validators.minLength(8), Validators.maxLength(30), Validators.required]),\n      confirmPassword: new FormControl('', [Validators.minLength(8), Validators.maxLength(30), Validators.required]),\n      firstName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required, Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)]),\n      lastName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required, Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)]),\n      phoneNumber: new FormControl('', [Validators.required, Validators.pattern('^\\\\d{3,15}$'), Validators.minLength(3), Validators.maxLength(15)]),\n      gender: new FormControl(null, [Validators.required])\n    });\n    this.userService = userService;\n    this.mailService = mailService;\n    this.router = router;\n  }\n  ngOnDestroy() {\n    if (this.subscriptionTryReg) this.subscriptionTryReg.unsubscribe();\n    if (this.subscriptionSendMail) this.subscriptionSendMail.unsubscribe();\n  }\n  isGlobalErrorSet() {\n    return this.globalError != '';\n  }\n  submit() {\n    if (this.anyErrorExists()) return;\n    this.tryRegisterUser();\n  }\n  anyErrorExists() {\n    this.resetGlobalError();\n    let passwordsMatch = this.doPasswordsMatch();\n    if (this.isAnyErrorInFields() || !passwordsMatch) {\n      if (!passwordsMatch) {\n        this.globalError = 'Пароли не совпадают';\n      }\n      this.showAllErrors = true;\n      return true;\n    }\n    return false;\n  }\n  tryRegisterUser() {\n    this.createdUser = this.createUserFromFields();\n    let password = this.getPasswordFromField();\n    this.subscriptionTryReg = this.userService.tryRegister(this.createdUser, password).subscribe(result => {\n      console.log(result);\n      if (result.success) {\n        this.sendingMailProcess = true;\n        this.subscriptionSendMail = this.mailService.sendConfirmationEmail(this.createdUser, password).subscribe(answer => {\n          this.sendingMailProcess = false;\n          if (answer.success) {\n            this.navigateToConfirmRegistrationPage();\n          } else {\n            this.globalError = answer.message;\n          }\n        });\n      } else {\n        this.globalError = result.message;\n      }\n    });\n  }\n  navigateToConfirmRegistrationPage() {\n    let navigationExtras = {\n      queryParams: {\n        'first_name': this.createdUser.firstName,\n        'last_name': this.createdUser.lastName,\n        'email': this.createdUser.email\n      }\n    };\n    this.router.navigate(['/confirm-registration'], navigationExtras);\n  }\n  resetGlobalError() {\n    this.globalError = '';\n  }\n  createUserFromFields() {\n    let email = this.form.controls.email.getRawValue();\n    let firstName = this.form.controls.firstName.getRawValue();\n    let lastName = this.form.controls.lastName.getRawValue();\n    let phoneNumber = this.form.controls.phoneNumber.getRawValue();\n    let gender = this.form.controls.gender.getRawValue();\n    return new User(null, email, firstName, lastName, phoneNumber, null, gender);\n  }\n  getPasswordFromField() {\n    return this.form.controls.password.getRawValue();\n  }\n  isAnyErrorInFields() {\n    return this.doesControlHaveError(this.form.controls.email) || this.doesControlHaveError(this.form.controls.password) || this.doesControlHaveError(this.form.controls.confirmPassword) || this.doesControlHaveError(this.form.controls.firstName) || this.doesControlHaveError(this.form.controls.lastName) || this.doesControlHaveError(this.form.controls.phoneNumber) || this.doesControlHaveError(this.form.controls.gender);\n  }\n  doesControlHaveError(formControl) {\n    return formControl.errors != null;\n  }\n  doPasswordsMatch() {\n    let password = this.form.controls.password.getRawValue();\n    let confirmPassword = this.form.controls.confirmPassword.getRawValue();\n    return password == confirmPassword;\n  }\n}\nCreateUserComponent.ɵfac = function CreateUserComponent_Factory(t) {\n  return new (t || CreateUserComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.MailService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateUserComponent,\n  selectors: [[\"app-create-user\"]],\n  decls: 18,\n  vars: 18,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [4, \"ngIf\"], [\"placeholder\", \"Email\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u0418\\u043C\\u044F\", \"additionalNote\", \"\\u0438\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432 \\u0438 \\u0434\\u0435\\u0444\\u0438\\u0441\\u043E\\u0432\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\", \"additionalNote\", \"\\u0444\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432 \\u0438 \\u0434\\u0435\\u0444\\u0438\\u0441\\u043E\\u0432\", 3, \"formElement\", \"showError\"], [\"placeholder\", \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\", \"additionalNote\", \"\\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0437\\u0430\\u0434\\u0430\\u0451\\u0442\\u0441\\u044F \\u0431\\u0435\\u0437 \\u0437\\u043D\\u0430\\u043A\\u0430 + \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0446\\u0438\\u0444\\u0440\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u043B\", 3, \"formElement\", \"showError\"], [3, \"paddingTop\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [1, \"text-center\", \"fs-6\", \"pt-3\"], [1, \"text-black\"], [\"routerLink\", \"/login\", 1, \"blue-bold-link-text\"], [3, \"errorMessage\"], [1, \"text-blue-500\", \"fs-6\", \"fw-bold\"]],\n  template: function CreateUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateUserComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtemplate(1, CreateUserComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n      i0.ɵɵtemplate(2, CreateUserComponent_app_middle_control_2_Template, 3, 0, \"app-middle-control\", 2);\n      i0.ɵɵelement(3, \"app-text-field-placeholder\", 3)(4, \"app-text-field-password-placeholder\", 4)(5, \"app-text-field-password-placeholder\", 5)(6, \"app-text-field-placeholder\", 6)(7, \"app-text-field-placeholder\", 7)(8, \"app-text-field-placeholder\", 8)(9, \"app-choice-gender\", 9);\n      i0.ɵɵelementStart(10, \"app-middle-control\", 10)(11, \"button\", 11);\n      i0.ɵɵtext(12, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"p\", 12)(14, \"span\", 13);\n      i0.ɵɵtext(15, \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"a\", 14);\n      i0.ɵɵtext(17, \"\\u0412\\u043E\\u0439\\u0442\\u0438\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.sendingMailProcess);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.email)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.password)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.confirmPassword)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.firstName)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.lastName)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.phoneNumber)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formElement\", ctx.form.controls.gender)(\"showError\", ctx.showAllErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"paddingTop\", 2);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i3.RouterLink, i6.TextFieldPlaceholderComponent, i7.ChoiceGenderComponent, i8.ErrorParagraphComponent, i9.MiddleControlComponent, i10.TextFieldPasswordPlaceholderComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","User","i0","ɵɵelement","ɵɵproperty","ctx_r0","globalError","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CreateUserComponent","constructor","userService","mailService","router","showAllErrors","sendingMailProcess","form","email","minLength","maxLength","required","password","confirmPassword","firstName","pattern","lastName","phoneNumber","gender","ngOnDestroy","subscriptionTryReg","unsubscribe","subscriptionSendMail","isGlobalErrorSet","submit","anyErrorExists","tryRegisterUser","resetGlobalError","passwordsMatch","doPasswordsMatch","isAnyErrorInFields","createdUser","createUserFromFields","getPasswordFromField","tryRegister","subscribe","result","console","log","success","sendConfirmationEmail","answer","navigateToConfirmRegistrationPage","message","navigationExtras","queryParams","navigate","controls","getRawValue","doesControlHaveError","formControl","errors","ɵɵdirectiveInject","i1","UserService","i2","MailService","i3","Router","selectors","decls","vars","consts","template","CreateUserComponent_Template","rf","ctx","ɵɵlistener","CreateUserComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","CreateUserComponent_app_error_paragraph_1_Template","CreateUserComponent_app_middle_control_2_Template","ɵɵadvance"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-user\\create-user.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\create-user\\create-user.component.html"],"sourcesContent":["import {Component, OnDestroy} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Gender} from \"../../entity/Gender\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {User} from \"../../entity/User\";\r\nimport {NavigationExtras, Router} from \"@angular/router\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {MailService} from \"../../service/mail.service\";\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.css']\r\n})\r\nexport class CreateUserComponent implements OnDestroy {\r\n  private userService: UserService;\r\n  private mailService: MailService;\r\n  private router: Router;\r\n\r\n  private createdUser: User;\r\n\r\n  showAllErrors = false;\r\n  globalError: string = '';\r\n\r\n  sendingMailProcess = false;\r\n\r\n  private subscriptionTryReg: Subscription;\r\n  private subscriptionSendMail: Subscription;\r\n\r\n  form = new FormGroup({\r\n    email: new FormControl<string>('', [\r\n      Validators.email,\r\n      Validators.minLength(5),\r\n      Validators.maxLength(60),\r\n      Validators.required\r\n    ]),\r\n    password: new FormControl<string>('', [\r\n      Validators.minLength(8),\r\n      Validators.maxLength(30),\r\n      Validators.required\r\n    ]),\r\n    confirmPassword: new FormControl<string>('', [\r\n      Validators.minLength(8),\r\n      Validators.maxLength(30),\r\n      Validators.required\r\n    ]),\r\n    firstName: new FormControl<string>('', [\r\n      Validators.minLength(2),\r\n      Validators.maxLength(30),\r\n      Validators.required,\r\n      Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)\r\n    ]),\r\n    lastName: new FormControl<string>('', [\r\n      Validators.minLength(2),\r\n      Validators.maxLength(30),\r\n      Validators.required,\r\n      Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)\r\n    ]),\r\n    phoneNumber: new FormControl<string>('', [\r\n      Validators.required,\r\n      Validators.pattern('^\\\\d{3,15}$'),\r\n      Validators.minLength(3),\r\n      Validators.maxLength(15)\r\n    ]),\r\n    gender: new FormControl<Gender>(null, [\r\n      Validators.required\r\n    ])\r\n  })\r\n\r\n  constructor(userService: UserService,\r\n              mailService: MailService,\r\n              router: Router) {\r\n    this.userService = userService;\r\n    this.mailService = mailService;\r\n    this.router = router;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptionTryReg)\r\n      this.subscriptionTryReg.unsubscribe();\r\n    if (this.subscriptionSendMail)\r\n      this.subscriptionSendMail.unsubscribe();\r\n  }\r\n\r\n  isGlobalErrorSet(): boolean {\r\n    return this.globalError != '';\r\n  }\r\n\r\n  submit() {\r\n    if (this.anyErrorExists())\r\n      return;\r\n\r\n    this.tryRegisterUser();\r\n  }\r\n\r\n  private anyErrorExists(): boolean {\r\n    this.resetGlobalError();\r\n    let passwordsMatch = this.doPasswordsMatch();\r\n\r\n    if (this.isAnyErrorInFields() || !passwordsMatch) {\r\n      if (!passwordsMatch) {\r\n        this.globalError = 'Пароли не совпадают';\r\n      }\r\n      this.showAllErrors = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private tryRegisterUser() {\r\n    this.createdUser = this.createUserFromFields();\r\n    let password = this.getPasswordFromField();\r\n\r\n    this.subscriptionTryReg = this.userService.tryRegister(this.createdUser, password)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n\r\n        if (result.success) {\r\n          this.sendingMailProcess = true;\r\n          this.subscriptionSendMail = this.mailService.sendConfirmationEmail(this.createdUser, password)\r\n            .subscribe(answer => {\r\n              this.sendingMailProcess = false;\r\n              if (answer.success) {\r\n                this.navigateToConfirmRegistrationPage();\r\n              }\r\n              else {\r\n                this.globalError = answer.message;\r\n              }\r\n            });\r\n        }\r\n        else {\r\n          this.globalError = result.message;\r\n        }\r\n      });\r\n  }\r\n\r\n  private navigateToConfirmRegistrationPage() {\r\n    let navigationExtras: NavigationExtras = {\r\n      queryParams: {'first_name': this.createdUser.firstName,\r\n                    'last_name': this.createdUser.lastName,\r\n                    'email': this.createdUser.email}\r\n    };\r\n\r\n    this.router.navigate(['/confirm-registration'], navigationExtras);\r\n  }\r\n\r\n  private resetGlobalError() {\r\n    this.globalError = '';\r\n  }\r\n\r\n  private createUserFromFields(): User {\r\n    let email = this.form.controls.email.getRawValue();\r\n    let firstName = this.form.controls.firstName.getRawValue();\r\n    let lastName = this.form.controls.lastName.getRawValue();\r\n    let phoneNumber = this.form.controls.phoneNumber.getRawValue();\r\n    let gender = this.form.controls.gender.getRawValue();\r\n\r\n    return new User(null, email, firstName, lastName, phoneNumber,\r\n      null, gender);\r\n  }\r\n\r\n  private getPasswordFromField(): string {\r\n    return this.form.controls.password.getRawValue();\r\n  }\r\n\r\n  private isAnyErrorInFields(): boolean {\r\n    return this.doesControlHaveError(this.form.controls.email) ||\r\n      this.doesControlHaveError(this.form.controls.password) ||\r\n      this.doesControlHaveError(this.form.controls.confirmPassword) ||\r\n      this.doesControlHaveError(this.form.controls.firstName) ||\r\n      this.doesControlHaveError(this.form.controls.lastName) ||\r\n      this.doesControlHaveError(this.form.controls.phoneNumber) ||\r\n      this.doesControlHaveError(this.form.controls.gender);\r\n  }\r\n\r\n  private doesControlHaveError(formControl: FormControl): boolean {\r\n    return formControl.errors != null;\r\n  }\r\n\r\n  private doPasswordsMatch(): boolean {\r\n    let password = this.form.controls.password.getRawValue();\r\n    let confirmPassword = this.form.controls.confirmPassword.getRawValue();\r\n    return password == confirmPassword;\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <app-error-paragraph\r\n    *ngIf=\"isGlobalErrorSet()\"\r\n    [errorMessage]=\"globalError\"\r\n  ></app-error-paragraph>\r\n\r\n  <app-middle-control *ngIf=\"sendingMailProcess\">\r\n    <span class=\"text-blue-500 fs-6 fw-bold\">\r\n      Выполняется отправка письма на ваш Email...\r\n    </span>\r\n  </app-middle-control>\r\n\r\n  <app-text-field-placeholder\r\n    placeholder=\"Email\"\r\n    [formElement]=\"form.controls.email\"\r\n    [showError]=\"showAllErrors\"\r\n  ></app-text-field-placeholder>\r\n\r\n  <app-text-field-password-placeholder\r\n    placeholder=\"Пароль\"\r\n    [formElement]=\"form.controls.password\"\r\n    [showError]=\"showAllErrors\"\r\n  ></app-text-field-password-placeholder>\r\n\r\n  <app-text-field-password-placeholder\r\n    placeholder=\"Подтверждение пароля\"\r\n    [formElement]=\"form.controls.confirmPassword\"\r\n    [showError]=\"showAllErrors\"\r\n  ></app-text-field-password-placeholder>\r\n\r\n  <app-text-field-placeholder\r\n    placeholder=\"Имя\"\r\n    [formElement]=\"form.controls.firstName\"\r\n    [showError]=\"showAllErrors\"\r\n    additionalNote=\"имя может состоять только из букв, пробелов и дефисов\"\r\n  ></app-text-field-placeholder>\r\n\r\n  <app-text-field-placeholder\r\n    placeholder=\"Фамилия\"\r\n    [formElement]=\"form.controls.lastName\"\r\n    [showError]=\"showAllErrors\"\r\n    additionalNote=\"фамилия может состоять только из букв, пробелов и дефисов\"\r\n  ></app-text-field-placeholder>\r\n\r\n  <app-text-field-placeholder\r\n    placeholder=\"Номер телефона\"\r\n    [formElement]=\"form.controls.phoneNumber\"\r\n    [showError]=\"showAllErrors\"\r\n    additionalNote=\"номер телефона задаётся без знака + и может состоять только из цифр\"\r\n  ></app-text-field-placeholder>\r\n\r\n  <app-choice-gender\r\n    fieldName=\"Пол\"\r\n    [formElement]=\"form.controls.gender\"\r\n    [showError]=\"showAllErrors\"\r\n  ></app-choice-gender>\r\n\r\n  <app-middle-control\r\n    [paddingTop]=\"2\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"button-red-rounded\"\r\n    >Зарегистрироваться</button>\r\n  </app-middle-control>\r\n\r\n  <p class=\"text-center fs-6 pt-3\">\r\n    <span class=\"text-black\">Уже есть аккаунт? </span>\r\n    <a routerLink=\"/login\" class=\"blue-bold-link-text\">Войти</a>\r\n  </p>\r\n\r\n</form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}