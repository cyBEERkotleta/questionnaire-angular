{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterFormsPipe {\n  transform(forms, search) {\n    if (!forms) return [];\n    return forms.filter(f => this.topicFitsBySearchStr(f, search));\n  }\n  topicFitsBySearchStr(f, search) {\n    let searchLower = search.toLowerCase();\n    return f.name.toLowerCase().includes(searchLower);\n  }\n}\nFilterFormsPipe.ɵfac = function FilterFormsPipe_Factory(t) {\n  return new (t || FilterFormsPipe)();\n};\nFilterFormsPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filterForms\",\n  type: FilterFormsPipe,\n  pure: true\n});","map":{"version":3,"names":["FilterFormsPipe","transform","forms","search","filter","f","topicFitsBySearchStr","searchLower","toLowerCase","name","includes","pure"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\pipes\\filter-forms.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport {Form} from \"../entity/Form\";\r\n\r\n@Pipe({\r\n  name: 'filterForms'\r\n})\r\nexport class FilterFormsPipe implements PipeTransform {\r\n\r\n  transform(forms: Form[], search: string): Form[] {\r\n    if (!forms)\r\n      return [];\r\n    return forms.filter(f => this.topicFitsBySearchStr(f, search));\r\n  }\r\n\r\n  private topicFitsBySearchStr(f: Form, search: string): boolean {\r\n    let searchLower = search.toLowerCase();\r\n    return f.name.toLowerCase().includes(searchLower);\r\n  }\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,eAAe;EAE1BC,SAASA,CAACC,KAAa,EAAEC,MAAc;IACrC,IAAI,CAACD,KAAK,EACR,OAAO,EAAE;IACX,OAAOA,KAAK,CAACE,MAAM,CAACC,CAAC,IAAI,IAAI,CAACC,oBAAoB,CAACD,CAAC,EAAEF,MAAM,CAAC,CAAC;EAChE;EAEQG,oBAAoBA,CAACD,CAAO,EAAEF,MAAc;IAClD,IAAII,WAAW,GAAGJ,MAAM,CAACK,WAAW,EAAE;IACtC,OAAOH,CAAC,CAACI,IAAI,CAACD,WAAW,EAAE,CAACE,QAAQ,CAACH,WAAW,CAAC;EACnD;;AAXWP,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;;QAAfA,eAAe;EAAAW,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}