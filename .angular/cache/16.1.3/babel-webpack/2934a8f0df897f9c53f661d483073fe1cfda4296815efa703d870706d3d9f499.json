{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/user.service\";\nimport * as i2 from \"../../service/session.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../little-components/text-field/text-field.component\";\nimport * as i7 from \"../../little-components/choice-gender/choice-gender.component\";\nimport * as i8 from \"../../little-components/error-paragraph/error-paragraph.component\";\nimport * as i9 from \"../../little-components/middle-control/middle-control.component\";\nfunction UserEditComponent_app_error_paragraph_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-paragraph\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorMessage\", ctx_r0.globalError);\n  }\n}\nexport let UserEditComponent = /*#__PURE__*/(() => {\n  class UserEditComponent {\n    constructor(userService, sessionService, router) {\n      this.showAllErrors = false;\n      this.globalError = '';\n      this.listenerGenderReady = false;\n      this.userLoaded = false;\n      this.form = new FormGroup({\n        firstName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required, Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)]),\n        lastName: new FormControl('', [Validators.minLength(2), Validators.maxLength(30), Validators.required, Validators.pattern(/^[\\p{L}\\s-]{2,30}$/u)]),\n        phoneNumber: new FormControl('', [Validators.required, Validators.pattern('^\\\\d{3,15}$'), Validators.minLength(3), Validators.maxLength(15)]),\n        gender: new FormControl(null, [Validators.required])\n      });\n      this.userService = userService;\n      this.sessionService = sessionService;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.subscriptionGetUser = this.userService.updateCurrentUser().subscribe(result => {\n        this.user = result;\n        this.userLoaded = true;\n        this.updateFormFields();\n      });\n    }\n    ngOnDestroy() {\n      if (this.subscriptionGetUser) this.subscriptionGetUser.unsubscribe();\n      if (this.subscriptionSaveUser) this.subscriptionSaveUser.unsubscribe();\n    }\n    updateFormFields() {\n      this.form.controls.firstName.setValue(this.user.firstName);\n      this.form.controls.lastName.setValue(this.user.lastName);\n      this.form.controls.phoneNumber.setValue(this.user.phoneNumber);\n      if (this.userLoaded && this.listenerGenderReady) this.form.controls.gender.setValue(this.user.gender);\n    }\n    onGenderChoiceReadyToGetValue() {\n      this.listenerGenderReady = true;\n      if (this.userLoaded && this.listenerGenderReady) this.form.controls.gender.setValue(this.user.gender);\n    }\n    isGlobalErrorSet() {\n      return this.globalError != '';\n    }\n    submit() {\n      if (this.anyErrorExists()) return;\n      this.saveChanges();\n    }\n    anyErrorExists() {\n      this.resetGlobalError();\n      if (this.isAnyErrorInFields()) {\n        this.showAllErrors = true;\n        return true;\n      }\n      return false;\n    }\n    saveChanges() {\n      this.updateEditedUserFromFields();\n      this.subscriptionSaveUser = this.userService.saveUser(this.user).subscribe(result => {\n        console.log(result);\n        if (result.success) {\n          this.doTransferProfilePage();\n        } else {\n          this.globalError = result.message;\n        }\n      });\n    }\n    resetGlobalError() {\n      this.globalError = '';\n    }\n    updateEditedUserFromFields() {\n      let firstName = this.form.controls.firstName.getRawValue();\n      let lastName = this.form.controls.lastName.getRawValue();\n      let phoneNumber = this.form.controls.phoneNumber.getRawValue();\n      let gender = this.form.controls.gender.getRawValue();\n      this.user.firstName = firstName;\n      this.user.lastName = lastName;\n      this.user.phoneNumber = phoneNumber;\n      this.user.gender = gender;\n    }\n    isAnyErrorInFields() {\n      return this.doesControlHaveError(this.form.controls.firstName) || this.doesControlHaveError(this.form.controls.lastName) || this.doesControlHaveError(this.form.controls.phoneNumber) || this.doesControlHaveError(this.form.controls.gender);\n    }\n    doesControlHaveError(formControl) {\n      return formControl.errors != null;\n    }\n    doTransferProfilePage() {\n      this.router.navigate(['user-profiles', this.user.id]);\n    }\n  }\n  UserEditComponent.ɵfac = function UserEditComponent_Factory(t) {\n    return new (t || UserEditComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.SessionService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  UserEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserEditComponent,\n    selectors: [[\"app-user-edit\"]],\n    decls: 11,\n    vars: 11,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"errorMessage\", 4, \"ngIf\"], [\"fieldName\", \"\\u0418\\u043C\\u044F\", \"additionalNote\", \"\\u0438\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432 \\u0438 \\u0434\\u0435\\u0444\\u0438\\u0441\\u043E\\u0432\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\", \"additionalNote\", \"\\u0444\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432 \\u0438 \\u0434\\u0435\\u0444\\u0438\\u0441\\u043E\\u0432\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\", \"additionalNote\", \"\\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0437\\u0430\\u0434\\u0430\\u0451\\u0442\\u0441\\u044F \\u0431\\u0435\\u0437 \\u0437\\u043D\\u0430\\u043A\\u0430 + \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0446\\u0438\\u0444\\u0440\", 3, \"formElement\", \"showError\"], [\"fieldName\", \"\\u041F\\u043E\\u043B\", 3, \"formElement\", \"showError\", \"listenerToValueChangeReady\"], [3, \"paddingTop\"], [\"type\", \"submit\", 1, \"button-red-rounded\"], [\"type\", \"button\", 1, \"button-back\", 3, \"click\"], [3, \"errorMessage\"]],\n    template: function UserEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UserEditComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtemplate(1, UserEditComponent_app_error_paragraph_1_Template, 1, 1, \"app-error-paragraph\", 1);\n        i0.ɵɵelement(2, \"app-text-field\", 2)(3, \"app-text-field\", 3)(4, \"app-text-field\", 4);\n        i0.ɵɵelementStart(5, \"app-choice-gender\", 5);\n        i0.ɵɵlistener(\"listenerToValueChangeReady\", function UserEditComponent_Template_app_choice_gender_listenerToValueChangeReady_5_listener() {\n          return ctx.onGenderChoiceReadyToGetValue();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"app-middle-control\", 6)(7, \"button\", 7);\n        i0.ɵɵtext(8, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function UserEditComponent_Template_button_click_9_listener() {\n          return ctx.doTransferProfilePage();\n        });\n        i0.ɵɵtext(10, \"\\u041D\\u0430\\u0437\\u0430\\u0434\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isGlobalErrorSet());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.firstName)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.lastName)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.phoneNumber)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formElement\", ctx.form.controls.gender)(\"showError\", ctx.showAllErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"paddingTop\", 4);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.TextFieldComponent, i7.ChoiceGenderComponent, i8.ErrorParagraphComponent, i9.MiddleControlComponent]\n  });\n  return UserEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}