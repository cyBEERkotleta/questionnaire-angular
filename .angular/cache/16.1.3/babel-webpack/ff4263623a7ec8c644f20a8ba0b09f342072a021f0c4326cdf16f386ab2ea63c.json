{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/random.service\";\nimport * as i2 from \"../../service/word-form.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/questionnaires\", a1];\n};\nfunction FormItemInListComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 1)(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 2);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.getProperties())(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.form.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFormName());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFormQuestionsDescription());\n  }\n}\nexport class FormItemInListComponent {\n  constructor(randomService, wordFormService) {\n    this.colorsFrom = ['#f2a8f5', '#86e796', '#a190e8', '#fcffe0', '#ffcfd7', '#cff0ff', '#44aeeb', '#a3e041', '#ffe0fc', '#c045ed', '#f05d5d', '#d1fff4'];\n    this.colorsTo = ['#faf3ff', '#eafff7', '#e0e0ff', '#fcc92e', '#d94a4a', '#5485e8', '#b3faff', '#fff7cf', '#45ceed', '#cff6ff', '#feffc7', '#5b78e3'];\n    this.randomService = randomService;\n    this.wordFormService = wordFormService;\n  }\n  getFormName() {\n    if (!this.form) return '';\n    return this.form.name;\n  }\n  getFormQuestionsDescription() {\n    if (!this.form) return '';\n    let count = this.fieldCount;\n    let questionStr = this.wordFormService.getQuestionForm(count);\n    return '(' + count + ' ' + questionStr + ')';\n  }\n  getRandomColorIndex() {\n    let min = 0;\n    let max = this.colorsFrom.length - 1;\n    return this.randomService.getRandomNumber(min, max);\n  }\n  getBackgroundProperty(index) {\n    let colorFrom = this.colorsFrom[index];\n    let colorTo = this.colorsTo[index];\n    return 'linear-gradient(to top left, ' + colorFrom + ', ' + colorTo + ')';\n  }\n  getProperties() {\n    let index = this.getRandomColorIndex();\n    return {\n      background: this.getBackgroundProperty(index)\n    };\n  }\n}\nFormItemInListComponent.ɵfac = function FormItemInListComponent_Factory(t) {\n  return new (t || FormItemInListComponent)(i0.ɵɵdirectiveInject(i1.RandomService), i0.ɵɵdirectiveInject(i2.WordFormService));\n};\nFormItemInListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormItemInListComponent,\n  selectors: [[\"app-form-item-in-list\"]],\n  inputs: {\n    form: \"form\",\n    fieldCount: \"fieldCount\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"form-block\", 3, \"ngStyle\", \"routerLink\", 4, \"ngIf\"], [1, \"form-block\", 3, \"ngStyle\", \"routerLink\"], [1, \"text-center\"]],\n  template: function FormItemInListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormItemInListComponent_a_0_Template, 5, 6, \"a\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.form.shown);\n    }\n  },\n  dependencies: [i3.NgIf, i3.NgStyle, i4.RouterLink],\n  styles: [\".form-block[_ngcontent-%COMP%] {\\n  margin: 0.75rem;\\n  display: inline-flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  border-radius: 0.75rem;\\n  padding-top: 1.25rem;\\n  padding-bottom: 1.25rem;\\n  padding-left: 0.75rem;\\n  padding-right: 0.75rem;\\n  vertical-align: middle;\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n  font-weight: 700;\\n  --tw-text-opacity: 1;\\n  color: rgb(0 0 0 / var(--tw-text-opacity));\\n  cursor: pointer;\\n  text-decoration: none;\\n\\n  max-width: 350px; \\n\\n  width: auto; \\n\\n  height: 150px; \\n\\n  word-wrap: break-word; \\n\\n  overflow-wrap: break-word; \\n\\n\\n  transition: text-shadow 0.3s, transform 0.3s;\\n}\\n\\n.form-block[_ngcontent-%COMP%]:hover {\\n  background: white;\\n  box-shadow: 0px 3px 8px 2px #939393;\\n  transform: scale(1.1);\\n}\\n\\n.form-block[_ngcontent-%COMP%]:active {\\n  background: lightgray;\\n  transform: scale(0.95);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JtLWl0ZW0taW4tbGlzdC9mb3JtLWl0ZW0taW4tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQUEsZUFDK0U7RUFEL0Usb0JBQytFO0VBRC9FLHNCQUMrRTtFQUQvRSx1QkFDK0U7RUFEL0Usc0JBQytFO0VBRC9FLG9CQUMrRTtFQUQvRSx1QkFDK0U7RUFEL0UscUJBQytFO0VBRC9FLHNCQUMrRTtFQUQvRSxzQkFDK0U7RUFEL0Usa0JBQytFO0VBRC9FLG9CQUMrRTtFQUQvRSxnQkFDK0U7RUFEL0Usb0JBQytFO0VBRC9FLDBDQUMrRTtFQUMvRSxlQUFlO0VBQ2YscUJBQXFCOztFQUVyQixnQkFBZ0IsRUFBRSw4QkFBOEI7RUFDaEQsV0FBVyxFQUFFLHVEQUF1RDtFQUNwRSxhQUFhLEVBQUUsMEJBQTBCO0VBQ3pDLHFCQUFxQixFQUFFLGlDQUFpQztFQUN4RCx5QkFBeUIsRUFBRSwwQ0FBMEM7O0VBRXJFO0FBVitFOztBQWFqRjtFQUNFLGlCQUFpQjtFQUNqQixtQ0FBbUM7RUFDbkMscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLHNCQUFzQjtBQUN4QiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWJsb2NrIHtcclxuICBAYXBwbHkgdGV4dC1ibGFjayBpbmxpbmUtZmxleFxyXG4gIHJvdW5kZWQteGwgcHktNSBweC0zIGZvbnQtYm9sZCB0ZXh0LXhsIG0tMyBmbGV4LWNvbCBqdXN0aWZ5LWNlbnRlciBhbGlnbi1taWRkbGU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbiAgbWF4LXdpZHRoOiAzNTBweDsgLyogw5DCnMOQwrDDkMK6w5HCgcOQwrjDkMK8w5DCsMOQwrvDkcKMw5DCvcOQwrDDkcKPIMORwojDkMK4w5HCgMOQwrjDkMK9w5DCsCBkaXYtw5DCsCAqL1xyXG4gIHdpZHRoOiBhdXRvOyAvKiDDkMKQw5DCssORwoLDkMK+w5DCvMOQwrDDkcKCw5DCuMORwofDkMK1w5HCgcOQwrrDkMK+w5DCtSDDkcKAw5DCsMORwoHDkcKIw5DCuMORwoDDkMK1w5DCvcOQwrjDkMK1IMORwojDkMK4w5HCgMOQwrjDkMK9w5HCiyDDkMK/w5HCgMOQwrggw5DCvcOQwrXDkMK+w5DCscORwoXDkMK+w5DCtMOQwrjDkMK8w5DCvsORwoHDkcKCw5DCuCAqL1xyXG4gIGhlaWdodDogMTUwcHg7IC8qIMOQwpDDkMKyw5HCgsOQwr7DkMK8w5DCsMORwoLDkMK4w5HCh8OQwrXDkcKBw5DCusOQwrDDkcKPIMOQwrLDkcKLw5HCgcOQwr7DkcKCw5DCsCAqL1xyXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDsgLyogw5DCn8OQwrXDkcKAw5DCtcOQwr3DkMK+w5HCgSDDkcKBw5DCu8OQwr7DkMKyIMOQwr3DkMKwIMOQwr3DkMK+w5DCssORwoPDkcKOIMORwoHDkcKCw5HCgMOQwr7DkMK6w5HCgyAqL1xyXG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7IC8qIMOQwp/DkMK+w5DCtMOQwrTDkMK1w5HCgMOQwrbDkMK6w5DCsCDDkMK/w5DCtcORwoDDkMK1w5DCvcOQwr7DkcKBw5DCsCDDkcKBw5DCu8OQwr7DkMKyIMOQwrTDkMK7w5HCjyDDkMKxw5HCgMOQwrDDkcKDw5DCt8OQwrXDkcKAw5DCvsOQwrIgKi9cclxuXHJcbiAgdHJhbnNpdGlvbjogdGV4dC1zaGFkb3cgMC4zcywgdHJhbnNmb3JtIDAuM3M7XHJcbn1cclxuXHJcbi5mb3JtLWJsb2NrOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3gtc2hhZG93OiAwcHggM3B4IDhweCAycHggIzkzOTM5MztcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbn1cclxuXHJcbi5mb3JtLWJsb2NrOmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZDogbGlnaHRncmF5O1xyXG4gIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","getProperties","ɵɵpureFunction1","_c0","form","id","ɵɵadvance","ɵɵtextInterpolate","getFormName","getFormQuestionsDescription","FormItemInListComponent","constructor","randomService","wordFormService","colorsFrom","colorsTo","name","count","fieldCount","questionStr","getQuestionForm","getRandomColorIndex","min","max","length","getRandomNumber","getBackgroundProperty","index","colorFrom","colorTo","background","ɵɵdirectiveInject","i1","RandomService","i2","WordFormService","selectors","inputs","decls","vars","consts","template","FormItemInListComponent_Template","rf","ctx","ɵɵtemplate","FormItemInListComponent_a_0_Template","shown"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\form-item-in-list\\form-item-in-list.component.ts","C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\components\\form-item-in-list\\form-item-in-list.component.html"],"sourcesContent":["import {Component, Input, OnDestroy} from '@angular/core';\nimport {Form} from \"../../entity/Form\";\nimport {RandomService} from \"../../service/random.service\";\nimport {Params} from \"@angular/router\";\nimport {WordFormService} from \"../../service/word-form.service\";\n\n@Component({\n  selector: 'app-form-item-in-list',\n  templateUrl: './form-item-in-list.component.html',\n  styleUrls: ['./form-item-in-list.component.css']\n})\nexport class FormItemInListComponent {\n  @Input() form: Form;\n  @Input() fieldCount: number;\n\n  private randomService: RandomService;\n  private wordFormService: WordFormService;\n\n  private colorsFrom: string[] = ['#f2a8f5', '#86e796', '#a190e8', '#fcffe0', '#ffcfd7', '#cff0ff', '#44aeeb',\n    '#a3e041', '#ffe0fc', '#c045ed', '#f05d5d', '#d1fff4'];\n  private colorsTo: string[] = ['#faf3ff', '#eafff7', '#e0e0ff', '#fcc92e', '#d94a4a', '#5485e8', '#b3faff',\n    '#fff7cf', '#45ceed', '#cff6ff', '#feffc7', '#5b78e3'];\n\n  constructor(randomService: RandomService,\n              wordFormService: WordFormService) {\n    this.randomService = randomService;\n    this.wordFormService = wordFormService;\n  }\n\n  getFormName(): string {\n    if (!this.form)\n      return '';\n    return this.form.name;\n  }\n\n  getFormQuestionsDescription(): string {\n    if (!this.form)\n      return '';\n    let count = this.fieldCount;\n    let questionStr = this.wordFormService.getQuestionForm(count);\n    return '(' + count + ' ' + questionStr + ')';\n  }\n\n  private getRandomColorIndex(): number {\n    let min = 0;\n    let max = this.colorsFrom.length - 1;\n    return this.randomService.getRandomNumber(min, max);\n  }\n\n  private getBackgroundProperty(index: number): string {\n    let colorFrom = this.colorsFrom[index];\n    let colorTo = this.colorsTo[index];\n    return 'linear-gradient(to top left, ' + colorFrom + ', ' + colorTo +')';\n  }\n\n  getProperties(): Params {\n    let index = this.getRandomColorIndex();\n    return {background: this.getBackgroundProperty(index)};\n  }\n}\n","<a *ngIf=\"form.shown\"\n  class=\"form-block\"\n   [ngStyle]=\"getProperties()\"\n   [routerLink]=\"['/questionnaires', form.id]\"\n>\n  <span class=\"text-center\">{{getFormName()}}</span>\n  <span class=\"text-center\">{{getFormQuestionsDescription()}}</span>\n</a>\n"],"mappings":";;;;;;;;;;ICAAA,EAAA,CAAAC,cAAA,WAIC;IAC2BD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAClDH,EAAA,CAAAC,cAAA,cAA0B;IAAAD,EAAA,CAAAE,MAAA,GAAiC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAJjEH,EAAA,CAAAI,UAAA,YAAAC,MAAA,CAAAC,aAAA,GAA2B,eAAAN,EAAA,CAAAO,eAAA,IAAAC,GAAA,EAAAH,MAAA,CAAAI,IAAA,CAAAC,EAAA;IAGFV,EAAA,CAAAW,SAAA,GAAiB;IAAjBX,EAAA,CAAAY,iBAAA,CAAAP,MAAA,CAAAQ,WAAA,GAAiB;IACjBb,EAAA,CAAAW,SAAA,GAAiC;IAAjCX,EAAA,CAAAY,iBAAA,CAAAP,MAAA,CAAAS,2BAAA,GAAiC;;;ADK7D,OAAM,MAAOC,uBAAuB;EAYlCC,YAAYC,aAA4B,EAC5BC,eAAgC;IANpC,KAAAC,UAAU,GAAa,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACzG,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAChD,KAAAC,QAAQ,GAAa,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACvG,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAItD,IAAI,CAACH,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,eAAe,GAAGA,eAAe;EACxC;EAEAL,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACJ,IAAI,EACZ,OAAO,EAAE;IACX,OAAO,IAAI,CAACA,IAAI,CAACY,IAAI;EACvB;EAEAP,2BAA2BA,CAAA;IACzB,IAAI,CAAC,IAAI,CAACL,IAAI,EACZ,OAAO,EAAE;IACX,IAAIa,KAAK,GAAG,IAAI,CAACC,UAAU;IAC3B,IAAIC,WAAW,GAAG,IAAI,CAACN,eAAe,CAACO,eAAe,CAACH,KAAK,CAAC;IAC7D,OAAO,GAAG,GAAGA,KAAK,GAAG,GAAG,GAAGE,WAAW,GAAG,GAAG;EAC9C;EAEQE,mBAAmBA,CAAA;IACzB,IAAIC,GAAG,GAAG,CAAC;IACX,IAAIC,GAAG,GAAG,IAAI,CAACT,UAAU,CAACU,MAAM,GAAG,CAAC;IACpC,OAAO,IAAI,CAACZ,aAAa,CAACa,eAAe,CAACH,GAAG,EAAEC,GAAG,CAAC;EACrD;EAEQG,qBAAqBA,CAACC,KAAa;IACzC,IAAIC,SAAS,GAAG,IAAI,CAACd,UAAU,CAACa,KAAK,CAAC;IACtC,IAAIE,OAAO,GAAG,IAAI,CAACd,QAAQ,CAACY,KAAK,CAAC;IAClC,OAAO,+BAA+B,GAAGC,SAAS,GAAG,IAAI,GAAGC,OAAO,GAAE,GAAG;EAC1E;EAEA5B,aAAaA,CAAA;IACX,IAAI0B,KAAK,GAAG,IAAI,CAACN,mBAAmB,EAAE;IACtC,OAAO;MAACS,UAAU,EAAE,IAAI,CAACJ,qBAAqB,CAACC,KAAK;IAAC,CAAC;EACxD;;AA/CWjB,uBAAuB,C;mBAAvBA,uBAAuB,EAAAf,EAAA,CAAAoC,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAtC,EAAA,CAAAoC,iBAAA,CAAAG,EAAA,CAAAC,eAAA;AAAA;AAAvBzB,uBAAuB,C;QAAvBA,uBAAuB;EAAA0B,SAAA;EAAAC,MAAA;IAAAjC,IAAA;IAAAc,UAAA;EAAA;EAAAoB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXpChD,EAAA,CAAAkD,UAAA,IAAAC,oCAAA,eAOI;;;MAPAnD,EAAA,CAAAI,UAAA,SAAA6C,GAAA,CAAAxC,IAAA,CAAA2C,KAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}