{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SessionService {\n  constructor() {\n    this.TOKEN_KEY = 'token';\n  }\n  saveTokenToLocalStorage(token) {\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n  saveTokenToSessionStorage(token) {\n    sessionStorage.setItem(this.TOKEN_KEY, token);\n  }\n  updateTokenWhereItWasSet(token) {\n    if (this.getTokenFromSessionStorage() != null) this.saveTokenToSessionStorage(token);\n    if (this.getTokenFromLocalStorage() != null) this.saveTokenToLocalStorage(token);\n  }\n  getTokenFromLocalStorage() {\n    return localStorage.getItem(this.TOKEN_KEY);\n  }\n  getTokenFromSessionStorage() {\n    return sessionStorage.getItem(this.TOKEN_KEY);\n  }\n  getToken() {\n    let token = this.getTokenFromSessionStorage();\n    if (token != null) {\n      console.log('token: ' + token);\n      return token;\n    }\n    token = this.getTokenFromLocalStorage();\n    if (token != null) {\n      this.saveTokenToSessionStorage(token);\n      console.log('token: ' + token);\n      return token;\n    }\n    console.log('token: ' + token);\n    return '';\n  }\n  isValid(token) {\n    return !!token;\n  }\n  removeTokenFromLocalStorage() {\n    localStorage.removeItem(this.TOKEN_KEY);\n  }\n}\nSessionService.ɵfac = function SessionService_Factory(t) {\n  return new (t || SessionService)();\n};\nSessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionService,\n  factory: SessionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SessionService","constructor","TOKEN_KEY","saveTokenToLocalStorage","token","localStorage","setItem","saveTokenToSessionStorage","sessionStorage","updateTokenWhereItWasSet","getTokenFromSessionStorage","getTokenFromLocalStorage","getItem","getToken","console","log","isValid","removeTokenFromLocalStorage","removeItem","factory","ɵfac","providedIn"],"sources":["C:\\Важное\\6 семестр =)\\Практыка\\Проект\\questionnaire\\angular-questionnaire\\src\\app\\service\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  private TOKEN_KEY = 'token';\n\n  saveTokenToLocalStorage(token: string){\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  saveTokenToSessionStorage(token: string) {\n    sessionStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  updateTokenWhereItWasSet(token: string) {\n    if (this.getTokenFromSessionStorage() != null)\n      this.saveTokenToSessionStorage(token);\n    if (this.getTokenFromLocalStorage() != null)\n      this.saveTokenToLocalStorage(token);\n  }\n\n  getTokenFromLocalStorage() {\n    return localStorage.getItem(this.TOKEN_KEY);\n  }\n\n  getTokenFromSessionStorage() {\n    return sessionStorage.getItem(this.TOKEN_KEY);\n  }\n\n  getToken() {\n    let token = this.getTokenFromSessionStorage();\n    if (token != null) {\n      console.log('token: ' + token);\n      return token;\n    }\n    token = this.getTokenFromLocalStorage();\n    if (token != null) {\n      this.saveTokenToSessionStorage(token);\n      console.log('token: ' + token);\n      return token;\n    }\n    console.log('token: ' + token);\n    return '';\n  }\n\n  private isValid(token: string): boolean {\n    return !!token;\n  }\n\n  removeTokenFromLocalStorage(){\n    localStorage.removeItem(this.TOKEN_KEY);\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EAH3BC,YAAA;IAIU,KAAAC,SAAS,GAAG,OAAO;;EAE3BC,uBAAuBA,CAACC,KAAa;IACnCC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACJ,SAAS,EAAEE,KAAK,CAAC;EAC7C;EAEAG,yBAAyBA,CAACH,KAAa;IACrCI,cAAc,CAACF,OAAO,CAAC,IAAI,CAACJ,SAAS,EAAEE,KAAK,CAAC;EAC/C;EAEAK,wBAAwBA,CAACL,KAAa;IACpC,IAAI,IAAI,CAACM,0BAA0B,EAAE,IAAI,IAAI,EAC3C,IAAI,CAACH,yBAAyB,CAACH,KAAK,CAAC;IACvC,IAAI,IAAI,CAACO,wBAAwB,EAAE,IAAI,IAAI,EACzC,IAAI,CAACR,uBAAuB,CAACC,KAAK,CAAC;EACvC;EAEAO,wBAAwBA,CAAA;IACtB,OAAON,YAAY,CAACO,OAAO,CAAC,IAAI,CAACV,SAAS,CAAC;EAC7C;EAEAQ,0BAA0BA,CAAA;IACxB,OAAOF,cAAc,CAACI,OAAO,CAAC,IAAI,CAACV,SAAS,CAAC;EAC/C;EAEAW,QAAQA,CAAA;IACN,IAAIT,KAAK,GAAG,IAAI,CAACM,0BAA0B,EAAE;IAC7C,IAAIN,KAAK,IAAI,IAAI,EAAE;MACjBU,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGX,KAAK,CAAC;MAC9B,OAAOA,KAAK;;IAEdA,KAAK,GAAG,IAAI,CAACO,wBAAwB,EAAE;IACvC,IAAIP,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI,CAACG,yBAAyB,CAACH,KAAK,CAAC;MACrCU,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGX,KAAK,CAAC;MAC9B,OAAOA,KAAK;;IAEdU,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGX,KAAK,CAAC;IAC9B,OAAO,EAAE;EACX;EAEQY,OAAOA,CAACZ,KAAa;IAC3B,OAAO,CAAC,CAACA,KAAK;EAChB;EAEAa,2BAA2BA,CAAA;IACzBZ,YAAY,CAACa,UAAU,CAAC,IAAI,CAAChB,SAAS,CAAC;EACzC;;AAhDWF,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}